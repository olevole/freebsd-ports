diff --git a/app/app.gyp b/app/app.gyp
index a0bccad..bc52216 100644
--- a/app/app.gyp
+++ b/app/app.gyp
@@ -64,7 +64,7 @@
         '..',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
diff --git a/app/app_base.gypi b/app/app_base.gypi
index f8c86ca..1a9c0e8 100644
--- a/app/app_base.gypi
+++ b/app/app_base.gypi
@@ -42,7 +42,7 @@
               'win_util.h',
             ],
           }],
-          ['OS!="linux"', {
+          ['OS!="linux" and OS!="freebsd"', {
             'sources!': [
               'gfx/gtk_util.cc',
               'gfx/gtk_util.h',
@@ -196,7 +196,7 @@
         'throb_animation.h',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             # font_gtk.cc uses fontconfig.
             # TODO(evanm): I think this is wrong; it should just use GTK.
diff --git a/app/clipboard/clipboard.cc b/app/clipboard/clipboard.cc
index 9c13010..9219552 100644
--- a/app/clipboard/clipboard.cc
+++ b/app/clipboard/clipboard.cc
@@ -48,12 +48,12 @@ void Clipboard::DispatchObject(ObjectType type, const ObjectMapParams& params) {
       WriteBitmap(&(params[0].front()), &(params[1].front()));
       break;
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
     case CBF_DATA:
       WriteData(&(params[0].front()), params[0].size(),
                 &(params[1].front()), params[1].size());
       break;
-#endif  // defined(OS_WIN) || defined(OS_LINUX)
+#endif  // defined(OS_WIN) || defined(OS_NIX)
 
     default:
       NOTREACHED();
diff --git a/app/clipboard/clipboard.h b/app/clipboard/clipboard.h
index 80a35e6..9731d6f 100644
--- a/app/clipboard/clipboard.h
+++ b/app/clipboard/clipboard.h
@@ -76,7 +76,7 @@ class Clipboard {
   // functions accept a buffer parameter.
   enum Buffer {
     BUFFER_STANDARD,
-#if defined(OS_LINUX)
+#if defined(USE_X11)
     BUFFER_SELECTION,
 #endif
   };
@@ -85,7 +85,7 @@ class Clipboard {
     switch (buffer) {
       case BUFFER_STANDARD:
         return true;
-#if defined(OS_LINUX)
+#if defined(USE_X11)
       case BUFFER_SELECTION:
         return true;
 #endif
@@ -114,9 +114,9 @@ class Clipboard {
 
   // On Linux, we need to know when the clipboard is set to a URL.  Most
   // platforms don't care.
-#if !defined(OS_LINUX)
+#if !defined(TOOLKIT_GTK)
   void DidWriteURL(const std::string& utf8_text) {}
-#else  // !defined(OS_LINUX)
+#else  // !defined(TOOLKIT_GTK)
   void DidWriteURL(const std::string& utf8_text);
 #endif
 
@@ -193,7 +193,7 @@ class Clipboard {
 
   void WriteBitmap(const char* pixel_data, const char* size_data);
 
-#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_WIN) || defined(OS_NIX)
   // |format_name| is an ASCII string and should be NULL-terminated.
   // TODO(estade): port to mac.
   void WriteData(const char* format_name, size_t format_len,
@@ -226,7 +226,7 @@ class Clipboard {
 
   // True if we can create a window.
   bool create_window_;
-#elif defined(USE_X11)
+#elif defined(TOOLKIT_GTK)
   // The public API is via WriteObjects() which dispatches to multiple
   // Write*() calls, but on GTK we must write all the clipboard types
   // in a single GTK call.  To support this we store the current set
diff --git a/app/clipboard/clipboard_unittest.cc b/app/clipboard/clipboard_unittest.cc
index 6f19d97..cd91dd0 100644
--- a/app/clipboard/clipboard_unittest.cc
+++ b/app/clipboard/clipboard_unittest.cc
@@ -130,7 +130,7 @@ TEST_F(ClipboardTest, TrickyHTMLTest) {
 }
 
 // TODO(estade): Port the following test (decide what target we use for urls)
-#if !defined(OS_LINUX)
+#if !defined(OS_NIX)
 TEST_F(ClipboardTest, BookmarkTest) {
   Clipboard clipboard;
 
@@ -213,7 +213,7 @@ TEST_F(ClipboardTest, URLTest) {
 #endif  // defined(OS_LINUX)
 }
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
 TEST_F(ClipboardTest, DataTest) {
   Clipboard clipboard;
   const char* format = "chromium/x-test-format";
diff --git a/app/drag_drop_types.h b/app/drag_drop_types.h
index 011d386..e3e51d0 100644
--- a/app/drag_drop_types.h
+++ b/app/drag_drop_types.h
@@ -21,7 +21,7 @@ class DragDropTypes {
 #if defined(OS_WIN)
   static uint32 DragOperationToDropEffect(int drag_operation);
   static int DropEffectToDragOperation(uint32 effect);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   static int DragOperationToGdkDragAction(int drag_operation);
   static int GdkDragActionToDragOperation(int gdk_drag_action);
 #endif
diff --git a/app/gfx/blit.cc b/app/gfx/blit.cc
index 359e142..bec9232 100644
--- a/app/gfx/blit.cc
+++ b/app/gfx/blit.cc
@@ -4,7 +4,7 @@
 
 #include "app/gfx/blit.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <cairo/cairo.h>
 #endif
 
@@ -45,7 +45,7 @@ void BlitContextToContext(NativeDrawingContext dst_context,
   scoped_cftyperef<CGImageRef> src_sub_image(
       CGImageCreateWithImageInRect(src_image, src_rect.ToCGRect()));
   CGContextDrawImage(dst_context, dst_rect.ToCGRect(), src_sub_image);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   // Only translations in the source context are supported; more complex
   // source context transforms will be ignored.
   cairo_save(dst_context);
@@ -69,7 +69,7 @@ static NativeDrawingContext GetContextFromCanvas(
   return device.getBitmapDC();
 #elif defined(OS_MACOSX)
   return device.GetBitmapContext();
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   return device.beginPlatformPaint();
 #endif
 }
diff --git a/app/gfx/canvas.h b/app/gfx/canvas.h
index e6b07a1..5fc6b0d 100644
--- a/app/gfx/canvas.h
+++ b/app/gfx/canvas.h
@@ -14,7 +14,7 @@
 #include "base/basictypes.h"
 #include "skia/ext/platform_canvas.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 typedef struct _cairo cairo_t;
 typedef struct _GdkPixbuf GdkPixbuf;
 #endif
@@ -192,7 +192,7 @@ class Canvas : public skia::PlatformCanvas {
   // Extracts a bitmap from the contents of this canvas.
   SkBitmap ExtractBitmap() const;
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   // Applies current matrix on the canvas to the cairo context. This should be
   // invoked anytime you plan on drawing directly to the cairo context. Be
   // sure and set the matrix back to the identity when done.
diff --git a/app/gfx/font.h b/app/gfx/font.h
index 6be42ee..ab82937 100644
--- a/app/gfx/font.h
+++ b/app/gfx/font.h
@@ -11,7 +11,7 @@
 
 #if defined(OS_WIN)
 typedef struct HFONT__* HFONT;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "third_party/skia/include/core/SkRefCnt.h"
 class SkPaint;
 class SkTypeface;
@@ -26,7 +26,7 @@ typedef struct HFONT__* NativeFont;
 class NSFont;
 #endif
 typedef NSFont* NativeFont;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 typedef struct _PangoFontDescription PangoFontDescription;
 class SkTypeface;
 typedef SkTypeface* NativeFont;
@@ -127,7 +127,7 @@ class Font {
   int vertical_dlus_to_pixels(int dlus) {
     return dlus * font_ref_->height() / 8;
   }
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   static Font CreateFont(PangoFontDescription* desc);
   // We need a copy constructor and assignment operator to deal with
   // the Skia reference counting.
@@ -210,7 +210,7 @@ class Font {
 
   // Indirect reference to the HFontRef, which references the underlying HFONT.
   scoped_refptr<HFontRef> font_ref_;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   explicit Font(SkTypeface* typeface, const std::wstring& name,
                 int size, int style);
   // Calculate and cache the font metrics.
diff --git a/app/gfx/insets.h b/app/gfx/insets.h
index 70b3683..1802b41 100644
--- a/app/gfx/insets.h
+++ b/app/gfx/insets.h
@@ -7,7 +7,7 @@
 
 #include "build/build_config.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gtk/gtkstyle.h>
 #endif
 
@@ -28,7 +28,7 @@ class Insets {
         left_(left),
         bottom_(bottom),
         right_(right) {}
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   explicit Insets(const GtkBorder& border)
       : top_(border.top),
         left_(border.left),
diff --git a/app/l10n_util.cc b/app/l10n_util.cc
index 9a24cf9..d44ff74 100644
--- a/app/l10n_util.cc
+++ b/app/l10n_util.cc
@@ -387,7 +387,7 @@ std::string GetSystemLocale() {
   return ret;
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 // Split and normalize the language list specified by LANGUAGE environment.
 // LANGUAGE environment specifies a priority list of user prefered locales for
 // application UI messages. Locales are separated by ':' character. The format
@@ -458,7 +458,7 @@ std::string GetApplicationLocale(const std::wstring& pref_locale) {
 
   // Next, try the system locale.
   candidates.push_back(system_locale);
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   // On Linux, we also check LANGUAGE environment variable, which is supported
   // by gettext to specify a priority list of prefered languages.
   const char* env_language = ::getenv("LANGUAGE");
@@ -902,7 +902,7 @@ void WrapPathWithLTRFormatting(const FilePath& path,
     rtl_safe_path->append(UTF8ToUTF16(path.value()));
 #elif defined(OS_WIN)
     rtl_safe_path->append(path.value());
-#else  // defined(OS_LINUX)
+#else  // defined(OS_NIX)
     std::wstring wide_path = base::SysNativeMBToWide(path.value());
     rtl_safe_path->append(WideToUTF16(wide_path));
 #endif
diff --git a/app/l10n_util_unittest.cc b/app/l10n_util_unittest.cc
index 489e725..bc5d302 100644
--- a/app/l10n_util_unittest.cc
+++ b/app/l10n_util_unittest.cc
@@ -4,7 +4,7 @@
 
 #include "build/build_config.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include <cstdlib>
 #endif
 
@@ -95,7 +95,7 @@ void SetICUDefaultLocale(const std::string& locale_string) {
   EXPECT_TRUE(U_SUCCESS(error_code));
 }
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
 // We are disabling this test on MacOS because GetApplicationLocale() as an
 // API isn't something that we'll easily be able to unit test in this manner.
 // The meaning of that API, on the Mac, is "the locale used by Cocoa's main
@@ -140,7 +140,7 @@ TEST_F(L10nUtilTest, GetAppLocale) {
   // Keep a copy of ICU's default locale before we overwrite it.
   icu::Locale locale = icu::Locale::getDefault();
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Test the support of LANGUAGE environment variable.
   SetICUDefaultLocale("en-US");
   ::setenv("LANGUAGE", "xx:fr_CA", 1);
@@ -246,7 +246,7 @@ TEST_F(L10nUtilTest, GetAppLocale) {
   UErrorCode error_code = U_ZERO_ERROR;
   icu::Locale::setDefault(locale, error_code);
 }
-#endif  // defined(OS_WIN) || defined(OS_LINUX)
+#endif  // defined(OS_WIN) || defined(OS_NIX)
 
 TEST_F(L10nUtilTest, SortStringsUsingFunction) {
   std::vector<StringWrapper*> strings;
diff --git a/app/os_exchange_data.h b/app/os_exchange_data.h
index 7efea43..4d06057 100644
--- a/app/os_exchange_data.h
+++ b/app/os_exchange_data.h
@@ -13,7 +13,7 @@
 
 #if defined(OS_WIN)
 #include <objidl.h>
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include <gtk/gtk.h>
 #endif
 
@@ -43,7 +43,7 @@ class OSExchangeData {
   // nodes are written using a CustomFormat.
 #if defined(OS_WIN)
   typedef CLIPFORMAT CustomFormat;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   typedef GdkAtom CustomFormat;
 #endif
 
diff --git a/app/resource_bundle_posix.cc b/app/resource_bundle_posix.cc
index 665df25..af61418 100644
--- a/app/resource_bundle_posix.cc
+++ b/app/resource_bundle_posix.cc
@@ -27,7 +27,7 @@ base::DataPack* LoadResourcesDataPak(FilePath resources_pak_path) {
 
 ResourceBundle::~ResourceBundle() {
   FreeImages();
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   FreeGdkPixBufs();
 #endif
   delete locale_resources_data_;
diff --git a/app/resources/app_resources.grd b/app/resources/app_resources.grd
index 7f62b8e..b67de07 100644
--- a/app/resources/app_resources.grd
+++ b/app/resources/app_resources.grd
@@ -31,7 +31,7 @@
         <include name="IDR_MINIMIZE_P" file="minimize_p.png" type="BINDATA" />
       </if>
 
-      <if expr="os == 'linux2'">
+      <if expr="os == 'linux2' or os == 'freebsd7'">
         <!-- Window controls for Linux, in the style of Metacity -->
         <include name="IDR_CLOSE" file="linux_close.png" type="BINDATA" />
         <include name="IDR_CLOSE_H" file="linux_close_h.png" type="BINDATA" />
diff --git a/app/theme_provider.h b/app/theme_provider.h
index 0bd7ae1..efaa775 100644
--- a/app/theme_provider.h
+++ b/app/theme_provider.h
@@ -10,7 +10,7 @@
 #include "base/basictypes.h"
 #include "third_party/skia/include/core/SkColor.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gdk/gdk.h>
 #elif defined(OS_MACOSX)
 #ifdef __OBJC__
@@ -66,7 +66,7 @@ class ThemeProvider {
   // implementations of ThemeProvider. Returns NULL on error.
   virtual RefCountedMemory* GetRawData(int id) const = 0;
 
-#if defined(OS_LINUX) && !defined(TOOLKIT_VIEWS)
+#if defined(TOOLKIT_GTK) && !defined(TOOLKIT_VIEWS)
   // Gets the GdkPixbuf with the specified |id|.  Returns a pointer to a shared
   // instance of the GdkPixbuf.  This shared GdkPixbuf is owned by the theme
   // provider and should not be freed.
diff --git a/base/allocator/allocator.gyp b/base/allocator/allocator.gyp
index 82876ab..c86c7e5 100644
--- a/base/allocator/allocator.gyp
+++ b/base/allocator/allocator.gyp
@@ -310,7 +310,7 @@
             '<(tcmalloc_dir)/src/profiler.cc',
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'sources!': [
             '<(tcmalloc_dir)/src/system-alloc.h',
             '<(tcmalloc_dir)/src/windows/port.cc',
diff --git a/base/base.gyp b/base/base.gyp
index 3726622..7f9f28f 100644
--- a/base/base.gyp
+++ b/base/base.gyp
@@ -219,6 +219,13 @@
         'test/test_file_util_posix.cc',
         'test/test_file_util_win.cc',
       ],
+      'conditions': [
+        [ 'OS == "freebsd"', {
+            # fdatasync is not implemented on FreeBSD
+            'sources/': [ ['exclude', '^test/test_file_util_linux.cc$'] ],
+          },
+        ],
+      ],
     },
     {
       'target_name': 'test_support_perf',
diff --git a/base/base.gypi b/base/base.gypi
index 0c076d4..6c8cf4e 100644
--- a/base/base.gypi
+++ b/base/base.gypi
@@ -377,6 +377,14 @@
                 },
               },
             ],
+            [ 'OS == "linux"', {
+              'link_settings': {
+                'libraries': [
+                  # We need rt for clock_gettime().
+                  '-lrt',
+                ],
+              },
+           }],
           ],
           'dependencies': [
             '../build/util/build_util.gyp:lastchange',
@@ -386,23 +394,23 @@
           'cflags': [
             '-Wno-write-strings',
           ],
-          'link_settings': {
-            'libraries': [
-              # We need rt for clock_gettime().
-              '-lrt',
-            ],
-          },
           'export_dependent_settings': [
             '../build/linux/system.gyp:gtk',
           ],
         },],
         [ 'OS == "freebsd"', {
             'sources!': [
+              'process_linux.cc',
               'directory_watcher_inotify.cc',
             ],
             'sources': [
               'directory_watcher_stub.cc',
             ],
+            'link_settings': {
+              'libraries': [
+                '-L/usr/local/lib -lexecinfo',
+              ],
+            },
           },
         ],
         [ 'OS == "mac"', {
diff --git a/base/command_line.cc b/base/command_line.cc
index 4e3bb3a..35f839c 100644
--- a/base/command_line.cc
+++ b/base/command_line.cc
@@ -200,7 +200,7 @@ void CommandLine::Init(int argc, const char* const* argv) {
 #endif
 }
 
-#if defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
 // static
 void CommandLine::SetProcTitle() {
   // Build a single string which consists of all the arguments separated
diff --git a/base/command_line.h b/base/command_line.h
index 37a6a4e..b49fe0f 100644
--- a/base/command_line.h
+++ b/base/command_line.h
@@ -68,7 +68,7 @@ class CommandLine {
   // line, but it still must be called to set up the command line.
   static void Init(int argc, const char* const* argv);
 
-#if defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
   // Sets the current process' arguments that show in "ps" etc. to those
   // in |current_process_commandline_|. Used by the zygote host so that
   // renderers show up with --type=renderer.
diff --git a/base/debug_util_posix.cc b/base/debug_util_posix.cc
index 20916a0..73b756b 100644
--- a/base/debug_util_posix.cc
+++ b/base/debug_util_posix.cc
@@ -172,7 +172,15 @@ bool DebugUtil::BeingDebugged() {
   return pid_index < status.size() && status[pid_index] != '0';
 }
 
-#endif  // OS_LINUX
+#elif defined(OS_FREEBSD)
+
+bool DebugUtil::BeingDebugged() {
+  // TODO(benl): can we determine this under FreeBSD?
+  NOTIMPLEMENTED();
+  return false;
+}
+
+#endif
 
 // static
 void DebugUtil::BreakDebugger() {
diff --git a/base/debug_util_unittest.cc b/base/debug_util_unittest.cc
index 930e9e0..8d4799b 100644
--- a/base/debug_util_unittest.cc
+++ b/base/debug_util_unittest.cc
@@ -17,12 +17,12 @@ TEST(StackTrace, OutputToStream) {
   trace.OutputToStream(&os);
   std::string backtrace_message = os.str();
 
-#if defined(OS_LINUX) && NDEBUG
+#if defined(OS_NIX) && NDEBUG
   // Stack traces require an extra data table that bloats our binaries,
   // so they're turned off for release builds.  We stop the test here,
   // at least letting us verify that the calls don't crash.
   return;
-#endif  // defined(OS_LINUX) && NDEBUG
+#endif  // defined(OS_NIX) && NDEBUG
 
   size_t frames_found = 0;
   trace.Addresses(&frames_found);
diff --git a/base/file_util_linux.cc b/base/file_util_linux.cc
index 0f9795e..bf9bd97 100644
--- a/base/file_util_linux.cc
+++ b/base/file_util_linux.cc
@@ -25,7 +25,12 @@ bool GetTempDir(FilePath* path) {
 }
 
 bool GetShmemTempDir(FilePath* path) {
+#if defined(OS_LINUX)
   *path = FilePath("/dev/shm");
+#else
+//BSD not sure this is the best way to do this but it works for now
+  *path = FilePath("/tmp");
+#endif
   return true;
 }
 
diff --git a/base/file_util_posix.cc b/base/file_util_posix.cc
index cdf7be9..76f75ba 100644
--- a/base/file_util_posix.cc
+++ b/base/file_util_posix.cc
@@ -85,7 +85,7 @@ int CountFilesCreatedAfter(const FilePath& path,
 
   DIR* dir = opendir(path.value().c_str());
   if (dir) {
-#if !defined(OS_LINUX) && !defined(OS_MACOSX) && !defined(OS_FREEBSD)
+#if !defined(OS_POSIX)
   #error Depending on the definition of struct dirent, additional space for \
       pathname may be needed
 #endif
@@ -634,7 +634,7 @@ bool FileEnumerator::ReadDirectory(std::vector<DirectoryEntryInfo>* entries,
   if (!dir)
     return false;
 
-#if !defined(OS_LINUX) && !defined(OS_MACOSX) && !defined(OS_FREEBSD)
+#if !defined(OS_POSIX)
   #error Depending on the definition of struct dirent, additional space for \
       pathname may be needed
 #endif
diff --git a/base/file_util_unittest.cc b/base/file_util_unittest.cc
index 200c386..35233ba 100644
--- a/base/file_util_unittest.cc
+++ b/base/file_util_unittest.cc
@@ -1373,19 +1373,19 @@ TEST_F(FileUtilTest, Contains) {
   EXPECT_FALSE(file_util::ContainsPath(foo, foobar));
   EXPECT_FALSE(file_util::ContainsPath(foo, foo));
 
-// Platform-specific concerns
+  // Platform-specific concerns.
   FilePath foo_caps(data_dir.Append(FILE_PATH_LITERAL("FOO")));
 #if defined(OS_WIN)
   EXPECT_TRUE(file_util::ContainsPath(foo,
       foo_caps.Append(FILE_PATH_LITERAL("bar.txt"))));
   EXPECT_TRUE(file_util::ContainsPath(foo,
       FilePath(foo.value() + FILE_PATH_LITERAL("/bar.txt"))));
-#elif defined(OS_LINUX)
+#elif defined(OS_MACOSX)
+  // We can't really do this test on OS X since the case-sensitivity of the
+  // filesystem is configurable.
+#elif defined(OS_POSIX)
   EXPECT_FALSE(file_util::ContainsPath(foo,
       foo_caps.Append(FILE_PATH_LITERAL("bar.txt"))));
-#else
-  // We can't really do this test on osx since the case-sensitivity of the
-  // filesystem is configurable.
 #endif
 }
 
diff --git a/base/file_version_info.h b/base/file_version_info.h
index 7e86639..561c324 100644
--- a/base/file_version_info.h
+++ b/base/file_version_info.h
@@ -87,7 +87,7 @@ class FileVersionInfo {
   explicit FileVersionInfo(NSBundle *bundle);
 
   NSBundle *bundle_;
-#elif defined(OS_LINUX)
+#elif defined(OS_POSIX)
   FileVersionInfo();
 #endif
 
diff --git a/base/gfx/rect.cc b/base/gfx/rect.cc
index 2a35575..cc7b471 100644
--- a/base/gfx/rect.cc
+++ b/base/gfx/rect.cc
@@ -8,7 +8,7 @@
 #include <windows.h>
 #elif defined(OS_MACOSX)
 #include <CoreGraphics/CGGeometry.h>
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include <gdk/gdk.h>
 #endif
 
@@ -76,7 +76,7 @@ Rect& Rect::operator=(const CGRect& r) {
   set_height(r.size.height);
   return *this;
 }
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 Rect::Rect(const GdkRectangle& r)
     : origin_(r.x, r.y) {
   set_width(r.width);
@@ -128,7 +128,7 @@ RECT Rect::ToRECT() const {
   r.bottom = bottom();
   return r;
 }
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 GdkRectangle Rect::ToGdkRectangle() const {
   GdkRectangle r = {x(), y(), width(), height()};
   return r;
diff --git a/base/i18n/file_util_icu.cc b/base/i18n/file_util_icu.cc
index 4d33e3a..f62a05e 100644
--- a/base/i18n/file_util_icu.cc
+++ b/base/i18n/file_util_icu.cc
@@ -146,7 +146,7 @@ void ReplaceIllegalCharactersInPath(FilePath::StringType* file_name,
     // Windows uses UTF-16 encoding for filenames.
     U16_NEXT(file_name->data(), cursor, static_cast<int>(file_name->length()),
              code_point);
-#elif defined(OS_LINUX)
+#elif defined(OS_POSIX)
     // Linux doesn't actually define an encoding. It basically allows anything
     // except for a few special ASCII characters.
     unsigned char cur_char = static_cast<unsigned char>((*file_name)[cursor++]);
diff --git a/base/i18n/file_util_icu_unittest.cc b/base/i18n/file_util_icu_unittest.cc
index b46fe55..1da8a93 100644
--- a/base/i18n/file_util_icu_unittest.cc
+++ b/base/i18n/file_util_icu_unittest.cc
@@ -35,7 +35,7 @@ class FileUtilICUTest : public PlatformTest {
   FilePath test_dir_;
 };
 
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
 
 // Linux disallows some evil ASCII characters, but passes all non-ASCII.
 static const struct goodbad_pair {
diff --git a/base/i18n/icu_util.cc b/base/i18n/icu_util.cc
index bccc1ab..066534c 100644
--- a/base/i18n/icu_util.cc
+++ b/base/i18n/icu_util.cc
@@ -31,7 +31,7 @@
 #define ICU_UTIL_DATA_IMPL ICU_UTIL_DATA_SHARED
 #elif defined(OS_MACOSX)
 #define ICU_UTIL_DATA_IMPL ICU_UTIL_DATA_STATIC
-#elif defined(OS_LINUX)
+#elif defined(OS_POSIX)
 #define ICU_UTIL_DATA_IMPL ICU_UTIL_DATA_FILE
 #endif
 
diff --git a/base/linux_util.cc b/base/linux_util.cc
index 8ac2e49..41764b6 100644
--- a/base/linux_util.cc
+++ b/base/linux_util.cc
@@ -201,7 +201,7 @@ FilePath GetHomeDir(EnvironmentVariableGetter* env) {
 std::string GetLinuxDistro() {
 #if defined(OS_CHROMEOS)
   return linux_distro;
-#else  // if defined(OS_LINUX)
+#elif defined(OS_LINUX)
   LinuxDistroHelper* distro_state_singleton = LinuxDistroHelper::Get();
   LinuxDistroState state = distro_state_singleton->State();
   if (STATE_DID_NOT_CHECK == state) {
diff --git a/base/logging.cc b/base/logging.cc
index 706dbb1..985e604 100644
--- a/base/logging.cc
+++ b/base/logging.cc
@@ -18,7 +18,7 @@ typedef HANDLE MutexHandle;
 #include <mach/mach.h>
 #include <mach/mach_time.h>
 #include <mach-o/dyld.h>
-#elif defined(OS_LINUX)
+#elif defined(OS_POSIX)
 #include <sys/syscall.h>
 #include <time.h>
 #endif
@@ -137,6 +137,9 @@ int32 CurrentThreadId() {
   return mach_thread_self();
 #elif defined(OS_LINUX)
   return syscall(__NR_gettid);
+#elif defined(OS_FREEBSD)
+  // TODO(benl): find a better thread ID
+  return reinterpret_cast<int64>(pthread_self());
 #endif
 }
 
@@ -145,7 +148,7 @@ uint64 TickCount() {
   return GetTickCount();
 #elif defined(OS_MACOSX)
   return mach_absolute_time();
-#elif defined(OS_LINUX)
+#elif defined(OS_POSIX)
   struct timespec ts;
   clock_gettime(CLOCK_MONOTONIC, &ts);
 
@@ -226,7 +229,7 @@ bool InitializeLogFileHandle() {
   return true;
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
 int GetLoggingFileDescriptor() {
   // No locking needed, since this is only called by the zygote server,
   // which is single-threaded.
diff --git a/base/logging.h b/base/logging.h
index cac9ca3..1aa1162 100644
--- a/base/logging.h
+++ b/base/logging.h
@@ -153,7 +153,7 @@ void SetMinLogLevel(int level);
 // Gets the current log level.
 int GetMinLogLevel();
 
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
 // Get the file descriptor used for logging.
 // Returns -1 if none open.
 // Needed by ZygoteManager.
diff --git a/base/message_loop.cc b/base/message_loop.cc
index 64913e5..0d81806 100644
--- a/base/message_loop.cc
+++ b/base/message_loop.cc
@@ -20,7 +20,7 @@
 #include "base/message_pump_libevent.h"
 #include "base/third_party/valgrind/valgrind.h"
 #endif
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
 #include "base/message_pump_glib.h"
 #endif
 
@@ -99,9 +99,9 @@ MessageLoop::MessageLoop(Type type)
   if (type_ == TYPE_UI) {
 #if defined(OS_MACOSX)
     pump_ = base::MessagePumpMac::Create();
-#elif defined(OS_LINUX)
+#else
     pump_ = new base::MessagePumpForUI();
-#endif  // OS_LINUX
+#endif
   } else if (type_ == TYPE_IO) {
     pump_ = new base::MessagePumpLibevent();
   } else {
@@ -194,7 +194,7 @@ void MessageLoop::RunInternal() {
 
   StartHistogrammer();
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if !defined(OS_MACOSX)
   if (state_->dispatcher && type() == TYPE_UI) {
     static_cast<base::MessagePumpForUI*>(pump_.get())->
         RunWithDispatcher(this, state_->dispatcher);
@@ -487,7 +487,7 @@ MessageLoop::AutoRunState::AutoRunState(MessageLoop* loop) : loop_(loop) {
 
   // Initialize the other fields:
   quit_received = false;
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if !defined(OS_MACOSX)
   dispatcher = NULL;
 #endif
 }
@@ -591,7 +591,7 @@ void MessageLoopForUI::PumpOutPendingPaintMessages() {
 
 #endif  // defined(OS_WIN)
 
-#if defined(OS_LINUX) || defined(OS_WIN)
+#if !defined(OS_MACOSX)
 void MessageLoopForUI::AddObserver(Observer* observer) {
   pump_ui()->AddObserver(observer);
 }
@@ -605,7 +605,7 @@ void MessageLoopForUI::Run(Dispatcher* dispatcher) {
   state_->dispatcher = dispatcher;
   RunHandler();
 }
-#endif  // defined(OS_LINUX) || defined(OS_WIN)
+#endif  // !defined(OS_MACOSX)
 
 //------------------------------------------------------------------------------
 // MessageLoopForIO
diff --git a/base/message_loop.h b/base/message_loop.h
index fe28179..217c2b4 100644
--- a/base/message_loop.h
+++ b/base/message_loop.h
@@ -22,7 +22,7 @@
 #elif defined(OS_POSIX)
 #include "base/message_pump_libevent.h"
 #endif
-#if defined(OS_LINUX)
+#if defined(USE_X11)
 #include "base/message_pump_glib.h"
 #endif
 
@@ -254,7 +254,7 @@ class MessageLoop : public base::MessagePump::Delegate {
 #if defined(OS_WIN)
   typedef base::MessagePumpWin::Dispatcher Dispatcher;
   typedef base::MessagePumpWin::Observer Observer;
-#elif defined(OS_LINUX)
+#elif !defined(OS_MACOSX)
   typedef base::MessagePumpForUI::Dispatcher Dispatcher;
   typedef base::MessagePumpForUI::Observer Observer;
 #endif
@@ -269,7 +269,7 @@ class MessageLoop : public base::MessagePump::Delegate {
     // once it becomes idle.
     bool quit_received;
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if !defined(OS_MACOSX)
     Dispatcher* dispatcher;
 #endif
   };
@@ -457,7 +457,7 @@ class MessageLoopForUI : public MessageLoop {
   void PumpOutPendingPaintMessages();
 #endif
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if !defined(OS_MACOSX)
   // Please see message_pump_win/message_pump_glib for definitions of these
   // methods.
   void AddObserver(Observer* observer);
@@ -469,7 +469,7 @@ class MessageLoopForUI : public MessageLoop {
   base::MessagePumpForUI* pump_ui() {
     return static_cast<base::MessagePumpForUI*>(pump_.get());
   }
-#endif  // defined(OS_WIN) || defined(OS_LINUX)
+#endif  // defined(OS_MACOSX)
 };
 
 // Do not add any member variables to MessageLoopForUI!  This is important b/c
diff --git a/base/message_loop_unittest.cc b/base/message_loop_unittest.cc
index 16d1c1a..74491ce 100644
--- a/base/message_loop_unittest.cc
+++ b/base/message_loop_unittest.cc
@@ -1502,4 +1502,4 @@ TEST(MessageLoopTest, FileDescriptorWatcherDoubleStop) {
   close(pipefds[1]);
 }
 
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_POSIX)
diff --git a/base/mime_util.h b/base/mime_util.h
index 7e1593b..58cb630 100644
--- a/base/mime_util.h
+++ b/base/mime_util.h
@@ -20,7 +20,7 @@ std::string GetFileMimeType(const FilePath& filepath);
 // Get the mime type for a byte vector.
 std::string GetDataMimeType(const std::string& data);
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 // This detects the current GTK theme by calling gtk_settings_get_default().
 // It should only be executed on the UI thread and must be called before
 // GetMimeIcon().
diff --git a/base/native_library.h b/base/native_library.h
index dc4000b..182b3ed 100644
--- a/base/native_library.h
+++ b/base/native_library.h
@@ -44,7 +44,7 @@ struct NativeLibraryStruct {
   };
 };
 typedef NativeLibraryStruct* NativeLibrary;
-#elif defined(OS_LINUX) || defined(OS_FREEBSD)
+#elif defined(OS_POSIX)
 typedef void* NativeLibrary;
 #endif  // OS_*
 
diff --git a/base/platform_thread_posix.cc b/base/platform_thread_posix.cc
index 3789715..73d289f 100644
--- a/base/platform_thread_posix.cc
+++ b/base/platform_thread_posix.cc
@@ -9,7 +9,7 @@
 
 #if defined(OS_MACOSX)
 #include <mach/mach.h>
-#elif defined(OS_LINUX)
+#else
 #include <sys/syscall.h>
 #include <unistd.h>
 #endif
@@ -35,6 +35,9 @@ PlatformThreadId PlatformThread::CurrentId() {
   return mach_thread_self();
 #elif defined(OS_LINUX)
   return syscall(__NR_gettid);
+#elif defined(OS_FREEBSD)
+  // TODO(benl): find a better thread ID
+  return reinterpret_cast<int64>(pthread_self());
 #endif
 }
 
diff --git a/base/process.h b/base/process.h
index 53512ce..6ac29e9 100644
--- a/base/process.h
+++ b/base/process.h
@@ -29,7 +29,7 @@ typedef pid_t ProcessId;
 const ProcessHandle kNullProcessHandle = 0;
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
 // saved_priority_ will be set to this to indicate that it's not holding
 // a valid value. -20 to 19 are valid process priorities.
 const int kUnsetProcessPriority = 256;
@@ -38,13 +38,13 @@ const int kUnsetProcessPriority = 256;
 class Process {
  public:
   Process() : process_(kNullProcessHandle) {
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
     saved_priority_ = kUnsetProcessPriority;
 #endif
   }
 
   explicit Process(ProcessHandle handle) : process_(handle) {
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
     saved_priority_ = kUnsetProcessPriority;
 #endif
   }
@@ -57,7 +57,7 @@ class Process {
   ProcessHandle handle() const { return process_; }
   void set_handle(ProcessHandle handle) {
     process_ = handle;
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
     saved_priority_ = kUnsetProcessPriority;
 #endif
   }
@@ -93,7 +93,7 @@ class Process {
 
  private:
   ProcessHandle process_;
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
   // Holds the priority that the process was set to when it was backgrounded.
   // If the process wasn't backgrounded it will be kUnsetProcessPriority.
   int saved_priority_;
diff --git a/base/process_util.h b/base/process_util.h
index 2bb5396..2ca810a 100644
--- a/base/process_util.h
+++ b/base/process_util.h
@@ -443,7 +443,7 @@ class ProcessMetrics {
   int64 last_time_;
   int64 last_system_time_;
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Jiffie count at the last_time_ we updated.
   int last_cpu_;
 #endif
diff --git a/base/process_util_posix.cc b/base/process_util_posix.cc
index 16469db..daa0e63 100644
--- a/base/process_util_posix.cc
+++ b/base/process_util_posix.cc
@@ -369,7 +369,7 @@ ProcessMetrics::ProcessMetrics(ProcessHandle process,
     : process_(process),
       last_time_(0),
       last_system_time_(0)
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       , last_cpu_(0)
 #elif defined (OS_MACOSX)
       , port_provider_(port_provider)
diff --git a/base/process_util_unittest.cc b/base/process_util_unittest.cc
index fe28502..8bbd784 100644
--- a/base/process_util_unittest.cc
+++ b/base/process_util_unittest.cc
@@ -22,6 +22,7 @@
 #endif
 #if defined(OS_POSIX)
 #include <fcntl.h>
+#include <sys/resource.h>
 #include <sys/socket.h>
 #endif
 #if defined(OS_WIN)
diff --git a/base/scoped_handle.h b/base/scoped_handle.h
index 913271d..532e103 100644
--- a/base/scoped_handle.h
+++ b/base/scoped_handle.h
@@ -11,7 +11,7 @@
 
 #if defined(OS_WIN)
 #include "base/scoped_handle_win.h"
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
 #include "base/scoped_handle_gtk.h"
 #endif
 
diff --git a/base/sys_info.h b/base/sys_info.h
index 7460fe0..415dc81 100644
--- a/base/sys_info.h
+++ b/base/sys_info.h
@@ -67,7 +67,7 @@ class SysInfo {
   // allocate.
   static size_t VMAllocationGranularity();
 
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
   // Returns the maximum SysV shared memory segment size.
   static size_t MaxSharedMemorySize();
 #endif
diff --git a/base/sys_info_freebsd.cc b/base/sys_info_freebsd.cc
index 4d375a7..83998fb 100644
--- a/base/sys_info_freebsd.cc
+++ b/base/sys_info_freebsd.cc
@@ -3,6 +3,7 @@
 // found in the LICENSE file.
 
 #include "base/sys_info.h"
+#include <sys/sysctl.h>
 
 #include "base/logging.h"
 
diff --git a/base/sys_info_posix.cc b/base/sys_info_posix.cc
index af33331..b2526ba 100644
--- a/base/sys_info_posix.cc
+++ b/base/sys_info_posix.cc
@@ -6,7 +6,9 @@
 
 #include <errno.h>
 #include <string.h>
+#include <sys/param.h>
 #include <sys/statvfs.h>
+#include <sys/sysctl.h>
 #include <sys/utsname.h>
 #include <unistd.h>
 
@@ -14,11 +16,6 @@
 #include <gdk/gdk.h>
 #endif
 
-#if defined(OS_OPENBSD)
-#include <sys/param.h>
-#include <sys/sysctl.h>
-#endif
-
 #include "base/basictypes.h"
 #include "base/file_util.h"
 #include "base/logging.h"
diff --git a/base/test/test_file_util_posix.cc b/base/test/test_file_util_posix.cc
index 8f7d69d..876e882 100644
--- a/base/test/test_file_util_posix.cc
+++ b/base/test/test_file_util_posix.cc
@@ -5,6 +5,7 @@
 #include "base/test/test_file_util.h"
 
 #include <errno.h>
+#include <fcntl.h>
 #include <sys/types.h>
 #include <sys/stat.h>
 
@@ -100,4 +101,12 @@ bool CopyRecursiveDirNoCache(const FilePath& source_dir,
   return success;
 }
 
+#if !defined(OS_LINUX) && !defined(OS_MACOSX)
+bool EvictFileFromSystemCache(const FilePath& file) {
+  // There doesn't seem to be a POSIX way to cool the disk cache.
+  NOTIMPLEMENTED();
+  return false;
+}
+#endif
+
 }  // namespace file_util
diff --git a/base/test/test_suite.h b/base/test/test_suite.h
index 03cbca2..0c94604 100644
--- a/base/test/test_suite.h
+++ b/base/test/test_suite.h
@@ -23,7 +23,7 @@
 #include "testing/gtest/include/gtest/gtest.h"
 #include "testing/multiprocess_func_list.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gtk/gtk.h>
 #endif
 
@@ -55,7 +55,7 @@ class TestSuite {
     base::EnableTerminationOnHeapCorruption();
     CommandLine::Init(argc, argv);
     testing::InitGoogleTest(&argc, argv);
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
     g_thread_init(NULL);
     gtk_init_check(&argc, &argv);
 #endif  // defined(OS_LINUX)
@@ -212,13 +212,13 @@ class TestSuite {
 
     icu_util::Initialize();
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
     // Trying to repeatedly initialize and cleanup NSS and NSPR may result in
     // a deadlock. Such repeated initialization will happen when using test
     // isolation. Prevent problems by initializing NSS here, so that the cleanup
     // will be done only on process exit.
     base::EnsureNSSInit();
-#endif  // defined(OS_LINUX)
+#endif  // defined(USE_NSS)
   }
 
   virtual void Shutdown() {
diff --git a/base/third_party/nspr/prtime.cc b/base/third_party/nspr/prtime.cc
index 2407884..65f93ee 100644
--- a/base/third_party/nspr/prtime.cc
+++ b/base/third_party/nspr/prtime.cc
@@ -149,7 +149,7 @@ PR_ImplodeTime(const PRExplodedTime *exploded)
     result *= kSecondsToMicroseconds;
     result += exploded->tm_usec;
     return result;
-#elif defined(OS_LINUX) || defined(OS_FREEBSD)
+#elif defined(OS_POSIX)
     struct tm exp_tm = {0};
     exp_tm.tm_sec  = exploded->tm_sec;
     exp_tm.tm_min  = exploded->tm_min;
diff --git a/build/build_config.h b/build/build_config.h
index d8cea82..588965d 100644
--- a/build/build_config.h
+++ b/build/build_config.h
@@ -36,14 +36,16 @@
 #error Please add support for your platform in build/build_config.h
 #endif
 
+// To support all the common *nix features out there, use OS_NIX
 #if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_OPENBSD)
-#define USE_NSS 1  // Use NSS for crypto.
-#define USE_X11 1  // Use X for graphics.
+#define OS_NIX 1
+#define USE_NSS 1 // Use NSS for crypto.
+#define USE_X11 1 // Use X for graphics.
 #endif
 
 // For access to standard POSIXish features, use OS_POSIX instead of a
 // more specific macro.
-#if defined(OS_MACOSX) || defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_OPENBSD)
+#if defined(OS_MACOSX) || defined(OS_NIX)
 #define OS_POSIX 1
 // Use base::DataPack for name/value pairs.
 #define USE_BASE_DATA_PACK 1
diff --git a/chrome/app/chrome_dll_main.cc b/chrome/app/chrome_dll_main.cc
index ee75d76..0fcc5f3 100644
--- a/chrome/app/chrome_dll_main.cc
+++ b/chrome/app/chrome_dll_main.cc
@@ -23,7 +23,7 @@
 #include <unistd.h>
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gdk/gdk.h>
 #include <glib.h>
 #include <gtk/gtk.h>
@@ -57,7 +57,7 @@
 #include "chrome/common/sandbox_init_wrapper.h"
 #include "ipc/ipc_switches.h"
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 #include "base/nss_init.h"
 #include "chrome/browser/renderer_host/render_sandbox_host_linux.h"
 #include "chrome/browser/zygote_host_linux.h"
@@ -190,7 +190,7 @@ bool HasDeprecatedArguments(const std::wstring& command_line) {
 
 #endif  // OS_WIN
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 static void GLibLogHandler(const gchar* log_domain,
                            GLogLevelFlags log_level,
                            const gchar* message,
@@ -246,6 +246,7 @@ static void SetUpGLibLogHandler() {
   }
 }
 
+#if defined(OS_LINUX)
 static void AdjustLinuxOOMScore(const std::string& process_type) {
   const int kMiscScore = 7;
   const int kPluginScore = 10;
@@ -276,7 +277,8 @@ static void AdjustLinuxOOMScore(const std::string& process_type) {
   if (score > -1)
     base::AdjustOOMScore(base::GetCurrentProcId(), score);
 }
-#endif  // defined(OS_LINUX)
+#endif
+#endif  // defined(OS_NIX)
 
 // Register the invalid param handler and pure call handler to be able to
 // notify breakpad when it happens.
@@ -347,7 +349,7 @@ bool SubprocessNeedsResourceBundle(const std::string& process_type) {
       // Windows needs resources for the default/null plugin.
       process_type == switches::kPluginProcess ||
 #endif
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       // The zygote process opens the resources for the renderers.
       process_type == switches::kZygoteProcess ||
 #endif
@@ -445,7 +447,7 @@ int ChromeMain(int argc, char** argv) {
     return 1;
 #endif
 
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if defined(OS_NIX) && !defined(OS_CHROMEOS)
   // Show the man page on --help or -h.
   if (parsed_command_line.HasSwitch("help") ||
       parsed_command_line.HasSwitch("h")) {
@@ -685,7 +687,7 @@ int ChromeMain(int argc, char** argv) {
     rv = NaClMain(main_params);
 #endif
   } else if (process_type == switches::kZygoteProcess) {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     if (ZygoteMain(main_params)) {
       // Zygote::HandleForkRequest may have reallocated the command
       // line so update it here with the new version.
@@ -701,7 +703,7 @@ int ChromeMain(int argc, char** argv) {
     NOTIMPLEMENTED();
 #endif
   } else if (process_type.empty()) {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     const char* sandbox_binary = NULL;
     struct stat st;
 
@@ -739,7 +741,7 @@ int ChromeMain(int argc, char** argv) {
     // gtk_init() can change |argc| and |argv|.
     gtk_init(&argc, &argv);
     SetUpGLibLogHandler();
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_NIX)
 
     rv = BrowserMain(main_params);
   } else {
diff --git a/chrome/app/chrome_main_uitest.cc b/chrome/app/chrome_main_uitest.cc
index ab79407..449ee1d 100644
--- a/chrome/app/chrome_main_uitest.cc
+++ b/chrome/app/chrome_main_uitest.cc
@@ -18,7 +18,7 @@ TEST_F(ChromeMainTest, AppLaunch) {
   if (UITest::in_process_renderer()) {
     EXPECT_EQ(1, UITest::GetBrowserProcessCount());
   } else {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     // On Linux we'll have four processes: browser, renderer, zygote and
     // sandbox helper.
     EXPECT_EQ(4, UITest::GetBrowserProcessCount());
diff --git a/chrome/app/generated_resources.grd b/chrome/app/generated_resources.grd
index 0bf1e62..26ac1c7 100644
--- a/chrome/app/generated_resources.grd
+++ b/chrome/app/generated_resources.grd
@@ -4327,7 +4327,7 @@ Keep your key file in a safe place. You will need it to create new versions of y
       <message name="IDS_THEMES_GROUP_NAME" desc="The title of the themes group">
         Themes:
       </message>
-      <if expr="os == 'linux2'">
+      <if expr="os == 'linux2' or os == 'freebsd7'">
         <message name="IDS_APPEARANCE_GROUP_NAME" desc="In Title Case and without trailing colon: The title of the themes group">
           Appearance
         </message>
diff --git a/chrome/browser/app_modal_dialog.h b/chrome/browser/app_modal_dialog.h
index b3885c3..1a4147e 100644
--- a/chrome/browser/app_modal_dialog.h
+++ b/chrome/browser/app_modal_dialog.h
@@ -14,7 +14,7 @@
 #if defined(OS_WIN)
 class JavascriptMessageBoxDialog;
 typedef JavascriptMessageBoxDialog* NativeDialog;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 typedef struct _GtkWidget GtkWidget;
 typedef GtkWidget* NativeDialog;
 #elif defined(OS_MACOSX)
diff --git a/chrome/browser/autocomplete/autocomplete_popup_view.h b/chrome/browser/autocomplete/autocomplete_popup_view.h
index f030a9b..ae4c907 100644
--- a/chrome/browser/autocomplete/autocomplete_popup_view.h
+++ b/chrome/browser/autocomplete/autocomplete_popup_view.h
@@ -19,7 +19,7 @@ class BubblePositioner;
 namespace gfx {
 class Font;
 }
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
 class AutocompleteEditViewWin;
 class AutocompleteEditModel;
 class Profile;
@@ -45,7 +45,7 @@ class AutocompletePopupView {
   // Returns the popup's model.
   virtual AutocompletePopupModel* GetModel() = 0;
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   // Create a popup view implementation. It may make sense for this to become
   // platform independent eventually.
   static AutocompletePopupView* CreatePopupView(
diff --git a/chrome/browser/autocomplete/search_provider_unittest.cc b/chrome/browser/autocomplete/search_provider_unittest.cc
index 9b53178..e0477f1 100644
--- a/chrome/browser/autocomplete/search_provider_unittest.cc
+++ b/chrome/browser/autocomplete/search_provider_unittest.cc
@@ -147,7 +147,7 @@ void SearchProviderTest::RunTillProviderDone() {
     return;
 
   quit_when_done_ = true;
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   message_loop_.Run(NULL);
 #else
   message_loop_.Run();
diff --git a/chrome/browser/automation/automation_provider.cc b/chrome/browser/automation/automation_provider.cc
index f905220..50356eb 100644
--- a/chrome/browser/automation/automation_provider.cc
+++ b/chrome/browser/automation/automation_provider.cc
@@ -307,10 +307,10 @@ void AutomationProvider::OnMessageReceived(const IPC::Message& message) {
     IPC_MESSAGE_HANDLER(AutomationMsg_WindowMouseMove, WindowSimulateMouseMove)
     IPC_MESSAGE_HANDLER(AutomationMsg_WindowKeyPress, WindowSimulateKeyPress)
 #endif  // !defined(OS_MACOSX)
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(USE_X11)
     IPC_MESSAGE_HANDLER_DELAY_REPLY(AutomationMsg_WindowDrag,
                                     WindowSimulateDrag)
-#endif  // defined(OS_WIN) || defined(OS_LINUX)
+#endif  // defined(OS_WIN) || defined(USE_X11)
     IPC_MESSAGE_HANDLER(AutomationMsg_TabCount, GetTabCount)
     IPC_MESSAGE_HANDLER(AutomationMsg_Type, GetType)
     IPC_MESSAGE_HANDLER(AutomationMsg_Tab, GetTab)
@@ -764,7 +764,7 @@ void AutomationProvider::GetLastActiveBrowserWindow(int* handle) {
     *handle = browser_tracker_->Add(browser);
 }
 
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(USE_X11) || defined(OS_MACOSX)
 // TODO(estade): use this implementation for all platforms?
 void AutomationProvider::GetActiveWindow(int* handle) {
   gfx::NativeWindow window =
@@ -842,7 +842,7 @@ class InvokeTaskLaterTask : public Task {
   DISALLOW_COPY_AND_ASSIGN(InvokeTaskLaterTask);
 };
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(USE_X11)
 void AutomationProvider::WindowSimulateClick(const IPC::Message& message,
                                              int handle,
                                              const gfx::Point& click,
@@ -877,7 +877,7 @@ void AutomationProvider::WindowSimulateKeyPress(const IPC::Message& message,
                             ((flags & views::Event::EF_ALT_DOWN) ==
                               views::Event::EF_ALT_DOWN));
 }
-#endif  // defined(OS_WIN) || defined(OS_LINUX)
+#endif  // defined(OS_WIN) || defined(USE_X11)
 
 void AutomationProvider::IsWindowActive(int handle, bool* success,
                                         bool* is_active) {
diff --git a/chrome/browser/automation/ui_controls.h b/chrome/browser/automation/ui_controls.h
index 92705dc..e78a13f 100644
--- a/chrome/browser/automation/ui_controls.h
+++ b/chrome/browser/automation/ui_controls.h
@@ -84,7 +84,7 @@ bool SendMouseClick(MouseButton type);
 void MoveMouseToCenterAndPress(
 #if defined(TOOLKIT_VIEWS)
     views::View* view,
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     GtkWidget* widget,
 #endif
     MouseButton button,
diff --git a/chrome/browser/blocked_popup_container_interactive_uitest.cc b/chrome/browser/blocked_popup_container_interactive_uitest.cc
index e69a934..09a8167 100644
--- a/chrome/browser/blocked_popup_container_interactive_uitest.cc
+++ b/chrome/browser/blocked_popup_container_interactive_uitest.cc
@@ -82,7 +82,7 @@ TEST_F(BlockedPopupContainerInteractiveTest, TestOpenAndResizeTo) {
   EXPECT_EQ(300, rect.width());
   EXPECT_EQ(320, rect.height());
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // It seems we have to wait a little bit for the widgets to spin up before
   // we can start clicking on them.
   PlatformThread::Sleep(500);
@@ -227,7 +227,7 @@ TEST_F(BlockedPopupContainerInteractiveTest, ShowAlertFromNormalPopup) {
   scoped_refptr<TabProxy> popup_tab(popup_browser->GetTab(0));
   ASSERT_TRUE(popup_tab.get());
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // It seems we have to wait a little bit for the widgets to spin up before
   // we can start clicking on them.
   PlatformThread::Sleep(500);
diff --git a/chrome/browser/bookmarks/bookmark_utils.cc b/chrome/browser/bookmarks/bookmark_utils.cc
index 5d10ea8..dd958da 100644
--- a/chrome/browser/bookmarks/bookmark_utils.cc
+++ b/chrome/browser/bookmarks/bookmark_utils.cc
@@ -353,7 +353,7 @@ void OpenAll(gfx::NativeWindow parent,
 void CopyToClipboard(BookmarkModel* model,
                      const std::vector<const BookmarkNode*>& nodes,
                      bool remove_nodes) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   if (nodes.empty())
     return;
 
@@ -373,7 +373,7 @@ void CopyToClipboard(BookmarkModel* model,
 void PasteFromClipboard(BookmarkModel* model,
                         const BookmarkNode* parent,
                         int index) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   if (!parent)
     return;
 
diff --git a/chrome/browser/browser.cc b/chrome/browser/browser.cc
index 6003651..b01f601 100644
--- a/chrome/browser/browser.cc
+++ b/chrome/browser/browser.cc
@@ -180,7 +180,7 @@ Browser::~Browser() {
 
   BrowserList::RemoveBrowser(this);
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   if (!BrowserList::HasBrowserWithProfile(profile_)) {
     // We're the last browser window with this profile. We need to nuke the
     // TabRestoreService, which will start the shutdown of the
@@ -480,7 +480,7 @@ string16 Browser::GetWindowTitleForCurrentTab() const {
   // On Mac or ChromeOS, we don't want to suffix the page title with
   // the application name.
   return title;
-#elif defined(OS_WIN) || defined(OS_LINUX)
+#elif defined(OS_WIN) || defined(OS_NIX)
   int string_id = IDS_BROWSER_WINDOW_TITLE_FORMAT;
   // Don't append the app name to window titles when we're not displaying a
   // distributor logo for the frame.
@@ -535,7 +535,7 @@ void Browser::OnWindowClosing() {
   if (!ShouldCloseWindow())
     return;
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   // We don't want to do this on Mac since closing all windows isn't a sign
   // that the app is shutting down.
   if (BrowserList::size() == 1)
@@ -966,9 +966,9 @@ void Browser::ToggleFullscreenMode() {
 
   UserMetrics::RecordAction("ToggleFullscreen", profile_);
   window_->SetFullscreen(!window_->IsFullscreen());
-  // On Linux, setting fullscreen mode is an async call to the X server, which
+  // On X11, setting fullscreen mode is an async call to the X server, which
   // may or may not support fullscreen mode.
-#if !defined(OS_LINUX)
+#if !defined(USE_X11)
   UpdateCommandsForFullscreenMode(window_->IsFullscreen());
 #endif
 }
@@ -1176,7 +1176,7 @@ void Browser::OpenFile() {
 
 void Browser::OpenCreateShortcutsDialog() {
   UserMetrics::RecordAction("CreateShortcut", profile_);
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   TabContents* current_tab = GetSelectedTabContents();
   DCHECK(current_tab && web_app::IsValidUrl(current_tab->GetURL())) <<
       "Menu item should be disabled.";
@@ -1751,7 +1751,7 @@ void Browser::DuplicateContentsAt(int index) {
 }
 
 void Browser::CloseFrameAfterDragSession() {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   // This is scheduled to run after we return to the message loop because
   // otherwise the frame will think the drag session is still active and ignore
   // the request.
diff --git a/chrome/browser/browser.h b/chrome/browser/browser.h
index 7f5f85c..23d323b 100644
--- a/chrome/browser/browser.h
+++ b/chrome/browser/browser.h
@@ -378,7 +378,7 @@ class Browser : public TabStripModelDelegate,
   void ToggleEncodingAutoDetect();
   void OverrideEncoding(int encoding_id);
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   // Clipboard commands
   void Cut();
   void Copy();
diff --git a/chrome/browser/browser_about_handler.cc b/chrome/browser/browser_about_handler.cc
index 320af0c..d72dec8 100644
--- a/chrome/browser/browser_about_handler.cc
+++ b/chrome/browser/browser_about_handler.cc
@@ -965,7 +965,7 @@ bool HandleNonNavigationAboutURL(const GURL& url) {
   }
 #endif
 
-#if !defined(OS_LINUX) && defined(IPC_MESSAGE_LOG_ENABLED)
+#if !defined(OS_NIX) && defined(IPC_MESSAGE_LOG_ENABLED)
   if (LowerCaseEqualsASCII(url.spec(), chrome::kChromeUIIPCURL)) {
     // Run the dialog. This will re-use the existing one if it's already up.
     AboutIPCDialog::RunDialog();
diff --git a/chrome/browser/browser_browsertest.cc b/chrome/browser/browser_browsertest.cc
index 756b7dc..6e7e1f2 100644
--- a/chrome/browser/browser_browsertest.cc
+++ b/chrome/browser/browser_browsertest.cc
@@ -38,7 +38,7 @@ std::wstring WindowCaptionFromPageTitle(std::wstring page_title) {
   if (page_title.empty())
     return l10n_util::GetString(IDS_BROWSER_WINDOW_MAC_TAB_UNTITLED);
   return page_title;
-#elif defined(OS_WIN) || defined(OS_LINUX)
+#elif defined(OS_WIN) || defined(OS_NIX)
   if (page_title.empty())
     return l10n_util::GetString(IDS_PRODUCT_NAME);
 
diff --git a/chrome/browser/browser_focus_uitest.cc b/chrome/browser/browser_focus_uitest.cc
index 05b4520..d5e6df3 100644
--- a/chrome/browser/browser_focus_uitest.cc
+++ b/chrome/browser/browser_focus_uitest.cc
@@ -28,7 +28,7 @@
 #include "chrome/browser/views/tab_contents/tab_contents_container.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include "chrome/browser/gtk/view_id_util.h"
 #endif
 
@@ -74,7 +74,7 @@ class BrowserFocusTest : public InProcessBrowserTest {
     // TODO(jcampan): retrieve the WidgetWin and show/hide on it instead of
     // using Windows API.
     ::ShowWindow(window, SW_HIDE);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     gtk_widget_hide(GTK_WIDGET(window));
 #else
     NOTIMPLEMENTED();
@@ -86,7 +86,7 @@ class BrowserFocusTest : public InProcessBrowserTest {
     // TODO(jcampan): retrieve the WidgetWin and show/hide on it instead of
     // using Windows API.
     ::ShowWindow(window, SW_SHOW);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     gtk_widget_hide(GTK_WIDGET(window));
 #else
     NOTIMPLEMENTED();
@@ -169,7 +169,7 @@ class TestInterstitialPage : public InterstitialPage {
 }  // namespace
 
 IN_PROC_BROWSER_TEST_F(BrowserFocusTest, ClickingMovesFocus) {
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // It seems we have to wait a little bit for the widgets to spin up before
   // we can start clicking on them.
   MessageLoop::current()->PostDelayedTask(FROM_HERE,
@@ -377,7 +377,7 @@ IN_PROC_BROWSER_TEST_F(BrowserFocusTest, BackgroundBrowserDontStealFocus) {
 
   Browser* focused_browser = NULL;
   Browser* unfocused_browser = NULL;
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // On Linux, calling Activate() is not guaranteed to move focus, so we have
   // to figure out which browser does have focus.
   if (browser2->window()->IsActive()) {
diff --git a/chrome/browser/browser_keyevents_browsertest.cc b/chrome/browser/browser_keyevents_browsertest.cc
index 897b264..d104277 100644
--- a/chrome/browser/browser_keyevents_browsertest.cc
+++ b/chrome/browser/browser_keyevents_browsertest.cc
@@ -526,7 +526,7 @@ IN_PROC_BROWSER_TEST_F(BrowserKeyEventsTest, AccessKeys) {
   // Make sure no element is focused.
   EXPECT_NO_FATAL_FAILURE(CheckFocusedElement(tab_index, L""));
   EXPECT_NO_FATAL_FAILURE(TestKeyEvent(tab_index, kTestAlt1));
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // On Linux, alt-0..9 are assigned as tab selection accelerators, so they can
   // not be used as accesskeys.
   EXPECT_NO_FATAL_FAILURE(CheckFocusedElement(tab_index, L""));
@@ -568,7 +568,7 @@ IN_PROC_BROWSER_TEST_F(BrowserKeyEventsTest, ReservedAccelerators) {
   ASSERT_NO_FATAL_FAILURE(SendKey(base::VKEY_W, true, false, false));
   EXPECT_EQ(1, browser()->tab_count());
 
-#elif defined(OS_LINUX) && !defined(TOOLKIT_VIEWS)
+#elif defined(OS_NIX) && !defined(TOOLKIT_VIEWS)
   // Ctrl-[a-z] are not treated as reserved accelerators on Linux.
   static const KeyEventTestData kTestCtrlT = {
     base::VKEY_T, true, false, false,
diff --git a/chrome/browser/browser_main.cc b/chrome/browser/browser_main.cc
index ff1d17d..2681545 100644
--- a/chrome/browser/browser_main.cc
+++ b/chrome/browser/browser_main.cc
@@ -79,7 +79,7 @@
 #include "chrome/app/breakpad_linux.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include "chrome/common/gtk_util.h"
 #endif
 
@@ -157,7 +157,7 @@ void RunUIMessageLoop(BrowserProcess* browser_process) {
 #if defined(TOOLKIT_VIEWS)
   views::AcceleratorHandler accelerator_handler;
   MessageLoopForUI::current()->Run(&accelerator_handler);
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
   MessageLoopForUI::current()->Run(NULL);
 #elif defined(OS_POSIX)
   MessageLoopForUI::current()->Run();
@@ -508,7 +508,7 @@ int BrowserMain(const MainFunctionParams& parameters) {
   }
 #endif  // OS_CHROMEOS
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   gtk_util::SetDefaultWindowIcon();
 #endif
 
@@ -699,7 +699,7 @@ int BrowserMain(const MainFunctionParams& parameters) {
       break;
 
     case ProcessSingleton::PROCESS_NOTIFIED:
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       printf("%s\n", base::SysWideToNativeMB(
                  l10n_util::GetString(IDS_USED_EXISTING_BROWSER)).c_str());
 #endif
diff --git a/chrome/browser/browser_prefs.cc b/chrome/browser/browser_prefs.cc
index ae3abf9..fe2e056 100644
--- a/chrome/browser/browser_prefs.cc
+++ b/chrome/browser/browser_prefs.cc
@@ -34,7 +34,7 @@
 #include "chrome/browser/views/frame/browser_view.h"
 #endif
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
 #include "chrome/browser/task_manager.h"
 #endif
 
@@ -74,7 +74,7 @@ void RegisterLocalState(PrefService* local_state) {
 #if defined(TOOLKIT_VIEWS)  // TODO(port): whittle this down as we port
   BrowserView::RegisterBrowserViewPrefs(local_state);
 #endif
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   TaskManager::RegisterPrefs(local_state);
 #endif
 }
diff --git a/chrome/browser/browser_process.h b/chrome/browser/browser_process.h
index d826321..33c3119 100644
--- a/chrome/browser/browser_process.h
+++ b/chrome/browser/browser_process.h
@@ -92,7 +92,7 @@ class BrowserProcess {
   // database. History has its own thread since it has much higher traffic.
   virtual base::Thread* db_thread() = 0;
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // Returns the thread that is used to process UI requests in cases where
   // we can't route the request to the UI thread. Note that this thread
   // should only be used by the IO thread and this method is only safe to call
diff --git a/chrome/browser/browser_process_impl.cc b/chrome/browser/browser_process_impl.cc
index f19e6a6..61d3b17 100644
--- a/chrome/browser/browser_process_impl.cc
+++ b/chrome/browser/browser_process_impl.cc
@@ -41,7 +41,7 @@
 #include "views/focus/view_storage.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 // TODO(port): get rid of this.
 #include "chrome/common/temp_scaffolding_stubs.h"
 #else
@@ -205,7 +205,7 @@ BrowserProcessImpl::~BrowserProcessImpl() {
     resource_dispatcher_host()->Shutdown();
   }
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // The IO thread must outlive the BACKGROUND_X11 thread.
   background_x11_thread_.reset();
 #endif
@@ -335,7 +335,7 @@ void BrowserProcessImpl::CreateIOThread() {
   // invoke the io_thread() accessor.
   PluginService::GetInstance();
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // The lifetime of the BACKGROUND_X11 thread is a subset of the IO thread so
   // we start it now.
   scoped_ptr<base::Thread> background_x11_thread(
diff --git a/chrome/browser/browser_process_impl.h b/chrome/browser/browser_process_impl.h
index 51d0cf5..779cafe 100644
--- a/chrome/browser/browser_process_impl.h
+++ b/chrome/browser/browser_process_impl.h
@@ -78,7 +78,7 @@ class BrowserProcessImpl : public BrowserProcess, public NonThreadSafe {
     return process_launcher_thread_.get();
   }
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   virtual base::Thread* background_x11_thread() {
     DCHECK(CalledOnValidThread());
     // The BACKGROUND_X11 thread is created when the IO thread is created.
@@ -239,7 +239,7 @@ class BrowserProcessImpl : public BrowserProcess, public NonThreadSafe {
 
   bool created_io_thread_;
   scoped_ptr<base::Thread> io_thread_;
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // This shares a created flag with the IO thread.
   scoped_ptr<base::Thread> background_x11_thread_;
 #endif
diff --git a/chrome/browser/browser_resources.grd b/chrome/browser/browser_resources.grd
index 0b65a12..4c8a6aa 100644
--- a/chrome/browser/browser_resources.grd
+++ b/chrome/browser/browser_resources.grd
@@ -14,13 +14,13 @@ without changes to the corresponding grd file. dhg sdggg -->
       <include name="IDR_ABOUT_PLUGINS_HTML" file="resources\about_plugins.html" type="BINDATA" />
       <include name="IDR_ABOUT_VERSION_HTML" file="resources\about_version.html" flattenhtml="true" type="BINDATA" />
 
-      <if expr="os == 'linux2'">
+      <if expr="os == 'linux2' or os == 'freebsd7'">
         <include name="IDR_ABOUT_MEMORY_HTML" file="resources\about_memory_linux.html" flattenhtml="true" type="BINDATA" />
       </if>
       <if expr="os == 'darwin'">
         <include name="IDR_ABOUT_MEMORY_HTML" file="resources\about_memory_mac.html" flattenhtml="true" type="BINDATA" />
       </if>
-      <if expr="os != 'linux2' and os != 'darwin'">
+      <if expr="os != 'linux2' and os != 'darwin' and os != 'freebsd7'">
         <include name="IDR_ABOUT_MEMORY_HTML" file="resources\about_memory.html" flattenhtml="true" type="BINDATA" />
       </if>
 
diff --git a/chrome/browser/browser_theme_provider.h b/chrome/browser/browser_theme_provider.h
index 756e2bc..664f894 100644
--- a/chrome/browser/browser_theme_provider.h
+++ b/chrome/browser/browser_theme_provider.h
@@ -106,7 +106,7 @@ class BrowserThemeProvider : public NonThreadSafe,
   virtual bool ShouldUseNativeFrame() const;
   virtual bool HasCustomImage(int id) const;
   virtual RefCountedMemory* GetRawData(int id) const;
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   virtual GdkPixbuf* GetPixbufNamed(int id) const;
   virtual GdkPixbuf* GetRTLEnabledPixbufNamed(int id) const;
 #elif defined(OS_MACOSX)
@@ -203,12 +203,12 @@ class BrowserThemeProvider : public NonThreadSafe,
   // Remove preference values for themes that are no longer in use.
   void RemoveUnusedThemes();
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   // Loads an image and flips it horizontally if |rtl_enabled| is true.
   GdkPixbuf* GetPixbufImpl(int id, bool rtl_enabled) const;
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   typedef std::map<int, GdkPixbuf*> GdkPixbufMap;
   mutable GdkPixbufMap gdk_pixbufs_;
 #elif defined(OS_MACOSX)
diff --git a/chrome/browser/child_process_launcher.cc b/chrome/browser/child_process_launcher.cc
index 1ab66c6..690094b 100644
--- a/chrome/browser/child_process_launcher.cc
+++ b/chrome/browser/child_process_launcher.cc
@@ -16,7 +16,7 @@
 
 #if defined(OS_WIN)
 #include "chrome/browser/sandbox_policy.h"
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 #include "base/singleton.h"
 #include "chrome/browser/crash_handler_host_linux.h"
 #include "chrome/browser/zygote_host_linux.h"
@@ -35,7 +35,7 @@ class ChildProcessLauncher::Context
  public:
   Context()
       : starting_(true)
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
         , zygote_(false)
 #endif
         {
@@ -97,7 +97,7 @@ class ChildProcessLauncher::Context
     handle = sandbox::StartProcessWithAccess(cmd_line, exposed_dir);
 #elif defined(OS_POSIX)
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     bool zygote = false;
     // On Linux, normally spawn renderer processes with zygotes. We can't do
     // this when we're spawning child processes through an external program
@@ -133,7 +133,7 @@ class ChildProcessLauncher::Context
           ipcfd,
           kPrimaryIPCChannel + base::GlobalDescriptors::kBaseDescriptor));
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       // On Linux, we need to add some extra file descriptors for crash handling
       // and the sandbox.
       if (is_renderer || is_plugin) {
@@ -158,7 +158,7 @@ class ChildProcessLauncher::Context
             sandbox_fd,
             kSandboxIPCChannel + base::GlobalDescriptors::kBaseDescriptor));
       }
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_NIX)
 
       // Actually launch the app.
       if (!base::LaunchApp(cmd_line->argv(), env, fds_to_map, false, &handle))
@@ -171,20 +171,20 @@ class ChildProcessLauncher::Context
         NewRunnableMethod(
             this,
             &ChildProcessLauncher::Context::Notify,
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
             zygote,
 #endif
             handle));
   }
 
   void Notify(
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       bool zygote,
 #endif
       base::ProcessHandle handle) {
     starting_ = false;
     process_.set_handle(handle);
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     zygote_ = zygote;
 #endif
     if (client_) {
@@ -204,7 +204,7 @@ class ChildProcessLauncher::Context
         ChromeThread::PROCESS_LAUNCHER, FROM_HERE,
         NewRunnableFunction(
             &ChildProcessLauncher::Context::TerminateInternal,
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
             zygote_,
 #endif
             process_.handle()));
@@ -212,7 +212,7 @@ class ChildProcessLauncher::Context
   }
 
   static void TerminateInternal(
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       bool zygote,
 #endif
       base::ProcessHandle handle) {
@@ -222,13 +222,13 @@ class ChildProcessLauncher::Context
     process.Terminate(ResultCodes::NORMAL_EXIT);
     // On POSIX, we must additionally reap the child.
 #if defined(OS_POSIX)
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     if (zygote) {
       // If the renderer was created via a zygote, we have to proxy the reaping
       // through the zygote process.
       Singleton<ZygoteHost>()->EnsureProcessTerminated(handle);
     } else
-#endif  // OS_LINUX
+#endif  // defined(OS_NIX)
     {
       ProcessWatcher::EnsureProcessTerminated(handle);
     }
@@ -241,7 +241,7 @@ class ChildProcessLauncher::Context
   base::Process process_;
   bool starting_;
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   bool zygote_;
 #endif
 };
@@ -284,7 +284,7 @@ base::ProcessHandle ChildProcessLauncher::GetHandle() {
 bool ChildProcessLauncher::DidProcessCrash() {
   bool did_crash, child_exited;
   base::ProcessHandle handle = context_->process_.handle();
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   if (context_->zygote_) {
     did_crash = Singleton<ZygoteHost>()->DidProcessCrash(handle, &child_exited);
   } else
diff --git a/chrome/browser/chrome_thread.cc b/chrome/browser/chrome_thread.cc
index a5cbe89..13975d6 100644
--- a/chrome/browser/chrome_thread.cc
+++ b/chrome/browser/chrome_thread.cc
@@ -12,7 +12,7 @@ static const char* chrome_thread_names[ChromeThread::ID_COUNT] = {
   "Chrome_FileThread",  // FILE
   "Chrome_ProcessLauncherThread",  // PROCESS_LAUNCHER
   "Chrome_IOThread",  // IO
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   "Chrome_Background_X11Thread",  // BACKGROUND_X11
 #endif
 };
diff --git a/chrome/browser/chrome_thread.h b/chrome/browser/chrome_thread.h
index a8fe44b..9628e2f 100644
--- a/chrome/browser/chrome_thread.h
+++ b/chrome/browser/chrome_thread.h
@@ -54,7 +54,7 @@ class ChromeThread : public base::Thread {
     // This is the thread that processes IPC and network messages.
     IO,
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
     // This thread has a second connection to the X server and is used to
     // process UI requests when routing the request to the UI thread would risk
     // deadlock.
diff --git a/chrome/browser/debugger/devtools_remote_listen_socket_unittest.cc b/chrome/browser/debugger/devtools_remote_listen_socket_unittest.cc
index c1db965..843e73f 100644
--- a/chrome/browser/debugger/devtools_remote_listen_socket_unittest.cc
+++ b/chrome/browser/debugger/devtools_remote_listen_socket_unittest.cc
@@ -5,6 +5,9 @@
 #include "chrome/browser/debugger/devtools_remote_listen_socket_unittest.h"
 
 #include <fcntl.h>
+#if defined(OS_FREEBSD)
+#include <netinet/in.h>
+#endif
 
 #include "base/eintr_wrapper.h"
 #include "net/base/net_util.h"
diff --git a/chrome/browser/defaults.cc b/chrome/browser/defaults.cc
index 65f5802..a4de0a8 100644
--- a/chrome/browser/defaults.cc
+++ b/chrome/browser/defaults.cc
@@ -22,7 +22,7 @@ const bool kShowExitMenuItem = false;
 const bool kShowAboutMenuItem = true;
 const bool kOSSupportsOtherBrowsers = false;
 const bool kDownloadPageHasShowInFolder = false;
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 
 // 13.4px = 10pt @ 96dpi.
 const double kAutocompleteEditFontPixelSize = 13.4;
diff --git a/chrome/browser/defaults.h b/chrome/browser/defaults.h
index 6478e14..1365b80 100644
--- a/chrome/browser/defaults.h
+++ b/chrome/browser/defaults.h
@@ -12,7 +12,7 @@
 
 namespace browser_defaults {
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 
 // Size of the font in pixels used in the autocomplete box for normal windows.
 extern const double kAutocompleteEditFontPixelSize;
diff --git a/chrome/browser/diagnostics/diagnostics_model.cc b/chrome/browser/diagnostics/diagnostics_model.cc
index 54da906..7bde67e 100644
--- a/chrome/browser/diagnostics/diagnostics_model.cc
+++ b/chrome/browser/diagnostics/diagnostics_model.cc
@@ -106,7 +106,7 @@ class DiagnosticsModelMac : public DiagnosticsModelImpl {
   DISALLOW_COPY_AND_ASSIGN(DiagnosticsModelMac);
 };
 
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 class DiagnosticsModelLinux : public DiagnosticsModelImpl {
  public:
   DiagnosticsModelLinux() {
@@ -130,7 +130,7 @@ DiagnosticsModel* MakeDiagnosticsModel() {
   return new DiagnosticsModelWin();
 #elif defined(OS_MACOSX)
   return new DiagnosticsModelMac();
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   return new DiagnosticsModelLinux();
 #endif
 }
diff --git a/chrome/browser/dom_ui/ntp_resource_cache.cc b/chrome/browser/dom_ui/ntp_resource_cache.cc
index 2cbb282..60bba66 100644
--- a/chrome/browser/dom_ui/ntp_resource_cache.cc
+++ b/chrome/browser/dom_ui/ntp_resource_cache.cc
@@ -35,7 +35,7 @@
 
 #if defined(OS_WIN) || defined(TOOLKIT_VIEWS)
 #include "chrome/browser/views/bookmark_bar_view.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "chrome/browser/gtk/bookmark_bar_gtk.h"
 #elif defined(OS_MACOSX)
 #include "chrome/browser/cocoa/bookmark_bar_constants.h"
@@ -107,7 +107,7 @@ std::string GetNewTabBackgroundCSS(const ThemeProvider* theme_provider,
   // if it's a top-aligned bar.
 #if defined(OS_WIN) || defined(TOOLKIT_VIEWS)
   int offset = BookmarkBarView::kNewtabBarHeight;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   int offset = BookmarkBarGtk::kBookmarkBarNTPHeight;
 #elif defined(OS_MACOSX)
   int offset = bookmarks::kNTPBookmarkBarHeight;
diff --git a/chrome/browser/download/download_exe.cc b/chrome/browser/download/download_exe.cc
index 01585f5..b696d31 100644
--- a/chrome/browser/download/download_exe.cc
+++ b/chrome/browser/download/download_exe.cc
@@ -145,7 +145,7 @@ static const char* const g_executables[] = {
   "xml",
   "xsl",
   "xslt",
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   // TODO(estade): lengthen this list.
   "exe",
   "pl",
diff --git a/chrome/browser/download/download_manager.cc b/chrome/browser/download/download_manager.cc
index 21642ef..ac273a9 100644
--- a/chrome/browser/download/download_manager.cc
+++ b/chrome/browser/download/download_manager.cc
@@ -53,7 +53,7 @@
 #include "base/win_util.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gtk/gtk.h>
 #endif
 
diff --git a/chrome/browser/download/download_manager_unittest.cc b/chrome/browser/download/download_manager_unittest.cc
index 7a4a9bd..52dca43 100644
--- a/chrome/browser/download/download_manager_unittest.cc
+++ b/chrome/browser/download/download_manager_unittest.cc
@@ -10,7 +10,7 @@
 #include "chrome/browser/download/download_util.h"
 #include "testing/gtest/include/gtest/gtest.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include <locale.h>
 #endif
 
@@ -103,7 +103,7 @@ const struct {
   // This block tests whether we append extensions based on MIME types;
   // we don't do this on Linux, so we skip the tests rather than #ifdef
   // them up.
-#if !defined(OS_LINUX)
+#if !defined(OS_NIX)
   {"filename=my-cat",
    "http://www.example.com/my-cat",
    "image/jpeg",
@@ -125,7 +125,7 @@ const struct {
    "http://www.example.com/my-cat",
    "dance/party",
    L"my-cat"},
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_NIX)
 
   {"filename=my-cat.jpg",
    "http://www.example.com/my-cat.jpg",
@@ -451,7 +451,7 @@ const struct {
 // Tests to ensure that the file names we generate from hints from the server
 // (content-disposition, URL name, etc) don't cause security holes.
 TEST_F(DownloadManagerTest, TestDownloadFilename) {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // This test doesn't run when the locale is not UTF-8 becuase some of the
   // string conversions fail. This is OK (we have the default value) but they
   // don't match our expectations.
@@ -574,7 +574,7 @@ const struct {
 
 }  // namespace
 
-#if !defined(OS_LINUX)
+#if !defined(OS_NIX)
 // TODO(port): port to Linux.
 TEST_F(DownloadManagerTest, GetSafeFilename) {
   for (size_t i = 0; i < ARRAYSIZE_UNSAFE(kSafeFilenameCases); ++i) {
@@ -584,4 +584,4 @@ TEST_F(DownloadManagerTest, GetSafeFilename) {
     EXPECT_EQ(kSafeFilenameCases[i].expected_path, path.value());
   }
 }
-#endif  // OS_LINUX
+#endif  // OS_NIX
diff --git a/chrome/browser/download/download_util.cc b/chrome/browser/download/download_util.cc
index 786271d..cc08433 100644
--- a/chrome/browser/download/download_util.cc
+++ b/chrome/browser/download/download_util.cc
@@ -274,7 +274,7 @@ void DragDownload(const DownloadItem* download,
   DWORD effects;
   DoDragDrop(OSExchangeDataProviderWin::GetIDataObject(data), drag_source.get(),
              DROPEFFECT_COPY | DROPEFFECT_LINK, &effects);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   GtkWidget* root = gtk_widget_get_toplevel(view);
   if (!root)
     return;
@@ -285,12 +285,12 @@ void DragDownload(const DownloadItem* download,
   widget->DoDrag(data, DragDropTypes::DRAG_COPY | DragDropTypes::DRAG_LINK);
 #endif  // OS_WIN
 }
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
 void DragDownload(const DownloadItem* download,
                   SkBitmap* icon,
                   gfx::NativeView view) {
   NOTIMPLEMENTED();
 }
-#endif  // OS_LINUX
+#endif // USE_X11
 
 }  // namespace download_util
diff --git a/chrome/browser/extensions/extension_host.cc b/chrome/browser/extensions/extension_host.cc
index 525b267..8ed5688 100644
--- a/chrome/browser/extensions/extension_host.cc
+++ b/chrome/browser/extensions/extension_host.cc
@@ -149,7 +149,7 @@ void ExtensionHost::CreateView(Browser* browser) {
   // We own |view_|, so don't auto delete when it's removed from the view
   // hierarchy.
   view_->set_parent_owned(false);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   view_.reset(new ExtensionViewGtk(this, browser));
   view_->Init();
 #elif defined(OS_MACOSX)
diff --git a/chrome/browser/extensions/extension_host.h b/chrome/browser/extensions/extension_host.h
index 5f2188c..b7ba01d 100644
--- a/chrome/browser/extensions/extension_host.h
+++ b/chrome/browser/extensions/extension_host.h
@@ -16,7 +16,7 @@
 #include "chrome/browser/tab_contents/render_view_host_delegate_helper.h"
 #if defined(TOOLKIT_VIEWS)
 #include "chrome/browser/views/extensions/extension_view.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "chrome/browser/gtk/extension_view_gtk.h"
 #elif defined(OS_MACOSX)
 #include "chrome/browser/cocoa/extension_view_mac.h"
@@ -56,7 +56,7 @@ class ExtensionHost : public ExtensionPopupHost::PopupDelegate,
 #if defined(TOOLKIT_VIEWS)
   void set_view(ExtensionView* view) { view_.reset(view); }
   ExtensionView* view() const { return view_.get(); }
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   ExtensionViewGtk* view() const { return view_.get(); }
 #elif defined(OS_MACOSX)
   ExtensionViewMac* view() const { return view_.get(); }
@@ -210,7 +210,7 @@ class ExtensionHost : public ExtensionPopupHost::PopupDelegate,
   // Optional view that shows the rendered content in the UI.
 #if defined(TOOLKIT_VIEWS)
   scoped_ptr<ExtensionView> view_;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   scoped_ptr<ExtensionViewGtk> view_;
 #elif defined(OS_MACOSX)
   scoped_ptr<ExtensionViewMac> view_;
diff --git a/chrome/browser/extensions/extension_process_manager.cc b/chrome/browser/extensions/extension_process_manager.cc
index 76e2a6e..57f33fa 100644
--- a/chrome/browser/extensions/extension_process_manager.cc
+++ b/chrome/browser/extensions/extension_process_manager.cc
@@ -47,10 +47,10 @@ ExtensionProcessManager::ExtensionProcessManager(Profile* profile)
                  NotificationService::AllSources());
   registrar_.Add(this, NotificationType::RENDERER_PROCESS_CLOSED,
                  NotificationService::AllSources());
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if !defined(OS_MACOSX)
   registrar_.Add(this, NotificationType::BROWSER_CLOSED,
                  NotificationService::AllSources());
-#elif defined(OS_MACOSX)
+#else
   registrar_.Add(this, NotificationType::APP_TERMINATING,
                  NotificationService::AllSources());
 #endif
@@ -241,7 +241,7 @@ void ExtensionProcessManager::Observe(NotificationType type,
       UnregisterExtensionProcess(host->id());
       break;
     }
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if !defined(OS_MACOSX)
     case NotificationType::BROWSER_CLOSED: {
       // Close background hosts when the last browser is closed so that they
       // have time to shutdown various objects on different threads. Our
@@ -251,7 +251,7 @@ void ExtensionProcessManager::Observe(NotificationType type,
         CloseBackgroundHosts();
       break;
     }
-#elif defined(OS_MACOSX)
+#else
     case NotificationType::APP_TERMINATING: {
       // Don't follow the behavior of having the last browser window closed
       // being an indication that the app should close.
diff --git a/chrome/browser/extensions/extension_tabs_module.cc b/chrome/browser/extensions/extension_tabs_module.cc
index 64ee348..da0e607 100644
--- a/chrome/browser/extensions/extension_tabs_module.cc
+++ b/chrome/browser/extensions/extension_tabs_module.cc
@@ -774,7 +774,7 @@ bool CaptureVisibleTabFunction::RunImpl() {
   temp_canvas.endPlatformPaint();
 
   screen_capture = temp_canvas.getTopPlatformDevice().accessBitmap(false);
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
   screen_capture = backing_store->PaintRectToBitmap(
       gfx::Rect(0, 0, backing_store->size().width(),
                 backing_store->size().height()));
diff --git a/chrome/browser/icon_loader.cc b/chrome/browser/icon_loader.cc
index f1102a0..19ca22d 100644
--- a/chrome/browser/icon_loader.cc
+++ b/chrome/browser/icon_loader.cc
@@ -26,7 +26,7 @@ IconLoader::~IconLoader() {
 void IconLoader::Start() {
   target_message_loop_ = MessageLoop::current();
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   // This call must happen on the UI thread before we can start loading icons.
   mime_util::DetectGtkTheme();
 #endif
diff --git a/chrome/browser/icon_loader.h b/chrome/browser/icon_loader.h
index a954274..3d88891 100644
--- a/chrome/browser/icon_loader.h
+++ b/chrome/browser/icon_loader.h
@@ -73,8 +73,8 @@ class IconLoader : public base::RefCountedThreadSafe<IconLoader> {
 
   Delegate* delegate_;
 
-#if defined(OS_LINUX)
-  // On Linux we use gdk's pixbuf loader, which has to execute on the UI
+#if defined(USE_X11)
+  // On X11 systems we use gdk's pixbuf loader, which has to execute on the UI
   // thread, so we only read the file on the background thread and parse it
   // on the main thread.
   void ParseIcon();
diff --git a/chrome/browser/importer/firefox_profile_lock.cc b/chrome/browser/importer/firefox_profile_lock.cc
index 4503d64..d146793 100644
--- a/chrome/browser/importer/firefox_profile_lock.cc
+++ b/chrome/browser/importer/firefox_profile_lock.cc
@@ -52,7 +52,7 @@
 * ***** END LICENSE BLOCK ***** */
 
 // static
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 // http://www.google.com/codesearch/p?hl=en#e_ObwTAVPyo/profile/dirserviceprovider/src/nsProfileLock.cpp&l=433
 const FilePath::CharType* FirefoxProfileLock::kLockFileName =
     FILE_PATH_LITERAL(".parentlock");
diff --git a/chrome/browser/importer/importer.cc b/chrome/browser/importer/importer.cc
index eddc493..62f51f6 100644
--- a/chrome/browser/importer/importer.cc
+++ b/chrome/browser/importer/importer.cc
@@ -30,7 +30,7 @@
 #include "app/win_util.h"
 #include "chrome/browser/views/importer_lock_view.h"
 #include "views/window/window.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "chrome/browser/gtk/import_lock_dialog_gtk.h"
 #elif defined(OS_MACOSX)
 #include "chrome/browser/cocoa/importer_lock_dialog.h"
@@ -447,7 +447,7 @@ void ImporterHost::ShowWarningDialog() {
 #if defined(OS_WIN)
     views::Window::CreateChromeWindow(GetActiveWindow(), gfx::Rect(),
                                       new ImporterLockView(this))->Show();
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     ImportLockDialogGtk::Show(parent_window_, this);
 #else
     ImportLockDialogCocoa::ShowWarning(this);
diff --git a/chrome/browser/importer/nss_decryptor.cc b/chrome/browser/importer/nss_decryptor.cc
index c30aabd..b5893e1 100644
--- a/chrome/browser/importer/nss_decryptor.cc
+++ b/chrome/browser/importer/nss_decryptor.cc
@@ -8,10 +8,10 @@
 #include "build/build_config.h"
 #include "chrome/common/sqlite_utils.h"
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 #include <pk11pub.h>
 #include <pk11sdr.h>
-#endif  // defined(OS_LINUX)
+#endif  // defined(USE_NSS)
 
 #include "base/base64.h"
 #include "base/utf_string_conversions.h"
@@ -84,11 +84,11 @@ string16 NSSDecryptor::Decrypt(const std::string& crypt) const {
     SECItem reply;
     reply.data = NULL;
     reply.len = 0;
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
     result = PK11SDR_DecryptWithSlot(slot, &request, &reply, NULL);
 #else
     result = PK11SDR_Decrypt(&request, &reply, NULL);
-#endif  // defined(OS_LINUX)
+#endif  // defined(USE_NSS)
     if (result == SECSuccess)
       plain.assign(reinterpret_cast<char*>(reply.data), reply.len);
 
diff --git a/chrome/browser/importer/nss_decryptor.h b/chrome/browser/importer/nss_decryptor.h
index d2ef391..ac32ff2 100644
--- a/chrome/browser/importer/nss_decryptor.h
+++ b/chrome/browser/importer/nss_decryptor.h
@@ -7,10 +7,10 @@
 
 #include "build/build_config.h"
 
-#if defined(OS_LINUX)
-#include "chrome/browser/importer/nss_decryptor_linux.h"
-#elif defined(OS_MACOSX)
+#if defined(OS_MACOSX)
 #include "chrome/browser/importer/nss_decryptor_mac.h"
+#elif defined(OS_NIX)
+#include "chrome/browser/importer/nss_decryptor_linux.h"
 #elif defined(OS_WIN)
 #include "chrome/browser/importer/nss_decryptor_win.h"
 #endif
diff --git a/chrome/browser/jankometer.cc b/chrome/browser/jankometer.cc
index 6d396ef..dea001b 100644
--- a/chrome/browser/jankometer.cc
+++ b/chrome/browser/jankometer.cc
@@ -21,7 +21,7 @@
 #include "chrome/browser/chrome_thread.h"
 #include "chrome/common/chrome_switches.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include "chrome/common/gtk_util.h"
 #endif
 
@@ -177,7 +177,7 @@ class JankObserver : public base::RefCountedThreadSafe<JankObserver>,
   virtual void DidProcessMessage(const MSG& msg) {
     EndProcessingTimers();
   }
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   virtual void WillProcessEvent(GdkEvent* event) {
     begin_process_message_ = TimeTicks::Now();
     // TODO(evanm): we want to set queueing_time_ using
diff --git a/chrome/browser/memory_details.cc b/chrome/browser/memory_details.cc
index f212698..ba413de 100644
--- a/chrome/browser/memory_details.cc
+++ b/chrome/browser/memory_details.cc
@@ -17,7 +17,7 @@
 #include "chrome/common/url_constants.h"
 #include "grit/chromium_strings.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include "chrome/browser/zygote_host_linux.h"
 #include "chrome/browser/renderer_host/render_sandbox_host_linux.h"
 #endif
@@ -72,7 +72,7 @@ void MemoryDetails::CollectChildInfoOnIOThread() {
 void MemoryDetails::CollectChildInfoOnUIThread() {
   DCHECK(ChromeThread::CurrentlyOn(ChromeThread::UI));
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   const pid_t zygote_pid = Singleton<ZygoteHost>()->pid();
   const pid_t sandbox_helper_pid = Singleton<RenderSandboxHostLinux>()->pid();
 #endif
@@ -149,7 +149,7 @@ void MemoryDetails::CollectChildInfoOnUIThread() {
       }
     }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     if (process.pid == zygote_pid) {
       process.type = ChildProcessInfo::ZYGOTE_PROCESS;
     } else if (process.pid == sandbox_helper_pid) {
diff --git a/chrome/browser/net/chrome_url_request_context.cc b/chrome/browser/net/chrome_url_request_context.cc
index 998afc7..3d68a6a 100644
--- a/chrome/browser/net/chrome_url_request_context.cc
+++ b/chrome/browser/net/chrome_url_request_context.cc
@@ -31,7 +31,7 @@
 #include "net/url_request/url_request.h"
 #include "webkit/glue/webkit_glue.h"
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 #include "net/ocsp/nss_ocsp.h"
 #endif
 
@@ -194,7 +194,7 @@ ChromeURLRequestContext* FactoryForOriginal::Create() {
       new ChromeAppCacheService(profile_dir_path_, false));
   context->appcache_service()->set_request_context(context);
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
   // TODO(ukai): find a better way to set the URLRequestContext for OCSP.
   net::SetURLRequestContextForOCSP(context);
 #endif
@@ -650,7 +650,7 @@ ChromeURLRequestContext::~ChromeURLRequestContext() {
     proxy_service_->SetProxyScriptFetcher(NULL);
   }
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
   if (this == net::GetURLRequestContextForOCSP()) {
     // We are releasing the URLRequestContext used by OCSP handlers.
     net::SetURLRequestContextForOCSP(NULL);
diff --git a/chrome/browser/options_util.cc b/chrome/browser/options_util.cc
index 258ac8e..c9e0ba5 100644
--- a/chrome/browser/options_util.cc
+++ b/chrome/browser/options_util.cc
@@ -24,7 +24,7 @@ void OptionsUtil::ResetToDefaults(Profile* profile) {
     prefs::kCookieBehavior,
     prefs::kDefaultCharset,
     prefs::kDnsPrefetchingEnabled,
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     prefs::kCertRevocationCheckingEnabled,
     prefs::kSSL2Enabled,
     prefs::kSSL3Enabled,
diff --git a/chrome/browser/plugin_process_host.cc b/chrome/browser/plugin_process_host.cc
index f187b8c..64167be 100644
--- a/chrome/browser/plugin_process_host.cc
+++ b/chrome/browser/plugin_process_host.cc
@@ -45,7 +45,7 @@
 #include "webkit/glue/plugins/plugin_constants_win.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include "app/gfx/gtk_native_view_id_manager.h"
 #endif
 
@@ -281,13 +281,13 @@ void PluginProcessHost::AddWindow(HWND window) {
 
 #endif  // defined(OS_WIN)
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 void PluginProcessHost::OnMapNativeViewId(gfx::NativeViewId id,
                                           gfx::PluginWindowHandle* output) {
   *output = 0;
   Singleton<GtkNativeViewManager>()->GetXIDForId(output, id);
 }
-#endif  // defined(OS_LINUX)
+#endif  // defined(TOOLKIT_GTK)
 
 PluginProcessHost::PluginProcessHost()
     : ChildProcessHost(
@@ -468,7 +468,7 @@ void PluginProcessHost::OnMessageReceived(const IPC::Message& msg) {
                         OnPluginWindowDestroyed)
     IPC_MESSAGE_HANDLER(PluginProcessHostMsg_DownloadUrl, OnDownloadUrl)
 #endif
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     IPC_MESSAGE_HANDLER(PluginProcessHostMsg_MapNativeViewId,
                         OnMapNativeViewId)
 #endif
diff --git a/chrome/browser/plugin_process_host.h b/chrome/browser/plugin_process_host.h
index aee437a..3282bd3 100644
--- a/chrome/browser/plugin_process_host.h
+++ b/chrome/browser/plugin_process_host.h
@@ -118,7 +118,7 @@ class PluginProcessHost : public ChildProcessHost,
                      gfx::NativeWindow caller_window);
 #endif
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   void OnMapNativeViewId(gfx::NativeViewId id, gfx::PluginWindowHandle* output);
 #endif
 
diff --git a/chrome/browser/process_singleton.h b/chrome/browser/process_singleton.h
index 76c9c22..5cbfbe8 100644
--- a/chrome/browser/process_singleton.h
+++ b/chrome/browser/process_singleton.h
@@ -52,7 +52,7 @@ class ProcessSingleton : public NonThreadSafe {
   // first one, so this function won't find it.
   NotifyResult NotifyOtherProcess();
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Exposed for testing.  We use a timeout on Linux, and in tests we want
   // this timeout to be short.
   NotifyResult NotifyOtherProcessWithTimeout(const CommandLine& command_line,
@@ -87,7 +87,7 @@ class ProcessSingleton : public NonThreadSafe {
   }
 
  private:
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   // Timeout for the current browser process to respond. 20 seconds should be
   // enough. It's only used in Windows and Linux implementations.
   static const int kTimeoutInSeconds = 20;
@@ -116,7 +116,7 @@ class ProcessSingleton : public NonThreadSafe {
 
   HWND remote_window_;  // The HWND_MESSAGE of another browser.
   HWND window_;  // The HWND_MESSAGE window.
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   // Path in file system to the socket.
   FilePath socket_path_;
 
diff --git a/chrome/browser/profile.cc b/chrome/browser/profile.cc
index 51990a0..6fb2d7a 100644
--- a/chrome/browser/profile.cc
+++ b/chrome/browser/profile.cc
@@ -62,7 +62,7 @@
 #include "net/base/transport_security_state.h"
 #include "webkit/database/database_tracker.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include "chrome/browser/gtk/gtk_theme_provider.h"
 #endif
 
@@ -147,7 +147,7 @@ void Profile::RegisterUserPrefs(PrefService* prefs) {
       IDS_SPELLCHECK_DICTIONARY);
   prefs->RegisterBooleanPref(prefs::kEnableSpellCheck, true);
   prefs->RegisterBooleanPref(prefs::kEnableAutoSpellCorrect, true);
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   prefs->RegisterBooleanPref(prefs::kUsesSystemTheme, false);
 #endif
   prefs->RegisterFilePathPref(prefs::kCurrentThemePackFilename, FilePath());
@@ -1052,7 +1052,7 @@ void ProfileImpl::CreatePasswordStore() {
   DCHECK(!created_password_store_ && password_store_.get() == NULL);
   created_password_store_ = true;
   scoped_refptr<PasswordStore> ps;
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // TODO(evanm): implement "native" password management.
   // This bug describes the issues.
   // http://code.google.com/p/chromium/issues/detail?id=12351
@@ -1108,7 +1108,7 @@ PersonalDataManager* ProfileImpl::GetPersonalDataManager() {
 
 void ProfileImpl::InitThemes() {
   if (!created_theme_provider_) {
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
     theme_provider_.reset(new GtkThemeProvider);
 #else
     theme_provider_.reset(new BrowserThemeProvider);
diff --git a/chrome/browser/renderer_host/backing_store.h b/chrome/browser/renderer_host/backing_store.h
index 387a564..2a42a79 100644
--- a/chrome/browser/renderer_host/backing_store.h
+++ b/chrome/browser/renderer_host/backing_store.h
@@ -16,7 +16,7 @@
 #elif defined(OS_MACOSX)
 #include "base/scoped_cftyperef.h"
 #include "skia/ext/platform_canvas.h"
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
 #include "chrome/common/x11_util.h"
 #endif
 
@@ -32,7 +32,7 @@ class BackingStore {
  public:
 #if defined(OS_WIN) || defined(OS_MACOSX)
   BackingStore(RenderWidgetHost* widget, const gfx::Size& size);
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
   // Create a backing store on the X server. The visual is an Xlib Visual
   // describing the format of the target window and the depth is the color
   // depth of the X window which will be drawn into.
@@ -70,7 +70,7 @@ class BackingStore {
   // Paint the layer into a graphics context--if the target is a window,
   // this should be a GPU->GPU copy (and therefore very fast).
   void PaintToRect(const gfx::Rect& dest_rect, CGContextRef target);
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
   Display* display() const { return display_; }
   XID root_window() const { return root_window_; }
 
@@ -139,7 +139,7 @@ class BackingStore {
 #elif defined(OS_MACOSX)
   scoped_cftyperef<CGContextRef> cg_bitmap_;
   scoped_cftyperef<CGLayerRef> cg_layer_;
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
   // Paints the bitmap from the renderer onto the backing store without
   // using Xrender to composite the pixmaps.
   void PaintRectWithoutXrender(TransportDIB* bitmap,
diff --git a/chrome/browser/renderer_host/backing_store_x.cc b/chrome/browser/renderer_host/backing_store_x.cc
index 74ea8ac..e2fe02f 100644
--- a/chrome/browser/renderer_host/backing_store_x.cc
+++ b/chrome/browser/renderer_host/backing_store_x.cc
@@ -43,6 +43,9 @@ static void DestroySharedImage(Display* display,
   XShmDetach(display, shminfo);
   XDestroyImage(image);
   shmdt(shminfo->shmaddr);
+#if defined(OS_FREEBSD)
+  shmctl(shminfo->shmid, IPC_RMID, 0);
+#endif
 }
 
 BackingStore::BackingStore(RenderWidgetHost* widget,
@@ -57,7 +60,11 @@ BackingStore::BackingStore(RenderWidgetHost* widget,
       visual_(visual),
       visual_depth_(depth),
       root_window_(x11_util::GetX11RootWindow()) {
+#if defined(OS_FREEBSD)
+  COMPILE_ASSERT(BYTE_ORDER == LITTLE_ENDIAN, assumes_little_endian);
+#else
   COMPILE_ASSERT(__BYTE_ORDER == __LITTLE_ENDIAN, assumes_little_endian);
+#endif
 
   pixmap_ = XCreatePixmap(display_, root_window_,
                           size.width(), size.height(), depth);
@@ -404,7 +411,9 @@ SkBitmap BackingStore::PaintRectToBitmap(const gfx::Rect& rect) {
     }
 
     void* mapped_memory = shmat(shminfo.shmid, NULL, SHM_RDONLY);
+#if !defined(OS_FREEBSD)
     shmctl(shminfo.shmid, IPC_RMID, 0);
+#endif
     if (mapped_memory == (void*)-1) {
       XDestroyImage(image);
       return SkBitmap();
diff --git a/chrome/browser/renderer_host/browser_render_process_host.cc b/chrome/browser/renderer_host/browser_render_process_host.cc
index a6f02a3..f3a6471 100644
--- a/chrome/browser/renderer_host/browser_render_process_host.cc
+++ b/chrome/browser/renderer_host/browser_render_process_host.cc
@@ -298,11 +298,11 @@ bool BrowserRenderProcessHost::Init(bool is_extensions_process,
     in_process_renderer_.reset(new RendererMainThread(channel_id));
 
     base::Thread::Options options;
-#if !defined(OS_LINUX)
+#if !defined(USE_X11)
     // In-process plugins require this to be a UI message loop.
     options.message_loop_type = MessageLoop::TYPE_UI;
 #else
-    // We can't have multiple UI loops on Linux, so we don't support
+    // We can't have multiple UI loops on X, so we don't support
     // in-process plugins.
     options.message_loop_type = MessageLoop::TYPE_DEFAULT;
 #endif
@@ -670,9 +670,9 @@ TransportDIB* BrowserRenderProcessHost::MapTransportDIB(
   // On OSX, the browser allocates all DIBs and keeps a file descriptor around
   // for each.
   return widget_helper_->MapTransportDIB(dib_id);
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   return TransportDIB::Map(dib_id);
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_NIX)
 }
 
 TransportDIB* BrowserRenderProcessHost::GetTransportDIB(
diff --git a/chrome/browser/renderer_host/mock_render_process_host.cc b/chrome/browser/renderer_host/mock_render_process_host.cc
index 8be0416..e05b092 100644
--- a/chrome/browser/renderer_host/mock_render_process_host.cc
+++ b/chrome/browser/renderer_host/mock_render_process_host.cc
@@ -97,7 +97,7 @@ TransportDIB* MockRenderProcessHost::GetTransportDIB(TransportDIB::Id dib_id) {
   // On Mac, TransportDIBs are always created in the browser, so we cannot map
   // one from a dib_id.
   transport_dib_ = TransportDIB::Create(100 * 100 * 4, 0);
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   transport_dib_ = TransportDIB::Map(dib_id);
 #endif
 
diff --git a/chrome/browser/renderer_host/render_sandbox_host_linux.cc b/chrome/browser/renderer_host/render_sandbox_host_linux.cc
index 2e89799..54b0d11 100644
--- a/chrome/browser/renderer_host/render_sandbox_host_linux.cc
+++ b/chrome/browser/renderer_host/render_sandbox_host_linux.cc
@@ -355,7 +355,12 @@ void RenderSandboxHostLinux::Init(const std::string& sandbox_path) {
   // inherit some sockets. With PF_UNIX+SOCK_DGRAM, it can call sendmsg to send
   // a datagram to any (abstract) socket on the same system. With
   // SOCK_SEQPACKET, this is prevented.
+#if defined(OS_FREEBSD)
+  if (socketpair(AF_UNIX, SOCK_SEQPACKET, 0, fds) != 0)
+    CHECK(socketpair(AF_UNIX, SOCK_DGRAM, 0, fds) == 0);
+#else
   CHECK(socketpair(AF_UNIX, SOCK_SEQPACKET, 0, fds) == 0);
+#endif
 
   renderer_socket_ = fds[0];
   const int browser_socket = fds[1];
diff --git a/chrome/browser/renderer_host/render_view_host_delegate.cc b/chrome/browser/renderer_host/render_view_host_delegate.cc
index 8f424db..2aed28d 100644
--- a/chrome/browser/renderer_host/render_view_host_delegate.cc
+++ b/chrome/browser/renderer_host/render_view_host_delegate.cc
@@ -10,7 +10,7 @@
 #include "googleurl/src/gurl.h"
 #include "webkit/glue/webpreferences.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include "chrome/common/gtk_util.h"
 #endif
 
diff --git a/chrome/browser/renderer_host/render_widget_host.cc b/chrome/browser/renderer_host/render_widget_host.cc
index c40bbf8..12f4669 100644
--- a/chrome/browser/renderer_host/render_widget_host.cc
+++ b/chrome/browser/renderer_host/render_widget_host.cc
@@ -132,7 +132,7 @@ void RenderWidgetHost::OnMessageReceived(const IPC::Message &msg) {
     IPC_MESSAGE_HANDLER(ViewHostMsg_FocusedNodeChanged, OnMsgFocusedNodeChanged)
     IPC_MESSAGE_HANDLER(ViewHostMsg_SetCursor, OnMsgSetCursor)
     IPC_MESSAGE_HANDLER(ViewHostMsg_ImeUpdateStatus, OnMsgImeUpdateStatus)
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     IPC_MESSAGE_HANDLER(ViewHostMsg_CreatePluginContainer,
                         OnMsgCreatePluginContainer)
     IPC_MESSAGE_HANDLER(ViewHostMsg_DestroyPluginContainer,
@@ -809,7 +809,7 @@ void RenderWidgetHost::OnMsgImeUpdateStatus(int control,
   }
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 
 void RenderWidgetHost::OnMsgCreatePluginContainer(gfx::PluginWindowHandle id) {
   // TODO(piman): view_ can only be NULL with delayed view creation in
diff --git a/chrome/browser/renderer_host/render_widget_host.h b/chrome/browser/renderer_host/render_widget_host.h
index dc425b0..655bc1b 100644
--- a/chrome/browser/renderer_host/render_widget_host.h
+++ b/chrome/browser/renderer_host/render_widget_host.h
@@ -424,7 +424,7 @@ class RenderWidgetHost : public IPC::Channel::Listener,
   // Using int instead of ViewHostMsg_ImeControl for control's type to avoid
   // having to bring in render_messages.h in a header file.
   void OnMsgImeUpdateStatus(int control, const gfx::Rect& caret_rect);
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   void OnMsgCreatePluginContainer(gfx::PluginWindowHandle id);
   void OnMsgDestroyPluginContainer(gfx::PluginWindowHandle id);
 #elif defined(OS_MACOSX)
diff --git a/chrome/browser/renderer_host/render_widget_host_unittest.cc b/chrome/browser/renderer_host/render_widget_host_unittest.cc
index e3f4517..001a6db 100644
--- a/chrome/browser/renderer_host/render_widget_host_unittest.cc
+++ b/chrome/browser/renderer_host/render_widget_host_unittest.cc
@@ -343,7 +343,7 @@ TEST_F(RenderWidgetHostTest, ResizeThenCrash) {
 
 // Tests setting custom background
 TEST_F(RenderWidgetHostTest, Background) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   scoped_ptr<RenderWidgetHostView> view(
       RenderWidgetHostView::CreateViewForWidget(host_.get()));
   host_->set_view(view.get());
diff --git a/chrome/browser/renderer_host/render_widget_host_view.h b/chrome/browser/renderer_host/render_widget_host_view.h
index 3a71011..150a063 100644
--- a/chrome/browser/renderer_host/render_widget_host_view.h
+++ b/chrome/browser/renderer_host/render_widget_host_view.h
@@ -159,7 +159,7 @@ class RenderWidgetHostView {
   virtual void SetActive(bool active) = 0;
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   virtual void CreatePluginContainer(gfx::PluginWindowHandle id) = 0;
   virtual void DestroyPluginContainer(gfx::PluginWindowHandle id) = 0;
 #endif
diff --git a/chrome/browser/renderer_host/resource_dispatcher_host.cc b/chrome/browser/renderer_host/resource_dispatcher_host.cc
index 78656b2..12b8384 100644
--- a/chrome/browser/renderer_host/resource_dispatcher_host.cc
+++ b/chrome/browser/renderer_host/resource_dispatcher_host.cc
@@ -1079,7 +1079,7 @@ void ResourceDispatcherHost::OnCertificateRequested(
     net::SSLCertRequestInfo* cert_request_info) {
   DCHECK(request);
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   bool select_first_cert = CommandLine::ForCurrentProcess()->HasSwitch(
       switches::kAutoSSLClientAuth);
   net::X509Certificate* cert =
diff --git a/chrome/browser/renderer_host/resource_message_filter.cc b/chrome/browser/renderer_host/resource_message_filter.cc
index 662a5c2..13b6edb 100644
--- a/chrome/browser/renderer_host/resource_message_filter.cc
+++ b/chrome/browser/renderer_host/resource_message_filter.cc
@@ -63,7 +63,7 @@
 #if defined(OS_WIN) || defined(OS_MACOSX)
 #include "chrome/browser/printing/print_job_manager.h"
 #include "chrome/browser/printing/printer_query.h"
-#elif defined(OS_LINUX) || defined(OS_FREEBSD)
+#elif defined(OS_NIX)
 // TODO(port) remove this.
 #include "chrome/common/temp_scaffolding_stubs.h"
 #endif
@@ -357,7 +357,7 @@ bool ResourceMessageFilter::OnMessageReceived(const IPC::Message& msg) {
 #if defined(OS_WIN)
       IPC_MESSAGE_HANDLER(ViewHostMsg_DuplicateSection, OnDuplicateSection)
 #endif
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       IPC_MESSAGE_HANDLER_DELAY_REPLY(ViewHostMsg_AllocateTempFileForPrinting,
                                       OnAllocateTempFileForPrinting)
       IPC_MESSAGE_HANDLER(ViewHostMsg_TempFileForPrintingWritten,
@@ -693,9 +693,9 @@ void ResourceMessageFilter::OnClipboardWriteObjects(
       ChromeThread::UI, FROM_HERE, new WriteClipboardTask(long_living_objects));
 }
 
-#if !defined(OS_LINUX)
-// On non-Linux platforms, clipboard actions can be performed on the IO thread.
-// On Linux, since the clipboard is linked with GTK, we either have to do this
+#if !defined(USE_X11)
+// On non-X/11 platforms, clipboard actions can be performed on the IO thread.
+// On X/11, since the clipboard is linked with GTK, we either have to do this
 // with GTK on the UI thread, or with Xlib on the BACKGROUND_X11 thread. In an
 // ideal world, we would do the latter. However, for now we're going to
 // terminate these calls on the UI thread. This risks deadlock in the case of
diff --git a/chrome/browser/renderer_host/resource_message_filter.h b/chrome/browser/renderer_host/resource_message_filter.h
index 89db5d7..0bbc018 100644
--- a/chrome/browser/renderer_host/resource_message_filter.h
+++ b/chrome/browser/renderer_host/resource_message_filter.h
@@ -58,7 +58,7 @@ struct WebScreenInfo;
 }
 
 struct ViewHostMsg_ScriptedPrint_Params;
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 struct ViewHostMsg_DidPrintPage_Params;
 #endif
 
@@ -224,7 +224,7 @@ class ResourceMessageFilter : public IPC::ChannelProxy::MessageFilter,
                           base::SharedMemoryHandle* browser_handle);
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Used to ask the browser allocate a temporary file for the renderer
   // to fill in resulting PDF in renderer.
   void OnAllocateTempFileForPrinting(IPC::Message* reply_msg);
@@ -301,7 +301,7 @@ class ResourceMessageFilter : public IPC::ChannelProxy::MessageFilter,
       const std::string& default_locale,
       IPC::Message* reply_msg);
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   void SendDelayedReply(IPC::Message* reply_msg);
   void DoOnGetScreenInfo(gfx::NativeViewId view, IPC::Message* reply_msg);
   void DoOnGetWindowRect(gfx::NativeViewId view, IPC::Message* reply_msg);
diff --git a/chrome/browser/renderer_host/test/test_render_view_host.h b/chrome/browser/renderer_host/test/test_render_view_host.h
index b1458a1..450368f 100644
--- a/chrome/browser/renderer_host/test/test_render_view_host.h
+++ b/chrome/browser/renderer_host/test/test_render_view_host.h
@@ -82,7 +82,7 @@ class TestRenderWidgetHostView : public RenderWidgetHostView {
   virtual void SetActive(bool active);
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   virtual void CreatePluginContainer(gfx::PluginWindowHandle id) { }
   virtual void DestroyPluginContainer(gfx::PluginWindowHandle id) { }
 #endif
diff --git a/chrome/browser/renderer_preferences_util.cc b/chrome/browser/renderer_preferences_util.cc
index d3ef9a4..2300d08 100644
--- a/chrome/browser/renderer_preferences_util.cc
+++ b/chrome/browser/renderer_preferences_util.cc
@@ -7,7 +7,7 @@
 #include "base/singleton.h"
 #include "chrome/browser/profile.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include "chrome/browser/gtk/gtk_theme_provider.h"
 #include "chrome/common/gtk_util.h"
 #endif
@@ -16,7 +16,7 @@ namespace renderer_preferences_util {
 
 RendererPreferences GetInitedRendererPreferences(Profile* profile) {
   RendererPreferences* prefs = Singleton<RendererPreferences>::get();
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   static bool inited = false;
   if (!inited) {
     gtk_util::InitRendererPrefsFromGtkSettings(prefs,
diff --git a/chrome/browser/search_engines/template_url_prepopulate_data.cc b/chrome/browser/search_engines/template_url_prepopulate_data.cc
index ebb8801..222d01f 100644
--- a/chrome/browser/search_engines/template_url_prepopulate_data.cc
+++ b/chrome/browser/search_engines/template_url_prepopulate_data.cc
@@ -4,7 +4,7 @@
 
 #include "chrome/browser/search_engines/template_url_prepopulate_data.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include <locale.h>
 #endif
 
@@ -2321,7 +2321,7 @@ int GetCurrentCountryID() {
                                            static_cast<char>(isobuf[1]));
 }
 
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 
 int GetCurrentCountryID() {
   const char* locale = setlocale(LC_MESSAGES, NULL);
diff --git a/chrome/browser/shell_integration.h b/chrome/browser/shell_integration.h
index 9e7b8bb..51629d2 100644
--- a/chrome/browser/shell_integration.h
+++ b/chrome/browser/shell_integration.h
@@ -57,7 +57,7 @@ class ShellIntegration {
     bool create_in_quick_launch_bar;
   };
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // Returns filename for .desktop file based on |url|, sanitized for security.
   static FilePath GetDesktopShortcutFilename(const GURL& url);
 
@@ -72,7 +72,7 @@ class ShellIntegration {
   // returning from this function, because actual file operation is done on the
   // file thread.
   static void CreateDesktopShortcut(const ShortcutInfo& shortcut_info);
-#endif  // defined(OS_LINUX)
+#endif  // defined(USE_X11)
 
   // The current default browser UI state
   enum DefaultBrowserUIState {
diff --git a/chrome/browser/shell_integration_linux.cc b/chrome/browser/shell_integration_linux.cc
index 3766249..8f8b20e 100644
--- a/chrome/browser/shell_integration_linux.cc
+++ b/chrome/browser/shell_integration_linux.cc
@@ -195,7 +195,8 @@ class CreateDesktopShortcutTask : public Task {
     FilePath desktop_path;
     if (!PathService::Get(chrome::DIR_USER_DESKTOP, &desktop_path))
       return;
-
+#if !defined(OS_FREEBSD)
+//BSD Linux-specific calls like openat are used so defined out for BSD.
     int desktop_fd = open(desktop_path.value().c_str(), O_RDONLY | O_DIRECTORY);
     if (desktop_fd < 0)
       return;
@@ -221,6 +222,7 @@ class CreateDesktopShortcutTask : public Task {
     }
 
     HANDLE_EINTR(close(desktop_fd));
+#endif //!defined(OS_FREEBSD)
   }
 
   void CreateInApplicationsMenu(const FilePath& shortcut_filename,
diff --git a/chrome/browser/shell_integration_unittest.cc b/chrome/browser/shell_integration_unittest.cc
index 6352d5a..633d8f0 100644
--- a/chrome/browser/shell_integration_unittest.cc
+++ b/chrome/browser/shell_integration_unittest.cc
@@ -12,7 +12,7 @@
 
 #define FPL FILE_PATH_LITERAL
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 TEST(ShellIntegrationTest, GetDesktopShortcutFilename) {
   const struct {
     const FilePath::CharType* path;
@@ -170,4 +170,4 @@ TEST(ShellIntegrationTest, GetDesktopFileContents) {
                   test_cases[i].icon_name));
   }
 }
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_NIX)
diff --git a/chrome/browser/sync/glue/sync_backend_host.cc b/chrome/browser/sync/glue/sync_backend_host.cc
index 8bff80c..15201a1 100644
--- a/chrome/browser/sync/glue/sync_backend_host.cc
+++ b/chrome/browser/sync/glue/sync_backend_host.cc
@@ -148,6 +148,8 @@ std::string MakeUserAgentForSyncapi() {
   user_agent += "WIN ";
 #elif defined(OS_LINUX)
   user_agent += "LINUX ";
+#elif defined(OS_FREEBSD)
+  user_agent += "FREEBSD ";
 #elif defined(OS_MACOSX)
   user_agent += "MAC ";
 #endif
diff --git a/chrome/browser/sync/notifier/base/nethelpers.cc b/chrome/browser/sync/notifier/base/nethelpers.cc
index e342479..f92b388 100644
--- a/chrome/browser/sync/notifier/base/nethelpers.cc
+++ b/chrome/browser/sync/notifier/base/nethelpers.cc
@@ -16,7 +16,7 @@ hostent* SafeGetHostByName(const char* hostname, hostent* host,
   if (!result) {
     *herrno = WSAGetLastError();
   }
-#elif OS_LINUX
+#elif OS_NIX
   gethostbyname_r(hostname, host, buffer, buffer_len, &result, herrno);
 #elif OS_MACOSX
   result = getipnodebyname(hostname, AF_INET, AI_DEFAULT, herrno);
@@ -31,7 +31,7 @@ hostent* SafeGetHostByName(const char* hostname, hostent* host,
 void FreeHostEnt(hostent* host) {
 #if WIN32
   // No need to free anything, struct returned is static memory.
-#elif OS_LINUX
+#elif OS_NIX
   // No need to free anything, we pass in a pointer to a struct.
 #elif OS_MACOSX
   freehostent(host);
diff --git a/chrome/browser/sync/notifier/communicator/xmpp_socket_adapter.cc b/chrome/browser/sync/notifier/communicator/xmpp_socket_adapter.cc
index b7a3602..1a25838 100644
--- a/chrome/browser/sync/notifier/communicator/xmpp_socket_adapter.cc
+++ b/chrome/browser/sync/notifier/communicator/xmpp_socket_adapter.cc
@@ -9,7 +9,7 @@
 
 #include "base/logging.h"
 #include "chrome/browser/sync/notifier/communicator/product_info.h"
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_POSIX)
 #include "chrome/browser/sync/notifier/communicator/ssl_socket_adapter.h"
 #endif
 #include "talk/base/byteorder.h"
diff --git a/chrome/browser/sync/syncable/syncable.cc b/chrome/browser/sync/syncable/syncable.cc
index 7c82222..e80faa6 100755
--- a/chrome/browser/sync/syncable/syncable.cc
+++ b/chrome/browser/sync/syncable/syncable.cc
@@ -75,7 +75,7 @@ int64 Now() {
   LARGE_INTEGER n;
   memcpy(&n, &filetime, sizeof(filetime));
   return n.QuadPart;
-#elif defined(OS_LINUX) || defined(OS_MACOSX)
+#elif defined(OS_POSIX)
   struct timeval tv;
   gettimeofday(&tv, NULL);
   return static_cast<int64>(tv.tv_sec);
diff --git a/chrome/browser/tab_contents/constrained_window.h b/chrome/browser/tab_contents/constrained_window.h
index 057ee27..9603ada 100644
--- a/chrome/browser/tab_contents/constrained_window.h
+++ b/chrome/browser/tab_contents/constrained_window.h
@@ -14,7 +14,7 @@ namespace views {
 class WindowDelegate;
 }
 typedef views::WindowDelegate ConstrainedWindowDelegate;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 class ConstrainedWindowGtkDelegate;
 typedef ConstrainedWindowGtkDelegate ConstrainedWindowDelegate;
 #elif defined(OS_MACOSX)
diff --git a/chrome/browser/tab_contents/interstitial_page.cc b/chrome/browser/tab_contents/interstitial_page.cc
index d3da46e..4a1bc6f 100644
--- a/chrome/browser/tab_contents/interstitial_page.cc
+++ b/chrome/browser/tab_contents/interstitial_page.cc
@@ -467,7 +467,7 @@ void InterstitialPage::DontProceed() {
 }
 
 void InterstitialPage::SetSize(const gfx::Size& size) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   // When a tab is closed, we might be resized after our view was NULLed
   // (typically if there was an info-bar).
   if (render_view_host_->view())
diff --git a/chrome/browser/tab_contents/tab_contents.cc b/chrome/browser/tab_contents/tab_contents.cc
index 06801fd..c00f9cb 100644
--- a/chrome/browser/tab_contents/tab_contents.cc
+++ b/chrome/browser/tab_contents/tab_contents.cc
@@ -291,7 +291,7 @@ TabContents::TabContents(Profile* profile,
                  NotificationService::AllSources());
   registrar_.Add(this, NotificationType::RENDER_WIDGET_HOST_DESTROYED,
                  NotificationService::AllSources());
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   registrar_.Add(this, NotificationType::BROWSER_THEME_CHANGED,
                  NotificationService::AllSources());
 #endif
@@ -2586,7 +2586,7 @@ void TabContents::Observe(NotificationType type,
       break;
     }
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
     case NotificationType::BROWSER_THEME_CHANGED: {
       render_view_host()->SyncRendererPrefs();
       break;
diff --git a/chrome/browser/tab_contents/tab_contents.h b/chrome/browser/tab_contents/tab_contents.h
index 2a84b8c..77de575 100644
--- a/chrome/browser/tab_contents/tab_contents.h
+++ b/chrome/browser/tab_contents/tab_contents.h
@@ -41,7 +41,7 @@
 #include "webkit/glue/password_form.h"
 #include "webkit/glue/webpreferences.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 // Remove when we've finished porting the supporting classes.
 #include "chrome/common/temp_scaffolding_stubs.h"
 #elif defined(OS_WIN) || defined(OS_MACOSX)
@@ -670,7 +670,7 @@ class TabContents : public PageNavigator,
   friend class TabContentsViewWin;
 #elif defined(OS_MACOSX)
   friend class TabContentsViewMac;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   friend class TabContentsViewGtk;
 #endif
 
diff --git a/chrome/browser/tab_contents/thumbnail_generator.cc b/chrome/browser/tab_contents/thumbnail_generator.cc
index 1a5c5c4..203621c 100644
--- a/chrome/browser/tab_contents/thumbnail_generator.cc
+++ b/chrome/browser/tab_contents/thumbnail_generator.cc
@@ -129,7 +129,7 @@ SkBitmap GetThumbnailForBackingStore(BackingStore* backing_store) {
   // can't actually be copied.
   const SkBitmap& bmp = temp_canvas.getTopPlatformDevice().accessBitmap(false);
 
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
   SkBitmap bmp = backing_store->PaintRectToBitmap(
       gfx::Rect(0, 0,
                 backing_store->size().width(), backing_store->size().height()));
diff --git a/chrome/browser/task_manager_resource_providers.cc b/chrome/browser/task_manager_resource_providers.cc
index 715dd08..f82823d 100644
--- a/chrome/browser/task_manager_resource_providers.cc
+++ b/chrome/browser/task_manager_resource_providers.cc
@@ -706,7 +706,7 @@ TaskManagerBrowserProcessResource::TaskManagerBrowserProcessResource()
       default_icon_ = IconUtil::CreateSkBitmapFromHICON(icon, icon_size);
     }
   }
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   if (!default_icon_) {
     ResourceBundle& rb = ResourceBundle::GetSharedInstance();
     default_icon_ = rb.GetBitmapNamed(IDR_PRODUCT_LOGO_16);
diff --git a/chrome/browser/unload_uitest.cc b/chrome/browser/unload_uitest.cc
index 86d0a82..3717884 100644
--- a/chrome/browser/unload_uitest.cc
+++ b/chrome/browser/unload_uitest.cc
@@ -158,7 +158,7 @@ class UnloadTest : public UITest {
   }
 
   void ClickModalDialogButton(MessageBoxFlags::DialogButton button) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
     bool modal_dialog_showing = false;
     MessageBoxFlags::DialogButton available_buttons;
     EXPECT_TRUE(automation()->WaitForAppModalDialog(action_timeout_ms()));
diff --git a/chrome/browser/views/blocked_popup_container_view_views.cc b/chrome/browser/views/blocked_popup_container_view_views.cc
index 4feedba..f405143 100644
--- a/chrome/browser/views/blocked_popup_container_view_views.cc
+++ b/chrome/browser/views/blocked_popup_container_view_views.cc
@@ -29,7 +29,7 @@
 
 #if defined(OS_WIN)
 #include "views/widget/widget_win.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "views/widget/widget_gtk.h"
 #endif
 
@@ -132,7 +132,7 @@ void BlockedPopupContainerViewWidget::OnSize(UINT param, const CSize& size) {
   LayoutRootView();
 }
 
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 
 // BlockedPopupContainerViewWidget GTK ----------------------------------------
 class BlockedPopupContainerViewWidget : public views::WidgetGtk {
diff --git a/chrome/browser/views/create_application_shortcut_view.cc b/chrome/browser/views/create_application_shortcut_view.cc
index 6551d15..9a53dbc 100644
--- a/chrome/browser/views/create_application_shortcut_view.cc
+++ b/chrome/browser/views/create_application_shortcut_view.cc
@@ -266,7 +266,7 @@ void CreateApplicationShortcutView::Init() {
         l10n_util::GetString(IDS_PIN_TO_TASKBAR_CHKBOX) :
         l10n_util::GetString(IDS_CREATE_SHORTCUTS_QUICK_LAUNCH_BAR_CHKBOX),
       profile->GetPrefs()->GetBoolean(prefs::kWebAppCreateInQuickLaunchBar));
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   menu_check_box_ = AddCheckbox(
       l10n_util::GetString(IDS_CREATE_SHORTCUTS_MENU_CHKBOX),
       profile->GetPrefs()->GetBoolean(prefs::kWebAppCreateInAppsMenu));
diff --git a/chrome/browser/views/download_item_view.cc b/chrome/browser/views/download_item_view.cc
index ecef749..e820baa 100644
--- a/chrome/browser/views/download_item_view.cc
+++ b/chrome/browser/views/download_item_view.cc
@@ -306,7 +306,7 @@ DownloadItemView::DownloadItemView(DownloadItem* download,
 
     // Extract the file extension (if any).
     FilePath filepath(download->original_name());
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     std::wstring extension = base::SysNativeMBToWide(filepath.Extension());
 #else
     std::wstring extension = filepath.Extension();
@@ -315,7 +315,7 @@ DownloadItemView::DownloadItemView(DownloadItem* download,
     // Remove leading '.'
     if (extension.length() > 0)
       extension = extension.substr(1);
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     std::wstring rootname =
         base::SysNativeMBToWide(filepath.BaseName().RemoveExtension().value());
 #else
diff --git a/chrome/browser/views/extensions/extension_view.cc b/chrome/browser/views/extensions/extension_view.cc
index 7945307..55f33d1 100644
--- a/chrome/browser/views/extensions/extension_view.cc
+++ b/chrome/browser/views/extensions/extension_view.cc
@@ -11,7 +11,7 @@
 
 #if defined(OS_WIN)
 #include "chrome/browser/renderer_host/render_widget_host_view_win.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "chrome/browser/renderer_host/render_widget_host_view_gtk.h"
 #endif
 
@@ -99,7 +99,7 @@ void ExtensionView::CreateWidgetHostView() {
   HWND hwnd = view_win->Create(GetWidget()->GetNativeView());
   view_win->ShowWindow(SW_SHOW);
   Attach(hwnd);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   RenderWidgetHostViewGtk* view_gtk =
       static_cast<RenderWidgetHostViewGtk*>(view);
   view_gtk->InitAsChild();
diff --git a/chrome/browser/views/find_bar_host_browsertest.cc b/chrome/browser/views/find_bar_host_browsertest.cc
index 0cb112f..9916ff7 100644
--- a/chrome/browser/views/find_bar_host_browsertest.cc
+++ b/chrome/browser/views/find_bar_host_browsertest.cc
@@ -652,7 +652,7 @@ IN_PROC_BROWSER_TEST_F(FindInPageControllerTest,
 }
 
 // Make sure Find box grabs the Esc accelerator and restores it again.
-#if defined(OS_LINUX)
+#if defined(USE_X11)
 // TODO(oshima): On Gtk/Linux, a focus out event is asynchronous and
 // hiding a find bar does not immediately update the target
 // accelerator. The last condition fails in most cases due to this
@@ -675,7 +675,7 @@ IN_PROC_BROWSER_TEST_F(FindInPageControllerTest,
   // GetNativeView / GetNativewWindow methods on BrowserWindow.
   // See http://crbug.com/26873.
   gfx::NativeView browser_view = browser()->window()->GetNativeHandle();
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   gfx::NativeView browser_view =
       GTK_WIDGET(browser()->window()->GetNativeHandle());
 #else
diff --git a/chrome/browser/views/find_bar_host_interactive_uitest.cc b/chrome/browser/views/find_bar_host_interactive_uitest.cc
index 3e6e48a..86d2340 100644
--- a/chrome/browser/views/find_bar_host_interactive_uitest.cc
+++ b/chrome/browser/views/find_bar_host_interactive_uitest.cc
@@ -38,7 +38,7 @@ class FindInPageTest : public InProcessBrowserTest {
 #if defined(TOOLKIT_VIEWS)
     views::View* view =
         reinterpret_cast<BrowserView*>(browser_window)->GetViewByID(view_id);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     gfx::NativeWindow window = browser_window->GetNativeHandle();
     ASSERT_TRUE(window);
     GtkWidget* view = ViewIDUtil::GetWidget(GTK_WIDGET(window), view_id);
diff --git a/chrome/browser/views/frame/browser_view.cc b/chrome/browser/views/frame/browser_view.cc
index 8d03e14..3c385f2 100644
--- a/chrome/browser/views/frame/browser_view.cc
+++ b/chrome/browser/views/frame/browser_view.cc
@@ -4,7 +4,7 @@
 
 #include "chrome/browser/views/frame/browser_view.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gtk/gtk.h>
 #endif
 
@@ -80,7 +80,7 @@
 #include "app/win_util.h"
 #include "chrome/browser/jumplist.h"
 #include "chrome/browser/views/theme_install_bubble_view.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "chrome/browser/views/accelerator_table_gtk.h"
 #include "views/window/hit_test.h"
 #endif
@@ -1144,7 +1144,7 @@ void BrowserView::ShowProfileErrorDialog(int message_id) {
   std::wstring message = l10n_util::GetString(message_id);
   win_util::MessageBox(GetNativeHandle(), message, title,
                        MB_OK | MB_ICONWARNING | MB_TOPMOST);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   std::string title = l10n_util::GetStringUTF8(IDS_PRODUCT_NAME);
   std::string message = l10n_util::GetStringUTF8(message_id);
   GtkWidget* dialog = gtk_message_dialog_new(GetNativeHandle(),
diff --git a/chrome/browser/views/frame/opaque_browser_frame_view.cc b/chrome/browser/views/frame/opaque_browser_frame_view.cc
index a31e3d3..f22e83f 100644
--- a/chrome/browser/views/frame/opaque_browser_frame_view.cc
+++ b/chrome/browser/views/frame/opaque_browser_frame_view.cc
@@ -29,7 +29,7 @@
 #include "app/win_util.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include "views/window/hit_test.h"
 #endif
 
diff --git a/chrome/browser/views/fullscreen_exit_bubble.cc b/chrome/browser/views/fullscreen_exit_bubble.cc
index 3d4f06d..4d19226 100644
--- a/chrome/browser/views/fullscreen_exit_bubble.cc
+++ b/chrome/browser/views/fullscreen_exit_bubble.cc
@@ -17,7 +17,7 @@
 #if defined(OS_WIN)
 #include "app/l10n_util_win.h"
 #include "views/widget/widget_win.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "views/widget/widget_gtk.h"
 #endif
 
@@ -114,7 +114,7 @@ class FullscreenExitBubble::FullscreenExitPopup : public views::WidgetWin {
     return MA_NOACTIVATE;
   }
 };
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 // TODO: figure out the equivalent of MA_NOACTIVATE for gtk.
 #endif
 
@@ -149,7 +149,7 @@ FullscreenExitBubble::FullscreenExitBubble(
   popup_->set_window_style(WS_POPUP);
   popup_->set_window_ex_style(WS_EX_LAYERED | WS_EX_TOOLWINDOW |
                               l10n_util::GetExtendedTooltipStyles());
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   popup_ = new views::WidgetGtk(views::WidgetGtk::TYPE_POPUP);
   popup_->MakeTransparent();
 #endif
@@ -197,7 +197,7 @@ void FullscreenExitBubble::AnimationProgressed(
 #if defined(OS_WIN)
     popup_->MoveWindow(popup_rect.x(), popup_rect.y(), popup_rect.width(),
                        popup_rect.height());
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     popup_->SetBounds(popup_rect);
 #endif
     popup_->Show();
diff --git a/chrome/browser/views/fullscreen_exit_bubble.h b/chrome/browser/views/fullscreen_exit_bubble.h
index 3767518..8a27d32 100644
--- a/chrome/browser/views/fullscreen_exit_bubble.h
+++ b/chrome/browser/views/fullscreen_exit_bubble.h
@@ -10,7 +10,7 @@
 #include "chrome/browser/command_updater.h"
 #include "views/controls/link.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 namespace views {
 class WidgetGtk;
 }
@@ -72,7 +72,7 @@ class FullscreenExitBubble : public views::LinkController,
   // The popup itself, which is a slightly modified WidgetWin.  We need to use
   // a WidgetWin (and thus an HWND) to make the popup float over other HWNDs.
   FullscreenExitPopup* popup_;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   views::WidgetGtk* popup_;
 #endif
 
diff --git a/chrome/browser/views/info_bubble.cc b/chrome/browser/views/info_bubble.cc
index edbc3b1..8f69fcd 100644
--- a/chrome/browser/views/info_bubble.cc
+++ b/chrome/browser/views/info_bubble.cc
@@ -15,7 +15,7 @@
 #include "views/widget/root_view.h"
 #include "views/window/window.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include "chrome/browser/views/tabs/tab_overview_types.h"
 #endif
 
@@ -215,7 +215,7 @@ void InfoBubble::Close() {
 
 InfoBubble::InfoBubble()
     :
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
       WidgetGtk(TYPE_WINDOW),
 #endif
       delegate_(NULL),
@@ -236,7 +236,7 @@ void InfoBubble::Init(views::Window* parent,
   set_window_style(WS_POPUP | WS_CLIPCHILDREN);
   set_window_ex_style(WS_EX_TOOLWINDOW);
   WidgetWin::Init(parent->GetNativeWindow(), gfx::Rect());
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   MakeTransparent();
   make_transient_to_parent();
   WidgetGtk::Init(GTK_WIDGET(parent->GetNativeWindow()), gfx::Rect());
@@ -303,7 +303,7 @@ void InfoBubble::Init(views::Window* parent,
 #if defined(OS_WIN)
   border_->ShowWindow(SW_SHOW);
   ShowWindow(SW_SHOW);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   views::WidgetGtk::Show();
 #endif
 }
@@ -318,7 +318,7 @@ void InfoBubble::OnActivate(UINT action, BOOL minimized, HWND window) {
     GetRootView()->GetChildViewAt(0)->RequestFocus();
   }
 }
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 void InfoBubble::IsActiveChanged() {
   if (!IsActive())
     Close();
@@ -335,7 +335,7 @@ void InfoBubble::Close(bool closed_by_escape) {
 #if defined(OS_WIN)
   border_->Close();
   WidgetWin::Close();
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   WidgetGtk::Close();
 #endif
 }
diff --git a/chrome/browser/views/info_bubble.h b/chrome/browser/views/info_bubble.h
index 992fafd..716387c 100644
--- a/chrome/browser/views/info_bubble.h
+++ b/chrome/browser/views/info_bubble.h
@@ -9,7 +9,7 @@
 
 #if defined(OS_WIN)
 #include "views/widget/widget_win.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "views/widget/widget_gtk.h"
 #endif
 
@@ -88,7 +88,7 @@ class InfoBubbleDelegate {
 class InfoBubble
 #if defined(OS_WIN)
     : public views::WidgetWin,
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     : public views::WidgetGtk,
 #endif
       public views::AcceleratorTarget {
@@ -128,7 +128,7 @@ class InfoBubble
 #if defined(OS_WIN)
   // Overridden from WidgetWin:
   virtual void OnActivate(UINT action, BOOL minimized, HWND window);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   // Overridden from WidgetGtk:
   virtual void IsActiveChanged();
 #endif
diff --git a/chrome/browser/views/location_bar_view.cc b/chrome/browser/views/location_bar_view.cc
index 004656d..a96a4e7 100644
--- a/chrome/browser/views/location_bar_view.cc
+++ b/chrome/browser/views/location_bar_view.cc
@@ -4,7 +4,7 @@
 
 #include "chrome/browser/views/location_bar_view.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gtk/gtk.h>
 #endif
 
diff --git a/chrome/browser/views/tabs/dragged_tab_view.cc b/chrome/browser/views/tabs/dragged_tab_view.cc
index d3a9263..93e6fb3 100644
--- a/chrome/browser/views/tabs/dragged_tab_view.cc
+++ b/chrome/browser/views/tabs/dragged_tab_view.cc
@@ -13,7 +13,7 @@
 #include "views/widget/widget.h"
 #if defined(OS_WIN)
 #include "views/widget/widget_win.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "views/widget/widget_gtk.h"
 #endif
 
diff --git a/chrome/browser/views/tabs/dragged_tab_view.h b/chrome/browser/views/tabs/dragged_tab_view.h
index 1c212b6..4a2b462 100644
--- a/chrome/browser/views/tabs/dragged_tab_view.h
+++ b/chrome/browser/views/tabs/dragged_tab_view.h
@@ -16,7 +16,7 @@
 namespace views {
 #if defined(OS_WIN)
 class WidgetWin;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 class WidgetGtk;
 #endif
 }
@@ -105,7 +105,7 @@ class DraggedTabView : public views::View,
   // The window that contains the DraggedTabView.
 #if defined(OS_WIN)
   scoped_ptr<views::WidgetWin> container_;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   scoped_ptr<views::WidgetGtk> container_;
 #endif
 
diff --git a/chrome/browser/views/tabs/tab_strip.cc b/chrome/browser/views/tabs/tab_strip.cc
index 30a7cac..4f43d19 100644
--- a/chrome/browser/views/tabs/tab_strip.cc
+++ b/chrome/browser/views/tabs/tab_strip.cc
@@ -33,7 +33,7 @@
 #if defined(OS_WIN)
 #include "app/win_util.h"
 #include "views/widget/widget_win.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "views/widget/widget_gtk.h"
 #endif
 
@@ -1571,7 +1571,7 @@ bool TabStrip::IsCursorInTabStripZone() const {
 #if defined(OS_WIN)
   DWORD pos = GetMessagePos();
   gfx::Point cursor_point(pos);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   // TODO: make sure this is right with multiple monitors.
   GdkScreen* screen = gdk_screen_get_default();
   GdkDisplay* display = gdk_screen_get_display(screen);
diff --git a/chrome/browser/views/tabs/tab_strip.h b/chrome/browser/views/tabs/tab_strip.h
index 8ef00c0..a561766 100644
--- a/chrome/browser/views/tabs/tab_strip.h
+++ b/chrome/browser/views/tabs/tab_strip.h
@@ -19,7 +19,7 @@ class TabStripModel;
 
 namespace views {
 class ImageView;
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 class WidgetGtk;
 #elif defined(OS_WIN)
 class WidgetWin;
diff --git a/chrome/browser/web_applications/web_app.cc b/chrome/browser/web_applications/web_app.cc
index 4184501..6e06233 100644
--- a/chrome/browser/web_applications/web_app.cc
+++ b/chrome/browser/web_applications/web_app.cc
@@ -243,7 +243,7 @@ void CreateShortcutTask::Run() {
 }
 
 bool CreateShortcutTask::CreateShortcut() {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   ShellIntegration::CreateDesktopShortcut(shortcut_info_);
   return true;  // assuming always success.
 #elif defined(OS_WIN)
diff --git a/chrome/browser/zygote_host_linux.cc b/chrome/browser/zygote_host_linux.cc
index 33f0dff..d44243e 100644
--- a/chrome/browser/zygote_host_linux.cc
+++ b/chrome/browser/zygote_host_linux.cc
@@ -70,7 +70,12 @@ void ZygoteHost::Init(const std::string& sandbox_cmd) {
                                  switches::kZygoteProcess);
 
   int fds[2];
+#if defined(OS_FREEBSD)
+  if (socketpair(PF_UNIX, SOCK_SEQPACKET, 0, fds) != 0)
+    CHECK(socketpair(PF_UNIX, SOCK_DGRAM, 0, fds) == 0);
+#else
   CHECK(socketpair(PF_UNIX, SOCK_SEQPACKET, 0, fds) == 0);
+#endif
   base::file_handle_mapping_vector fds_to_map;
   fds_to_map.push_back(std::make_pair(fds[1], 3));
 
@@ -208,6 +213,7 @@ pid_t ZygoteHost::ForkRenderer(
     return base::kNullProcessHandle;
 
   const int kRendererScore = 5;
+#if defined(OS_LINUX)
   if (using_suid_sandbox_) {
     base::ProcessHandle sandbox_helper_process;
     base::file_handle_mapping_vector dummy_map;
@@ -225,6 +231,7 @@ pid_t ZygoteHost::ForkRenderer(
   } else {
     base::AdjustOOMScore(pid, kRendererScore);
   }
+#endif
 
   return pid;
 }
diff --git a/chrome/browser/zygote_main_linux.cc b/chrome/browser/zygote_main_linux.cc
index 3b9c6ef..b42b3c2 100644
--- a/chrome/browser/zygote_main_linux.cc
+++ b/chrome/browser/zygote_main_linux.cc
@@ -2,11 +2,17 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
+#include "build/build_config.h"
+
 #include <dlfcn.h>
 #include <fcntl.h>
+#if defined(OS_FREEBSD)
+#include <signal.h>
+#else
 #include <sys/epoll.h>
 #include <sys/prctl.h>
 #include <sys/signal.h>
+#endif
 #include <sys/socket.h>
 #include <sys/stat.h>
 #include <sys/types.h>
@@ -201,7 +207,11 @@ class Zygote {
     int argc, numfds;
     base::GlobalDescriptors::Mapping mapping;
     base::ProcessId child;
+#if defined(OS_FREEBSD)
+    uint32_t dummy_inode = 0;
+#elif
     uint64_t dummy_inode = 0;
+#endif
     int dummy_fd = -1;
 
     if (!pickle.ReadInt(&iter, &argc))
@@ -244,10 +254,13 @@ class Zygote {
 #if defined(ARCH_CPU_X86_FAMILY)
       // Try to open /proc/self/maps as the seccomp sandbox needs access to it
       if (g_proc_fd >= 0) {
+#if defined(OS_LINUX)
+//BSD Removing all Seccomp Sandbox code if not on linux
         int proc_self_maps = openat(g_proc_fd, "self/maps", O_RDONLY);
         if (proc_self_maps >= 0) {
           SeccompSandboxSetProcSelfMaps(proc_self_maps);
         }
+#endif
         close(g_proc_fd);
         g_proc_fd = -1;
       }
@@ -536,6 +549,8 @@ static bool EnterSandbox() {
 
     SkiaFontConfigUseIPCImplementation(kMagicSandboxIPCDescriptor);
 
+    // TODO(benl): Do something for FreeBSD...
+#if !defined(OS_FREEBSD)
     // Previously, we required that the binary be non-readable. This causes the
     // kernel to mark the process as non-dumpable at startup. The thinking was
     // that, although we were putting the renderers into a PID namespace (with
@@ -561,6 +576,7 @@ static bool EnterSandbox() {
         return false;
       }
     }
+#endif
   } else {
     SkiaFontConfigUseDirectImplementation();
   }
@@ -602,7 +618,8 @@ bool ZygoteMain(const MainFunctionParams& params) {
   g_am_zygote_or_renderer = true;
 #endif
 
-#if defined(ARCH_CPU_X86_FAMILY)
+//BSD Removing all Seccomp Sandbox code if not on linux
+#if defined(ARCH_CPU_X86_FAMILY) && defined(OS_LINUX)
   // The seccomp sandbox needs access to files in /proc, which might be denied
   // after one of the other sandboxes have been started. So, obtain a suitable
   // file handle in advance.
@@ -623,7 +640,7 @@ bool ZygoteMain(const MainFunctionParams& params) {
     return false;
   }
 
-#if defined(ARCH_CPU_X86_FAMILY)
+#if defined(ARCH_CPU_X86_FAMILY) && defined(OS_LINUX)
   // The seccomp sandbox will be turned on when the renderers start. But we can
   // already check if sufficient support is available so that we only need to
   // print one error message for the entire browser session.
diff --git a/chrome/chrome.gyp b/chrome/chrome.gyp
index 63709d8..5a6c636 100755
--- a/chrome/chrome.gyp
+++ b/chrome/chrome.gyp
@@ -348,7 +348,7 @@
         '../base/base.gyp:base',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS == "freebsd"', {
           'dependencies': ['../build/linux/system.gyp:gtk'],
         }],
       ],
@@ -632,7 +632,7 @@
         '../app/app.gyp:app_base',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
           ],
@@ -668,7 +668,7 @@
             'common/temp_scaffolding_stubs.h',
           ],
         }],
-        ['OS=="win" or OS=="linux"', {
+        ['OS=="win" or OS=="linux" or OS=="freebsd"', {
           'sources!': [
             'common/temp_scaffolding_stubs.cc',
           ],
@@ -851,7 +851,7 @@
         '..',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
           ],
@@ -1513,7 +1513,7 @@
         'sync_proto',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS == "freebsd"', {
           'sources!': [
             'browser/sync/notifier/base/network_status_detector_task_mt.cc',
           ],
@@ -1659,6 +1659,12 @@
             '../build/linux/system.gyp:gtk'
           ],
         }],
+        [ 'OS == "freebsd"', {
+          'dependencies': [
+            '../build/linux/system.gyp:gtk'
+          ],
+          'sources/': [['exclude', '^browser/sync/util/path_helpers_linux.cc$']],
+        }],
         ['OS=="mac"', {
           'link_settings': {
             'libraries': [
diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi
index 1214947..ff1913f 100755
--- a/chrome/chrome_browser.gypi
+++ b/chrome/chrome_browser.gypi
@@ -1861,7 +1861,7 @@
             ['exclude', '^browser/chromeos'],
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             # Temporarily disabled while we figure some stuff out.
             # http://code.google.com/p/chromium/issues/detail?id=12351
@@ -1912,19 +1912,13 @@
             }],
           ],
         }],
-        ['OS=="linux" and toolkit_views==0', {
+        ['(OS=="linux" or OS=="freebsd") and toolkit_views==0', {
           'sources!': [
             'browser/bookmarks/bookmark_drop_info.cc',
             'browser/views/autocomplete/autocomplete_popup_gtk.cc',
             'browser/views/autocomplete/autocomplete_popup_gtk.h'
           ],
         }],
-        ['OS=="freebsd"', {
-          'dependencies': [
-            '../build/linux/system.gyp:gtk',
-            '../build/linux/system.gyp:nss',
-          ],
-        }],
         ['OS=="mac"', {
           'sources!': [
             'browser/automation/automation_provider_list_generic.cc',
@@ -2328,7 +2322,7 @@
                 ['exclude', '^browser/browser_list_gtk.cc'],
               ],
             }],
-            ['OS=="linux" and toolkit_views==0', {
+            ['(OS=="linux" or OS=="freebsd") and toolkit_views==0', {
               'sources/': [
                 ['include', '^browser/printing/print_dialog_gtk.cc'],
                 ['include', '^browser/printing/print_dialog_gtk.h'],
diff --git a/chrome/chrome_renderer.gypi b/chrome/chrome_renderer.gypi
index a0c8e09..eea4195 100755
--- a/chrome/chrome_renderer.gypi
+++ b/chrome/chrome_renderer.gypi
@@ -157,16 +157,20 @@
             'renderer/command_buffer_proxy.h',
           ],
         }],
-        ['disable_nacl!=1', {
+        ['disable_nacl!=1 and OS!="freebsd"', {
           'dependencies': [
             'nacl',
           ],
         }],
         # Linux-specific rules.
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
-            '../sandbox/sandbox.gyp:sandbox',
+          ],
+          'conditions': [
+            ['OS=="linux"', {
+              'dependencies': [ '../sandbox/sandbox.gyp:sandbox',],
+           }],
           ],
         }],
         # Windows-specific rules.
diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi
index aad10e6..4ef70ec 100755
--- a/chrome/chrome_tests.gypi
+++ b/chrome/chrome_tests.gypi
@@ -116,7 +116,7 @@
         'test/ui_test_utils_win.cc',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
           ],
@@ -161,7 +161,7 @@
         'test/ui/ui_test_suite.h',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
           ],
@@ -191,7 +191,7 @@
         'test/unit/run_all_unittests.cc',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             # Needed for the following #include chain:
             #   test/unit/run_all_unittests.cc
@@ -226,7 +226,7 @@
         'test/automated_ui_tests/automated_ui_tests.h',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
           ],
@@ -322,7 +322,7 @@
             '../webkit/tools/test_shell/test_shell.gyp:npapi_test_plugin',
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
@@ -864,7 +864,7 @@
             '../sandbox/sandbox.gyp:*',
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'conditions': [
             [ 'gcc_version==44', {
               # Avoid gcc 4.4 strict aliasing issues in stl_tree.h when
@@ -1142,7 +1142,7 @@
             },
           }
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
@@ -1158,7 +1158,7 @@
             '<@(browser_tests_sources_views_specific)',
           ],
         }],
-        ['OS=="linux" and toolkit_views==0', {
+        ['(OS=="linux" or OS=="freebsd") and toolkit_views==0', {
           'sources': [
             'browser/extensions/browser_action_test_util_gtk.cc',
             'browser/gtk/view_id_util_browsertest.cc',
@@ -1214,7 +1214,7 @@
         'test/startup/startup_test.cc',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
@@ -1274,7 +1274,7 @@
             '<(allocator_target)',
           ],
         },],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
           ],
@@ -1300,7 +1300,7 @@
         'test/page_cycler/page_cycler_test.cc',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
@@ -1338,7 +1338,7 @@
         'test/tab_switching/tab_switching_test.cc',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
@@ -1372,7 +1372,7 @@
         'test/memory_test/memory_test.cc',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
@@ -1496,7 +1496,7 @@
             'browser/sync/util/data_encryption_unittest.cc',
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk'
           ],
@@ -1535,7 +1535,7 @@
             'test/perf/url_parse_perftest.cc',
           ],
           'conditions': [
-            ['OS=="linux"', {
+            ['OS=="linux" or OS=="freebsd"', {
               'dependencies': [
                 '../build/linux/system.gyp:gtk',
                 '../tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
@@ -1638,7 +1638,7 @@
             ],
             'conditions': [
               # Plugin code.
-              ['OS=="linux" or OS=="win"', {
+              ['OS=="linux" or OS=="freebsd" or OS=="win"', {
                 'dependencies': [
                   'plugin',
                  ],
@@ -1647,7 +1647,7 @@
                 ],
               }],
               # Linux-specific rules.
-              ['OS=="linux"', {
+              ['OS=="linux" or OS=="freebsd"', {
                  'dependencies': [
                    '../build/linux/system.gyp:gtk',
                  ],
diff --git a/chrome/common/child_process_host.cc b/chrome/common/child_process_host.cc
index d7f6ce1..2bb0ba9 100644
--- a/chrome/common/child_process_host.cc
+++ b/chrome/common/child_process_host.cc
@@ -25,9 +25,9 @@
 #include "chrome/common/result_codes.h"
 #include "chrome/installer/util/google_update_settings.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include "base/linux_util.h"
-#endif  // OS_LINUX
+#endif  // OS_NIX
 
 #if defined(OS_POSIX)
 // This is defined in chrome/browser/google_update_settings_posix.cc.  It's the
diff --git a/chrome/common/chrome_constants.cc b/chrome/common/chrome_constants.cc
index 1b85a19..737cb46 100644
--- a/chrome/common/chrome_constants.cc
+++ b/chrome/common/chrome_constants.cc
@@ -27,7 +27,7 @@ namespace chrome {
 #if defined(OS_WIN)
 const wchar_t kBrowserProcessExecutableName[] = L"chrome.exe";
 const wchar_t kHelperProcessExecutableName[] = L"chrome.exe";
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 const wchar_t kBrowserProcessExecutableName[] = L"chrome";
 // Helper processes end up with a name of "exe" due to execing via
 // /proc/self/exe.  See bug 22703.
@@ -39,7 +39,7 @@ const wchar_t kHelperProcessExecutableName[] = PRODUCT_STRING_W L" Helper";
 #if defined(OS_WIN)
 const wchar_t kBrowserProcessExecutablePath[] = L"chrome.exe";
 const FilePath::CharType kHelperProcessExecutablePath[] = FPL("chrome.exe");
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 const wchar_t kBrowserProcessExecutablePath[] = L"chrome";
 const FilePath::CharType kHelperProcessExecutablePath[] = FPL("chrome");
 #elif defined(OS_MACOSX)
diff --git a/chrome/common/chrome_paths.cc b/chrome/common/chrome_paths.cc
index 9b02bb7..c85e021 100644
--- a/chrome/common/chrome_paths.cc
+++ b/chrome/common/chrome_paths.cc
@@ -115,7 +115,7 @@ bool PathProvider(int key, FilePath* result) {
       cur = cur.Append(FILE_PATH_LITERAL("inspector"));
       break;
     case chrome::DIR_APP_DICTIONARIES:
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_POSIX)
       // We can't write into the EXE dir on Linux, so keep dictionaries
       // alongside the safe browsing database in the user data dir.
       // And we don't want to write into the bundle on the Mac, so push
diff --git a/chrome/common/chrome_switches.cc b/chrome/common/chrome_switches.cc
index ea5208d..a39e986 100644
--- a/chrome/common/chrome_switches.cc
+++ b/chrome/common/chrome_switches.cc
@@ -693,7 +693,7 @@ const char kProfile[]                       = "profile";
 const char kChromeosFrame[]                 = "chromeos-frame";
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 // A temporary switch before we implement the client certificate selection UI.
 // When an SSL server requests client authentication, select a client
 // certificate automatically.
diff --git a/chrome/common/chrome_switches.h b/chrome/common/chrome_switches.h
index bb9ffc9..acc7e22 100644
--- a/chrome/common/chrome_switches.h
+++ b/chrome/common/chrome_switches.h
@@ -202,7 +202,7 @@ extern const char kProfile[];
 extern const char kChromeosFrame[];
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 extern const char kAutoSSLClientAuth[];
 #endif
 
diff --git a/chrome/common/native_web_keyboard_event.h b/chrome/common/native_web_keyboard_event.h
index 4edf0e2..6c38b41 100644
--- a/chrome/common/native_web_keyboard_event.h
+++ b/chrome/common/native_web_keyboard_event.h
@@ -16,7 +16,7 @@
 #else
 class NSEvent;
 #endif  // __OBJC__
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include <gdk/gdk.h>
 #endif
 
@@ -32,7 +32,7 @@ struct NativeWebKeyboardEvent : public WebKit::WebKeyboardEvent {
   NativeWebKeyboardEvent(wchar_t character,
                          int state,
                          double time_stamp_seconds);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   explicit NativeWebKeyboardEvent(const GdkEventKey* event);
   NativeWebKeyboardEvent(wchar_t character,
                          int state,
@@ -54,7 +54,7 @@ struct NativeWebKeyboardEvent : public WebKit::WebKeyboardEvent {
   // active and is necessary to prevent backspace from doing "history back" if
   // it is hit in ime mode.
   bool skip_in_browser;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   GdkEventKey* os_event;
 #endif
 };
diff --git a/chrome/common/plugin_messages_internal.h b/chrome/common/plugin_messages_internal.h
index c220b8b..91b536c 100644
--- a/chrome/common/plugin_messages_internal.h
+++ b/chrome/common/plugin_messages_internal.h
@@ -122,7 +122,7 @@ IPC_BEGIN_MESSAGES(PluginProcessHost)
                       HWND /* caller window */)
 #endif
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // On Linux, the mapping between NativeViewId and X window ids
   // is known only to the browser.  This message lets the plugin process
   // ask about a NativeViewId that was provided by the renderer.
diff --git a/chrome/common/pref_names.cc b/chrome/common/pref_names.cc
index 6c1edf9..3d47597 100644
--- a/chrome/common/pref_names.cc
+++ b/chrome/common/pref_names.cc
@@ -161,9 +161,9 @@ const wchar_t kDnsStartupPrefetchList[] = L"StartupDNSPrefetchList";
 // This list is adaptively grown and pruned.
 extern const wchar_t kDnsHostReferralList[] = L"HostReferralList";
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 // Prefs for SSLConfigServicePref.  Currently, these are only present on
-// and used by Linux.
+// and used by Linux and FreeBSD.
 extern const wchar_t kCertRevocationCheckingEnabled[] =
     L"ssl.rev_checking.enabled";
 extern const wchar_t kSSL2Enabled[] = L"ssl.ssl2.enabled";
@@ -246,7 +246,7 @@ const wchar_t kPrintingPageHeaderRight[] = L"printing.page.header.right";
 const wchar_t kPrintingPageFooterLeft[] = L"printing.page.footer.left";
 const wchar_t kPrintingPageFooterCenter[] = L"printing.page.footer.center";
 const wchar_t kPrintingPageFooterRight[] = L"printing.page.footer.right";
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 // GTK specific preference on whether we should match the system GTK theme.
 const wchar_t kUsesSystemTheme[] = L"extensions.theme.use_system";
 #endif
diff --git a/chrome/common/pref_names.h b/chrome/common/pref_names.h
index 8229a6f..dd00ecb 100644
--- a/chrome/common/pref_names.h
+++ b/chrome/common/pref_names.h
@@ -59,7 +59,7 @@ extern const wchar_t kAlternateErrorPagesEnabled[];
 extern const wchar_t kDnsPrefetchingEnabled[];
 extern const wchar_t kDnsStartupPrefetchList[];
 extern const wchar_t kDnsHostReferralList[];
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 extern const wchar_t kCertRevocationCheckingEnabled[];
 extern const wchar_t kSSL2Enabled[];
 extern const wchar_t kSSL3Enabled[];
@@ -98,7 +98,7 @@ extern const wchar_t kPrintingPageHeaderRight[];
 extern const wchar_t kPrintingPageFooterLeft[];
 extern const wchar_t kPrintingPageFooterCenter[];
 extern const wchar_t kPrintingPageFooterRight[];
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 extern const wchar_t kUsesSystemTheme[];
 #endif
 extern const wchar_t kCurrentThemePackFilename[];
diff --git a/chrome/common/process_watcher.h b/chrome/common/process_watcher.h
index 54b344b..5b57659 100644
--- a/chrome/common/process_watcher.h
+++ b/chrome/common/process_watcher.h
@@ -28,7 +28,7 @@ class ProcessWatcher {
   //
   static void EnsureProcessTerminated(base::ProcessHandle process_handle);
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // The nicer version of EnsureProcessTerminated() that is patient and will
   // wait for |process_handle| to finish and then reap it.
   static void EnsureProcessGetsReaped(base::ProcessHandle process_handle);
diff --git a/chrome/common/render_messages.h b/chrome/common/render_messages.h
index 9e2e6fc..80df6b9 100644
--- a/chrome/common/render_messages.h
+++ b/chrome/common/render_messages.h
@@ -2150,7 +2150,7 @@ struct ParamTraits<Clipboard::Buffer> {
       case Clipboard::BUFFER_STANDARD:
         type = L"BUFFER_STANDARD";
         break;
-#if defined(OS_LINUX)
+#if defined(USE_X11)
       case Clipboard::BUFFER_SELECTION:
         type = L"BUFFER_SELECTION";
         break;
diff --git a/chrome/common/render_messages_internal.h b/chrome/common/render_messages_internal.h
index 3f9a1f1..2b999ad 100644
--- a/chrome/common/render_messages_internal.h
+++ b/chrome/common/render_messages_internal.h
@@ -1218,7 +1218,7 @@ IPC_BEGIN_MESSAGES(ViewHost)
                               base::ProcessHandle /* NaCl process handle */,
                               base::ProcessId /* NaCl process id */)
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   // A renderer sends this when it needs a browser-side widget for
   // hosting a windowed plugin. id is the XID of the plugin window, for which
   // the container is created.
@@ -1567,7 +1567,7 @@ IPC_BEGIN_MESSAGES(ViewHost)
                              base::SharedMemoryHandle /* browser handle */)
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Asks the browser create a temporary file for the renderer to fill
   // in resulting NativeMetafile in printing.
   IPC_SYNC_MESSAGE_CONTROL0_2(ViewHostMsg_AllocateTempFileForPrinting,
diff --git a/chrome/common/transport_dib_linux.cc b/chrome/common/transport_dib_linux.cc
index d3ffe69..b17af82 100644
--- a/chrome/common/transport_dib_linux.cc
+++ b/chrome/common/transport_dib_linux.cc
@@ -27,6 +27,9 @@ TransportDIB::TransportDIB()
 TransportDIB::~TransportDIB() {
   if (address_ != kInvalidAddress) {
     shmdt(address_);
+#if defined(OS_FREEBSD)
+    shmctl(key_, IPC_RMID, 0);
+#endif
     address_ = kInvalidAddress;
   }
 
@@ -52,7 +55,13 @@ TransportDIB* TransportDIB::Create(size_t size, uint32 sequence_num) {
   // Here we mark the shared memory for deletion. Since we attached it in the
   // line above, it doesn't actually get deleted but, if we crash, this means
   // that the kernel will automatically clean it up for us.
+#if !defined(OS_FREEBSD)
+//BSD A shmctl IPC_RMID call here renders all future shared memory calls for
+//BSD a particular key to fail on FreeBSD, so I moved this call to the
+//BSD destructor.  Of course, this means chromium crashes on FreeBSD don't
+//BSD clean up shared memory.
   shmctl(shmkey, IPC_RMID, 0);
+#endif
   if (address == kInvalidAddress)
     return NULL;
 
diff --git a/chrome/plugin/plugin_main.cc b/chrome/plugin/plugin_main.cc
index 5863621..f2bb72e 100644
--- a/chrome/plugin/plugin_main.cc
+++ b/chrome/plugin/plugin_main.cc
@@ -22,7 +22,7 @@
 #if defined(OS_WIN)
 #include "chrome/test/injection_test_dll.h"
 #include "sandbox/src/sandbox.h"
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 #include "base/global_descriptors_posix.h"
 #include "ipc/ipc_descriptors.h"
 #endif
diff --git a/chrome/plugin/plugin_thread.cc b/chrome/plugin/plugin_thread.cc
index fb02ac5..25b07f7 100644
--- a/chrome/plugin/plugin_thread.cc
+++ b/chrome/plugin/plugin_thread.cc
@@ -6,7 +6,7 @@
 
 #include "build/build_config.h"
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gtk/gtk.h>
 #endif
 
@@ -37,7 +37,7 @@ PluginThread::PluginThread()
           switches::kPluginPath);
 
   lazy_tls.Pointer()->Set(this);
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   {
     // XEmbed plugins assume they are hosted in a Gtk application, so we need
     // to initialize Gtk in the plugin process.
@@ -197,7 +197,7 @@ bool GetPluginFinderURL(std::string* plugin_finder_url) {
 bool IsDefaultPluginEnabled() {
 #if defined(OS_WIN)
   return true;
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   // http://code.google.com/p/chromium/issues/detail?id=10952
   return false;
 #elif defined(OS_MACOSX)
diff --git a/chrome/plugin/webplugin_proxy.cc b/chrome/plugin/webplugin_proxy.cc
index 8142185..a07b0d7 100644
--- a/chrome/plugin/webplugin_proxy.cc
+++ b/chrome/plugin/webplugin_proxy.cc
@@ -76,7 +76,7 @@ void WebPluginProxy::WillDestroyWindow(gfx::PluginWindowHandle window) {
   PluginThread::current()->Send(
       new PluginProcessHostMsg_PluginWindowDestroyed(
           window, ::GetParent(window)));
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   // Nothing to do.
 #else
   NOTIMPLEMENTED();
@@ -365,7 +365,7 @@ bool WebPluginProxy::SetDropEffect(struct NPObject* event, int effect) {
 }
 
 void WebPluginProxy::Paint(const gfx::Rect& rect) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   if (!windowless_canvas_.get())
     return;
 #elif defined(OS_MACOSX)
@@ -377,7 +377,7 @@ void WebPluginProxy::Paint(const gfx::Rect& rect) {
   // end up with the old values.
   gfx::Rect offset_rect = rect;
   offset_rect.Offset(delegate_->GetRect().origin());
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   windowless_canvas_->save();
 
   // The given clip rect is relative to the plugin coordinate system.
@@ -542,7 +542,7 @@ void WebPluginProxy::SetWindowlessBuffer(
       windowless_context_);
 }
 
-#elif defined(OS_LINUX)
+#elif defined (OS_NIX)
 
 void WebPluginProxy::SetWindowlessBuffer(
     const TransportDIB::Handle& windowless_buffer,
diff --git a/chrome/plugin/webplugin_proxy.h b/chrome/plugin/webplugin_proxy.h
index 2e86bbd..11e9f8d 100644
--- a/chrome/plugin/webplugin_proxy.h
+++ b/chrome/plugin/webplugin_proxy.h
@@ -172,7 +172,7 @@ class WebPluginProxy : public webkit_glue::WebPlugin {
   scoped_ptr<skia::PlatformCanvas> windowless_canvas_;
   scoped_ptr<skia::PlatformCanvas> background_canvas_;
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   scoped_ptr<TransportDIB> windowless_dib_;
   scoped_ptr<TransportDIB> background_dib_;
 #endif
diff --git a/chrome/renderer/print_web_view_helper.h b/chrome/renderer/print_web_view_helper.h
index 44ae591..97f9905 100644
--- a/chrome/renderer/print_web_view_helper.h
+++ b/chrome/renderer/print_web_view_helper.h
@@ -20,7 +20,7 @@ namespace IPC {
 class Message;
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 namespace printing {
 class PdfPsMetafile;
 typedef PdfPsMetafile NativeMetafile;
@@ -93,7 +93,7 @@ class PrintWebViewHelper : public WebKit::WebViewClient {
                     WebKit::WebFrame* web_frame);
 
   // Prints the page listed in |params|.
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   void PrintPage(const ViewMsg_PrintPage_Params& params,
                  const gfx::Size& canvas_size,
                  WebKit::WebFrame* frame,
diff --git a/chrome/renderer/render_process.cc b/chrome/renderer/render_process.cc
index ac372ed..1c46471 100644
--- a/chrome/renderer/render_process.cc
+++ b/chrome/renderer/render_process.cc
@@ -121,7 +121,7 @@ RenderProcess::~RenderProcess() {
 
 bool RenderProcess::InProcessPlugins() {
   const CommandLine& command_line = *CommandLine::ForCurrentProcess();
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Plugin processes require a UI message loop, and the Linux message loop
   // implementation only allows one UI loop per process.
   if (command_line.HasSwitch(switches::kInProcessPlugins))
@@ -159,10 +159,10 @@ bool RenderProcess::LaunchNaClProcess(const char* url,
 // Platform specific code for dealing with bitmap transport...
 
 TransportDIB* RenderProcess::CreateTransportDIB(size_t size) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   // Windows and Linux create transport DIBs inside the renderer
   return TransportDIB::Create(size, sequence_number_++);
-#elif defined(OS_MACOSX)  // defined(OS_WIN) || defined(OS_LINUX)
+#elif defined(OS_MACOSX)  // defined(OS_WIN) || defined(OS_NIX)
   // Mac creates transport DIBs in the browser, so we need to do a sync IPC to
   // get one.
   TransportDIB::Handle handle;
@@ -197,7 +197,7 @@ skia::PlatformCanvas* RenderProcess::GetDrawingCanvas(
   int width = rect.width();
   int height = rect.height();
   const size_t stride = skia::PlatformCanvas::StrideForWidth(rect.width());
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   const size_t max_size = base::SysInfo::MaxSharedMemorySize();
 #else
   const size_t max_size = 0;
diff --git a/chrome/renderer/render_view.cc b/chrome/renderer/render_view.cc
index baac373..2d12ca3 100644
--- a/chrome/renderer/render_view.cc
+++ b/chrome/renderer/render_view.cc
@@ -1450,7 +1450,7 @@ void RenderView::setInputMethodEnabled(bool enabled) {
 }
 
 void RenderView::didChangeSelection(bool is_empty_selection) {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   if (!handling_input_event_)
       return;
   // TODO(estade): investigate incremental updates to the selection so that we
@@ -2677,14 +2677,14 @@ webkit_glue::WebPluginDelegate* RenderView::CreatePluginDelegate(
 }
 
 void RenderView::CreatedPluginWindow(gfx::PluginWindowHandle window) {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   RenderThread::current()->Send(new ViewHostMsg_CreatePluginContainer(
       routing_id(), window));
 #endif
 }
 
 void RenderView::WillDestroyPluginWindow(gfx::PluginWindowHandle window) {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   RenderThread::current()->Send(new ViewHostMsg_DestroyPluginContainer(
       routing_id(), window));
 #endif
@@ -3221,7 +3221,7 @@ void RenderView::OnEnablePreferredSizeChangedMode() {
 void RenderView::OnSetRendererPrefs(const RendererPreferences& renderer_prefs) {
   renderer_preferences_ = renderer_prefs;
   UpdateFontRenderingFromRendererPrefs();
-#if defined(OS_LINUX) && !defined(TOOLKIT_VIEWS)
+#if defined(OS_NIX) && !defined(TOOLKIT_VIEWS)
   WebColorName name = WebKit::WebColorWebkitFocusRingColor;
   WebKit::setNamedColors(&name, &renderer_prefs.focus_ring_color, 1);
 
diff --git a/chrome/renderer/render_view.h b/chrome/renderer/render_view.h
index c69a601..5289967 100644
--- a/chrome/renderer/render_view.h
+++ b/chrome/renderer/render_view.h
@@ -736,7 +736,7 @@ class RenderView : public RenderWidget,
 
   void Print(WebKit::WebFrame* frame, bool script_initiated);
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   void UpdateFontRenderingFromRendererPrefs();
 #else
   void UpdateFontRenderingFromRendererPrefs() { }
diff --git a/chrome/renderer/render_view_unittest.cc b/chrome/renderer/render_view_unittest.cc
index 51f2a3c..78a7739 100644
--- a/chrome/renderer/render_view_unittest.cc
+++ b/chrome/renderer/render_view_unittest.cc
@@ -22,7 +22,7 @@ using WebKit::WebString;
 using WebKit::WebTextDirection;
 using WebKit::WebURLError;
 
-#if !defined(OS_LINUX)
+#if !defined(OS_NIX)
 static WebCompositionCommand ToCompositionCommand(int string_type) {
   switch (string_type) {
     default:
@@ -144,7 +144,7 @@ TEST_F(RenderViewTest, OnImeStateChanged) {
 // RenderWidget class, but also call some RenderWidget members, e.g.
 // ExecuteJavaScript(), RenderWidget::OnSetFocus(), etc.
 // Disabled on Linux: http://crbug.com/27927
-#if !defined(OS_LINUX)
+#if !defined(OS_NIX)
 TEST_F(RenderViewTest, ImeComposition) {
   enum ImeCommand {
     IME_INITIALIZE,
diff --git a/chrome/renderer/renderer_main.cc b/chrome/renderer/renderer_main.cc
index d4e2c5f..3b0967f 100644
--- a/chrome/renderer/renderer_main.cc
+++ b/chrome/renderer/renderer_main.cc
@@ -252,7 +252,7 @@ int RendererMain(const MainFunctionParams& parameters) {
   }
 
   {
-#if !defined(OS_LINUX)
+#if !defined(OS_NIX)
     // TODO(markus): Check if it is OK to unconditionally move this
     // instruction down.
     RenderProcess render_process;
@@ -262,7 +262,7 @@ int RendererMain(const MainFunctionParams& parameters) {
     if (!no_sandbox) {
       run_loop = platform.EnableSandbox();
     }
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     RenderProcess render_process;
     render_process.set_main_thread(new RenderThread());
 #endif
diff --git a/chrome/renderer/renderer_main_platform_delegate_linux.cc b/chrome/renderer/renderer_main_platform_delegate_linux.cc
index bce15dd..21db49a 100644
--- a/chrome/renderer/renderer_main_platform_delegate_linux.cc
+++ b/chrome/renderer/renderer_main_platform_delegate_linux.cc
@@ -36,7 +36,7 @@ bool RendererMainPlatformDelegate::EnableSandbox() {
   //
   // The seccomp sandbox is started in the renderer.
   // http://code.google.com/p/seccompsandbox/
-#if defined(ARCH_CPU_X86_FAMILY) && !defined(CHROMIUM_SELINUX)
+#if defined(OS_LINUX) && defined(ARCH_CPU_X86_FAMILY) && !defined(CHROMIUM_SELINUX)
   // N.b. SupportsSeccompSandbox() returns a cached result, as we already
   // called it earlier in the zygote. Thus, it is OK for us to not pass in
   // a file descriptor for "/proc".
diff --git a/chrome/renderer/renderer_webkitclient_impl.cc b/chrome/renderer/renderer_webkitclient_impl.cc
index 290c011..833ea8b 100644
--- a/chrome/renderer/renderer_webkitclient_impl.cc
+++ b/chrome/renderer/renderer_webkitclient_impl.cc
@@ -33,7 +33,7 @@
 #include "webkit/glue/glue_util.h"
 #include "webkit/glue/webkit_glue.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include "chrome/renderer/renderer_sandbox_support_linux.h"
 #endif
 
@@ -63,7 +63,7 @@ WebKit::WebMimeRegistry* RendererWebKitClientImpl::mimeRegistry() {
 }
 
 WebKit::WebSandboxSupport* RendererWebKitClientImpl::sandboxSupport() {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   return &sandbox_support_;
 #else
   return NULL;
@@ -276,7 +276,7 @@ bool RendererWebKitClientImpl::SandboxSupport::ensureFontLoaded(HFONT font) {
   return RenderThread::current()->Send(new ViewHostMsg_LoadFont(logfont));
 }
 
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 
 WebString RendererWebKitClientImpl::SandboxSupport::getFontFamilyForCharacters(
     const WebKit::WebUChar* characters, size_t num_characters) {
diff --git a/chrome/renderer/renderer_webkitclient_impl.h b/chrome/renderer/renderer_webkitclient_impl.h
index eb77dce..661cf0a 100644
--- a/chrome/renderer/renderer_webkitclient_impl.h
+++ b/chrome/renderer/renderer_webkitclient_impl.h
@@ -13,7 +13,7 @@
 
 #if defined(OS_WIN)
 #include "third_party/WebKit/WebKit/chromium/public/win/WebSandboxSupport.h"
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 #include <string>
 #include <map>
 #include "base/lock.h"
@@ -87,7 +87,7 @@ class RendererWebKitClientImpl : public webkit_glue::WebKitClientImpl {
    public:
     virtual bool ensureFontLoaded(HFONT);
   };
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   class SandboxSupport : public WebKit::WebSandboxSupport {
    public:
     virtual WebKit::WebString getFontFamilyForCharacters(
@@ -106,7 +106,7 @@ class RendererWebKitClientImpl : public webkit_glue::WebKitClientImpl {
   webkit_glue::WebClipboardImpl clipboard_;
 
   MimeRegistry mime_registry_;
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   SandboxSupport sandbox_support_;
 #endif
 
diff --git a/chrome/renderer/webplugin_delegate_proxy.cc b/chrome/renderer/webplugin_delegate_proxy.cc
index 78f3dfe..3879436 100644
--- a/chrome/renderer/webplugin_delegate_proxy.cc
+++ b/chrome/renderer/webplugin_delegate_proxy.cc
@@ -6,7 +6,7 @@
 
 #include <algorithm>
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gtk/gtk.h>
 #endif
 
@@ -545,7 +545,7 @@ bool WebPluginDelegateProxy::CreateBitmap(
   int height = plugin_rect_.height();
   const size_t stride = skia::PlatformCanvas::StrideForWidth(width);
   const size_t size = stride * height;
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   memory->reset(TransportDIB::Create(size, 0));
   if (!memory->get())
     return false;
diff --git a/chrome/test/automation/automation_messages_internal.h b/chrome/test/automation/automation_messages_internal.h
index b90280b..c5678c8 100644
--- a/chrome/test/automation/automation_messages_internal.h
+++ b/chrome/test/automation/automation_messages_internal.h
@@ -1025,7 +1025,7 @@ IPC_BEGIN_MESSAGES(Automation)
                              int /* browser_handle */,
                              bool /* is_visible */)
 
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_POSIX)
   // See previous definition of this message for explanation of why it is
   // defined twice.
   IPC_MESSAGE_ROUTED3(AutomationMsg_WindowClick, int, gfx::Point, int)
@@ -1102,12 +1102,12 @@ IPC_BEGIN_MESSAGES(Automation)
                              gfx::NativeWindow  /* Tab window */,
                              int  /* Handle to the new tab */)
 
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_POSIX)
   // TODO(estade): this should be merged with the windows message of the same
   // name. See comment for WindowClick.
   IPC_SYNC_MESSAGE_ROUTED4_1(AutomationMsg_WindowDrag,
                              int, std::vector<gfx::Point>, int, bool, bool)
-#endif  // defined(OS_LINUX) || defined(OS_MACOSX)
+#endif  // defined(OS_POSIX)
 
   // This message gets the bounds of the window.
   // Request:
diff --git a/chrome/test/automation/automation_proxy_uitest.cc b/chrome/test/automation/automation_proxy_uitest.cc
index 561173f..cfbc22d 100644
--- a/chrome/test/automation/automation_proxy_uitest.cc
+++ b/chrome/test/automation/automation_proxy_uitest.cc
@@ -995,7 +995,7 @@ TEST_F(ExternalTabUITest, HostNetworkStack) {
 #endif  // defined(OS_WIN)
 
 // TODO(port): Need to port autocomplete_edit_proxy.* first.
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
 TEST_F(AutomationProxyTest, AutocompleteGetSetText) {
   scoped_refptr<BrowserProxy> browser(automation()->GetBrowserWindow(0));
   ASSERT_TRUE(browser.get());
@@ -1039,7 +1039,7 @@ TEST_F(AutomationProxyTest, AutocompleteParallelProxy) {
   EXPECT_EQ(text_to_set2, actual_text2);
 }
 
-#endif  // defined(OS_WIN) || defined(OS_LINUX)
+#endif  // defined(OS_WIN) || defined(OS_NIX)
 
 // So flaky, http://crbug.com/19876. Consult phajdan.jr before re-enabling.
 TEST_F(AutomationProxyVisibleTest, DISABLED_AutocompleteMatchesTest) {
diff --git a/chrome/test/chrome_process_util.cc b/chrome/test/chrome_process_util.cc
index fea1d0e..2b5fe8e 100644
--- a/chrome/test/chrome_process_util.cc
+++ b/chrome/test/chrome_process_util.cc
@@ -87,7 +87,7 @@ ChromeProcessList GetRunningChromeProcesses(const FilePath& data_dir) {
 #endif
   }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // On Linux we might be running with a zygote process for the renderers.
   // Because of that we sweep the list of processes again and pick those which
   // are children of one of the processes that we've already seen.
@@ -98,9 +98,9 @@ ChromeProcessList GetRunningChromeProcesses(const FilePath& data_dir) {
     while ((process_entry = it.NextProcessEntry()))
       result.push_back(process_entry->pid);
   }
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_NIX)
 
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_POSIX)
   // On Mac OS X we run the subprocesses with a different bundle, and
   // on Linux via /proc/self/exe, so they end up with a different
   // name.  We must collect them in a second pass.
diff --git a/chrome/test/in_process_browser_test.cc b/chrome/test/in_process_browser_test.cc
index 6c85760..2097f93 100644
--- a/chrome/test/in_process_browser_test.cc
+++ b/chrome/test/in_process_browser_test.cc
@@ -34,7 +34,7 @@
 #include "chrome/test/ui_test_utils.h"
 #include "sandbox/src/dep.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 #include "base/singleton.h"
 #include "chrome/browser/renderer_host/render_sandbox_host_linux.h"
 #include "chrome/browser/zygote_host_linux.h"
@@ -247,7 +247,7 @@ void InProcessBrowserTest::RunTestOnMainThreadLoop() {
       ChromeThread::IO, FROM_HERE,
       NewRunnableFunction(chrome_browser_net::SetUrlRequestMocksEnabled, true));
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Initialize the RenderSandbox and Zygote hosts. Apparently they get used
   // for InProcessBrowserTest, and this is not the normal browser startup path.
   Singleton<LinuxHostInit>::get();
diff --git a/chrome/test/interactive_ui/interactive_ui_tests.gypi b/chrome/test/interactive_ui/interactive_ui_tests.gypi
index 983dc27..58e913e 100644
--- a/chrome/test/interactive_ui/interactive_ui_tests.gypi
+++ b/chrome/test/interactive_ui/interactive_ui_tests.gypi
@@ -48,7 +48,7 @@
     '<(DEPTH)/chrome/test/unit/chrome_test_suite.h',
   ],
   'conditions': [
-    ['OS=="linux"', {
+    ['OS=="linux" or OS=="freebsd"', {
       'dependencies': [
         '<(DEPTH)/build/linux/system.gyp:gtk',
         '<(DEPTH)/tools/xdisplaycheck/xdisplaycheck.gyp:xdisplaycheck',
@@ -62,7 +62,7 @@
         '<(DEPTH)/chrome/test/interactive_ui/view_event_test_base.cc',
         '<(DEPTH)/chrome/test/interactive_ui/view_event_test_base.h',
       ],
-    }],  # OS=="linux"
+    }],  # OS=="linux or OS=="freebsd""
     ['target_arch!="x64" and target_arch!="arm"', {
       'dependencies': [
         # run time dependency
diff --git a/chrome/test/page_cycler/page_cycler_test.cc b/chrome/test/page_cycler/page_cycler_test.cc
index 9c4f8bc..05721eb 100644
--- a/chrome/test/page_cycler/page_cycler_test.cc
+++ b/chrome/test/page_cycler/page_cycler_test.cc
@@ -270,7 +270,7 @@ class PageCyclerReferenceTest : public PageCyclerTest {
     dir = dir.AppendASCII("reference_build");
 #if defined(OS_WIN)
     dir = dir.AppendASCII("chrome");
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
     dir = dir.AppendASCII("chrome_linux");
 #elif defined(OS_MACOSX)
     dir = dir.AppendASCII("chrome_mac");
diff --git a/chrome/test/reliability/page_load_test.cc b/chrome/test/reliability/page_load_test.cc
index a4d0e5f..c4f5e52 100644
--- a/chrome/test/reliability/page_load_test.cc
+++ b/chrome/test/reliability/page_load_test.cc
@@ -159,7 +159,7 @@ class PageLoadTest : public UITest {
     scoped_ptr<FileVersionInfo> file_info;
 #if defined(OS_WIN)
     file_info.reset(FileVersionInfo::CreateFileVersionInfo(kChromeDll));
-#elif defined(OS_LINUX) || defined(OS_MACOSX)
+#elif defined(OS_POSIX)
     // TODO(fmeawad): the version retrieved here belongs to the test module and
     // not the chrome binary, need to be changed to chrome binary instead.
     file_info.reset(FileVersionInfo::CreateFileVersionInfoForCurrentModule());
diff --git a/chrome/test/startup/feature_startup_test.cc b/chrome/test/startup/feature_startup_test.cc
index 55b331e..d29657d 100644
--- a/chrome/test/startup/feature_startup_test.cc
+++ b/chrome/test/startup/feature_startup_test.cc
@@ -192,7 +192,7 @@ TEST_F(NewTabUIStartupTest, NewTabTimingTestsCold) {
   RunNewTabTimingTest();
 }
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 TEST_F(NewTabUIStartupTest, GtkThemeCold) {
   RunStartupTest("tab_gtk_theme_cold", false /* cold */,
                  false /* not important */,
diff --git a/chrome/test/startup/startup_test.cc b/chrome/test/startup/startup_test.cc
index 1a9ee84..052295e 100644
--- a/chrome/test/startup/startup_test.cc
+++ b/chrome/test/startup/startup_test.cc
@@ -137,7 +137,7 @@ class StartupReferenceTest : public StartupTest {
     dir = dir.AppendASCII("reference_build");
 #if defined(OS_WIN)
     dir = dir.AppendASCII("chrome");
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
     dir = dir.AppendASCII("chrome_linux");
 #elif defined(OS_MACOSX)
     dir = dir.AppendASCII("chrome_mac");
@@ -223,7 +223,7 @@ TEST_F(StartupTest, PerfColdComplexTheme) {
                  false /* not important */, UITest::COMPLEX_THEME);
 }
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 TEST_F(StartupTest, PerfColdGtkTheme) {
   RunStartupTest("warm", "gtk-theme", false /* warm */,
                  false /* not important */, UITest::NATIVE_THEME);
diff --git a/chrome/test/testing_browser_process.h b/chrome/test/testing_browser_process.h
index 2131ed7..ec70edb 100644
--- a/chrome/test/testing_browser_process.h
+++ b/chrome/test/testing_browser_process.h
@@ -44,7 +44,7 @@ class TestingBrowserProcess : public BrowserProcess {
     return NULL;
   }
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
   virtual base::Thread* background_x11_thread() {
     return NULL;
   }
diff --git a/chrome/test/testing_profile.cc b/chrome/test/testing_profile.cc
index 39e847a..6744f02 100644
--- a/chrome/test/testing_profile.cc
+++ b/chrome/test/testing_profile.cc
@@ -13,7 +13,7 @@
 #include "chrome/common/chrome_constants.h"
 #include "webkit/database/database_tracker.h"
 
-#if defined(OS_LINUX) && !defined(TOOLKIT_VIEWS)
+#if defined(TOOLKIT_GTK) && !defined(TOOLKIT_VIEWS)
 #include "chrome/browser/gtk/gtk_theme_provider.h"
 #endif
 
@@ -192,7 +192,7 @@ webkit_database::DatabaseTracker* TestingProfile::GetDatabaseTracker() {
 
 void TestingProfile::InitThemes() {
   if (!created_theme_provider_) {
-#if defined(OS_LINUX) && !defined(TOOLKIT_VIEWS)
+#if defined(TOOLKIT_GTK) && !defined(TOOLKIT_VIEWS)
     theme_provider_.reset(new GtkThemeProvider);
 #else
     theme_provider_.reset(new BrowserThemeProvider);
diff --git a/chrome/test/ui/history_uitest.cc b/chrome/test/ui/history_uitest.cc
index 3a65d4f..b0f9a1c 100644
--- a/chrome/test/ui/history_uitest.cc
+++ b/chrome/test/ui/history_uitest.cc
@@ -93,7 +93,7 @@ TEST_F(HistoryTester, DISABLED_VerifyHistoryLength) {
                 kTestCompleteSuccess, action_max_timeout_ms());
 }
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
 TEST_F(HistoryTester, DISABLED_ConsiderRedirectAfterGestureAsUserInitiated) {
   // Test the history length for the following page transition.
   //
@@ -123,7 +123,7 @@ TEST_F(HistoryTester, DISABLED_ConsiderRedirectAfterGestureAsUserInitiated) {
   WaitForFinish("History_Length_Test_12", "1", url, kTestCompleteCookie,
                 kTestCompleteSuccess, action_max_timeout_ms());
 }
-#endif  // defined(OS_WIN) || defined(OS_LINUX)
+#endif  // defined(OS_WIN) || defined(OS_NIX)
 
 TEST_F(HistoryTester, DISABLED_ConsiderSlowRedirectAsUserInitiated) {
   // Test the history length for the following page transition.
diff --git a/chrome/test/ui/npapi_test_helper.cc b/chrome/test/ui/npapi_test_helper.cc
index 5e7a478..9c8c515 100644
--- a/chrome/test/ui/npapi_test_helper.cc
+++ b/chrome/test/ui/npapi_test_helper.cc
@@ -19,7 +19,7 @@
 #elif defined(OS_MACOSX)
 #define TEST_PLUGIN_NAME "npapi_test_plugin.plugin"
 #define LAYOUT_PLUGIN_NAME "TestNetscapePlugIn.plugin"
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 #define TEST_PLUGIN_NAME "libnpapi_test_plugin.so"
 #endif
 
diff --git a/chrome/test/ui/sunspider_uitest.cc b/chrome/test/ui/sunspider_uitest.cc
index a3c20db..bb2ca2a 100644
--- a/chrome/test/ui/sunspider_uitest.cc
+++ b/chrome/test/ui/sunspider_uitest.cc
@@ -128,7 +128,7 @@ class SunSpiderReferenceTest : public SunSpiderTest {
     dir = dir.AppendASCII("reference_build");
 #if defined(OS_WIN)
     dir = dir.AppendASCII("chrome");
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
     dir = dir.AppendASCII("chrome_linux");
 #elif defined(OS_MACOSX)
     dir = dir.AppendASCII("chrome_mac");
diff --git a/chrome/test/ui/ui_layout_test.cc b/chrome/test/ui/ui_layout_test.cc
index a4be6e2..59ee2c8 100644
--- a/chrome/test/ui/ui_layout_test.cc
+++ b/chrome/test/ui/ui_layout_test.cc
@@ -17,7 +17,7 @@
 static const char kPlatformName[] = "chromium-win";
 #elif defined(OS_MACOSX)
 static const char kPlatformName[] = "chromium-mac";
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 static const char kPlatformName[] = "chromium-linux";
 #else
 #error No known OS defined
diff --git a/chrome/test/ui/ui_test.cc b/chrome/test/ui/ui_test.cc
index 830150c..c024fbc 100644
--- a/chrome/test/ui/ui_test.cc
+++ b/chrome/test/ui/ui_test.cc
@@ -55,7 +55,7 @@ const wchar_t UITest::kFailedNoCrashService[] =
     L"NOTE: This test is expected to fail if crash_service.exe is not "
     L"running. Start it manually before running this test (see the build "
     L"output directory).";
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
     L"NOTE: This test is expected to fail if breakpad is not built in "
     L"or if chromium is not running headless (try CHROME_HEADLESS=1).";
 #else
@@ -1392,7 +1392,7 @@ void UITest::PrintMemoryUsageInfo(const char* test_name, FilePath data_dir) {
   PrintResult("ws_final_t", "", "ws_f_t" + trace_name,
               total_working_set_size, "bytes",
               false /* not important */);
-#elif defined(OS_LINUX) || defined(OS_MACOSX)
+#elif defined(OS_POSIX)
   PrintResult("vm_size_final_b", "", "vm_size_f_b" + trace_name,
               browser_virtual_size, "bytes",
               true /* important */);
diff --git a/chrome/test/ui/v8_benchmark_uitest.cc b/chrome/test/ui/v8_benchmark_uitest.cc
index 4a248f7..1ff742a 100644
--- a/chrome/test/ui/v8_benchmark_uitest.cc
+++ b/chrome/test/ui/v8_benchmark_uitest.cc
@@ -129,7 +129,7 @@ class V8BenchmarkReferenceTest : public V8BenchmarkTest {
     dir = dir.AppendASCII("reference_build");
 #if defined(OS_WIN)
     dir = dir.AppendASCII("chrome");
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
     dir = dir.AppendASCII("chrome_linux");
 #elif defined(OS_MACOSX)
     dir = dir.AppendASCII("chrome_mac");
diff --git a/chrome/test/ui_test_utils.cc b/chrome/test/ui_test_utils.cc
index 6723084..1b164d5 100644
--- a/chrome/test/ui_test_utils.cc
+++ b/chrome/test/ui_test_utils.cc
@@ -314,7 +314,7 @@ void RunMessageLoop() {
 #if defined(TOOLKIT_VIEWS)
   views::AcceleratorHandler handler;
   loop->Run(&handler);
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   loop->Run(NULL);
 #else
   loop->Run();
diff --git a/chrome/test/url_fetch_test/url_fetch_test.cc b/chrome/test/url_fetch_test/url_fetch_test.cc
index ed70f20..8730fd7 100644
--- a/chrome/test/url_fetch_test/url_fetch_test.cc
+++ b/chrome/test/url_fetch_test/url_fetch_test.cc
@@ -33,7 +33,7 @@ class UrlFetchTest : public UITest {
       dir = dir.AppendASCII("reference_build");
 #if defined(OS_WIN)
       dir = dir.AppendASCII("chrome");
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
       dir = dir.AppendASCII("chrome_linux");
 #elif defined(OS_MACOSX)
       dir = dir.AppendASCII("chrome_mac");
diff --git a/chrome/tools/build/linux/sed.sh b/chrome/tools/build/linux/sed.sh
index 22615cb..bc59956 100755
--- a/chrome/tools/build/linux/sed.sh
+++ b/chrome/tools/build/linux/sed.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/usr/bin/env bash
 
 # Copyright (c) 2009 The Chromium Authors. All rights reserved.
 # Use of this source code is governed by a BSD-style license that can be
diff --git a/chrome/worker/worker_uitest.cc b/chrome/worker/worker_uitest.cc
index 51eca16..0734976 100644
--- a/chrome/worker/worker_uitest.cc
+++ b/chrome/worker/worker_uitest.cc
@@ -57,7 +57,7 @@ class WorkerTest : public UILayoutTest {
     // The 1 is for the browser process.
     int number_of_processes = 1 + workers +
         (UITest::in_process_renderer() ? 0 : tabs);
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     // On Linux, we also have a zygote process and a sandbox host process.
     number_of_processes += 2;
 #endif
diff --git a/ipc/ipc.gyp b/ipc/ipc.gyp
index d823bec..c678799 100644
--- a/ipc/ipc.gyp
+++ b/ipc/ipc.gyp
@@ -10,7 +10,7 @@
       ['exclude', '/win_[^/]*\\.cc$'],
     ],
     'conditions': [
-      ['OS=="linux"', {'sources/': [
+      ['OS=="linux" or OS=="freebsd"', {'sources/': [
         ['include', '_posix(_unittest)?\\.cc$'],
       ]}],
       ['OS=="mac"', {'sources/': [
@@ -53,7 +53,7 @@
         'sync_socket_unittest.cc',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
           ],
diff --git a/ipc/ipc_channel_posix.cc b/ipc/ipc_channel_posix.cc
index 545ad0c..6ba8e3b 100644
--- a/ipc/ipc_channel_posix.cc
+++ b/ipc/ipc_channel_posix.cc
@@ -273,7 +273,7 @@ Channel::ChannelImpl::ChannelImpl(const std::string& channel_id, Mode mode,
       server_listen_pipe_(-1),
       pipe_(-1),
       client_pipe_(-1),
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       fd_pipe_(-1),
       remote_fd_pipe_(-1),
 #endif
@@ -378,7 +378,7 @@ bool Channel::ChannelImpl::CreatePipe(const std::string& channel_id,
   scoped_ptr<Message> msg(new Message(MSG_ROUTING_NONE,
                                       HELLO_MESSAGE_TYPE,
                                       IPC::Message::PRIORITY_NORMAL));
-  #if defined(OS_LINUX)
+  #if defined(OS_NIX)
   if (!uses_fifo_) {
     // On Linux, the seccomp sandbox makes it very expensive to call
     // recvmsg() and sendmsg(). Often, we are perfectly OK with resorting to
@@ -454,7 +454,7 @@ bool Channel::ChannelImpl::ProcessIncomingMessages() {
       // Read from pipe.
       // recvmsg() returns 0 if the connection has closed or EAGAIN if no data
       // is waiting on the pipe.
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       if (fd_pipe_ >= 0) {
         bytes_read = HANDLE_EINTR(read(pipe_, input_buf_,
                                        Channel::kReadBufferSize));
@@ -586,7 +586,7 @@ bool Channel::ChannelImpl::ProcessIncomingMessages() {
           if (m.header()->num_fds > num_fds - fds_i) {
             // the message has been completely received, but we didn't get
             // enough file descriptors.
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
             if (!uses_fifo_) {
               char dummy;
               struct iovec fd_pipe_iov = { &dummy, 1 };
@@ -671,7 +671,7 @@ bool Channel::ChannelImpl::ProcessIncomingMessages() {
           if (!m.ReadInt(&iter, &pid)) {
             NOTREACHED();
           }
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
           if (mode_ == MODE_SERVER && !uses_fifo_) {
             // On Linux, the Hello message from the client to the server
             // also contains the fd_pipe_, which  will be used for all
@@ -734,7 +734,7 @@ bool Channel::ChannelImpl::ProcessOutgoingMessages() {
   while (!output_queue_.empty()) {
     Message* msg = output_queue_.front();
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     scoped_ptr<Message> hello;
     if (remote_fd_pipe_ != -1 &&
         msg->routing_id() == MSG_ROUTING_NONE &&
@@ -795,7 +795,7 @@ bool Channel::ChannelImpl::ProcessOutgoingMessages() {
       // num_fds < MAX_DESCRIPTORS_PER_MESSAGE so no danger of overflow.
       msg->header()->num_fds = static_cast<uint16>(num_fds);
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       if (!uses_fifo_ &&
           (msg->routing_id() != MSG_ROUTING_NONE ||
            msg->type() != HELLO_MESSAGE_TYPE)) {
@@ -817,7 +817,7 @@ bool Channel::ChannelImpl::ProcessOutgoingMessages() {
 
     if (bytes_written == 1) {
       fd_written = pipe_;
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       if (mode_ != MODE_SERVER && !uses_fifo_ &&
           msg->routing_id() == MSG_ROUTING_NONE &&
           msg->type() == HELLO_MESSAGE_TYPE) {
@@ -988,7 +988,7 @@ void Channel::ChannelImpl::Close() {
     Singleton<PipeMap>()->RemoveAndClose(pipe_name_);
     client_pipe_ = -1;
   }
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   if (fd_pipe_ != -1) {
     HANDLE_EINTR(close(fd_pipe_));
     fd_pipe_ = -1;
diff --git a/ipc/ipc_channel_posix.h b/ipc/ipc_channel_posix.h
index 714b150..775ef38 100644
--- a/ipc/ipc_channel_posix.h
+++ b/ipc/ipc_channel_posix.h
@@ -83,7 +83,7 @@ class Channel::ChannelImpl : public MessageLoopForIO::Watcher {
   // pipe_ that is passed to the client.
   int client_pipe_;
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Linux uses a dedicated socketpair() for passing file descriptors.
   int fd_pipe_;
   int remote_fd_pipe_;
diff --git a/ipc/sync_socket_unittest.cc b/ipc/sync_socket_unittest.cc
index e07fdf9..b6e3372 100644
--- a/ipc/sync_socket_unittest.cc
+++ b/ipc/sync_socket_unittest.cc
@@ -8,9 +8,9 @@
 #include <sstream>
 
 #include "base/message_loop.h"
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_POSIX)
 #include "base/file_descriptor_posix.h"
-#endif  // defined(OS_LINUX) || defined(OS_MACOSX)
+#endif  // defined(OS_POSIX)
 #include "base/platform_thread.h"
 #include "base/process_util.h"
 #include "base/sync_socket.h"
diff --git a/media/audio/freebsd/audio_manager_freebsd.cc b/media/audio/freebsd/audio_manager_freebsd.cc
new file mode 100644
index 0000000..6fd140a
--- /dev/null
+++ b/media/audio/freebsd/audio_manager_freebsd.cc
@@ -0,0 +1,61 @@
+// Copyright (c) 2006-2009 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "media/audio/freebsd/audio_manager_freebsd.h"
+
+#include "base/at_exit.h"
+#include "base/logging.h"
+//#include "media/audio/fake_audio_output_stream.h"
+//#include "media/audio/linux/alsa_output.h"
+//#include "media/audio/linux/alsa_wrapper.h"
+
+namespace {
+AudioManagerFreeBSD* g_audio_manager = NULL;
+}  // namespace
+
+// Implementation of AudioManager.
+bool AudioManagerFreeBSD::HasAudioDevices() {
+  NOTIMPLEMENTED();
+  return false;
+}
+
+AudioOutputStream* AudioManagerFreeBSD::MakeAudioStream(Format format,
+                                                        int channels,
+                                                        int sample_rate,
+                                                        char bits_per_sample) {
+  NOTIMPLEMENTED();
+  return NULL;
+}
+
+AudioManagerFreeBSD::AudioManagerFreeBSD() {
+}
+
+AudioManagerFreeBSD::~AudioManagerFreeBSD() {
+}
+
+void AudioManagerFreeBSD::Init() {
+}
+
+void AudioManagerFreeBSD::MuteAll() {
+  NOTIMPLEMENTED();
+}
+
+void AudioManagerFreeBSD::UnMuteAll() {
+  NOTIMPLEMENTED();
+}
+
+// TODO(ajwong): Collapse this with the windows version.
+void DestroyAudioManagerFreeBSD(void* not_used) {
+  delete g_audio_manager;
+  g_audio_manager = NULL;
+}
+
+AudioManager* AudioManager::GetAudioManager() {
+  if (!g_audio_manager) {
+    g_audio_manager = new AudioManagerFreeBSD();
+    g_audio_manager->Init();
+    base::AtExitManager::RegisterCallback(&DestroyAudioManagerFreeBSD, NULL);
+  }
+  return g_audio_manager;
+}
diff --git a/media/audio/freebsd/audio_manager_freebsd.h b/media/audio/freebsd/audio_manager_freebsd.h
new file mode 100644
index 0000000..a1c50f7
--- /dev/null
+++ b/media/audio/freebsd/audio_manager_freebsd.h
@@ -0,0 +1,39 @@
+// Copyright (c) 2009 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef MEDIA_AUDIO_LINUX_AUDIO_MANAGER_FREEBSD_H_
+#define MEDIA_AUDIO_LINUX_AUDIO_MANAGER_FREEBSD_H_
+
+//#include <map>
+
+//#include "base/ref_counted.h"
+//#include "base/scoped_ptr.h"
+//#include "base/thread.h"
+#include "media/audio/audio_output.h"
+
+class AudioManagerFreeBSD : public AudioManager {
+ public:
+  AudioManagerFreeBSD();
+
+  // Call before using a newly created AudioManagerFreeBSD instance.
+  virtual void Init();
+
+  // Implementation of AudioManager.
+  virtual bool HasAudioDevices();
+  virtual AudioOutputStream* MakeAudioStream(Format format, int channels,
+                                             int sample_rate,
+                                             char bits_per_sample);
+  virtual void MuteAll();
+  virtual void UnMuteAll();
+
+ protected:
+  // Friend function for invoking the destructor at exit.
+  friend void DestroyAudioManagerFreeBSD(void*);
+  virtual ~AudioManagerFreeBSD();
+
+ private:
+  DISALLOW_COPY_AND_ASSIGN(AudioManagerFreeBSD);
+};
+
+#endif  // MEDIA_AUDIO_LINUX_AUDIO_MANAGER_FREEBSD_H_
diff --git a/media/base/yuv_row.h b/media/base/yuv_row.h
index ac5c6fd..72f0f1d 100644
--- a/media/base/yuv_row.h
+++ b/media/base/yuv_row.h
@@ -64,7 +64,7 @@ void ScaleYUVToRGB32Row(const uint8* y_buf,
 
 #if !defined(USE_MMX)
 // Windows, Mac and Linux use MMX
-#if defined(ARCH_CPU_X86) || (defined(ARCH_CPU_X86_64) && defined(OS_LINUX))
+#if defined(ARCH_CPU_X86) || (defined(ARCH_CPU_X86_64) && defined(OS_NIX))
 #define USE_MMX 1
 #else
 #define USE_MMX 0
diff --git a/media/media.gyp b/media/media.gyp
index f53c35d..9f27e03 100644
--- a/media/media.gyp
+++ b/media/media.gyp
@@ -32,6 +32,8 @@
         'audio/audio_util.h',
         'audio/fake_audio_output_stream.cc',
         'audio/fake_audio_output_stream.h',
+        'audio/freebsd/audio_manager_freebsd.cc',
+        'audio/freebsd/audio_manager_freebsd.h',
         'audio/linux/audio_manager_linux.cc',
         'audio/linux/audio_manager_linux.h',
         'audio/linux/alsa_output.cc',
@@ -332,7 +334,7 @@
         },
       ],
     }],
-    ['OS=="linux"', {
+    ['OS=="linux" or OS=="freebsd"', {
       'targets': [
         {
           'target_name': 'player_x11',
diff --git a/net/base/address_list.cc b/net/base/address_list.cc
index 7952a75..253770e 100644
--- a/net/base/address_list.cc
+++ b/net/base/address_list.cc
@@ -5,6 +5,10 @@
 #include "net/base/address_list.h"
 
 #include <stdlib.h>
+#if defined(OS_FREEBSD)
+#include <netinet/in.h>
+#include <sys/socket.h>
+#endif
 
 #include "base/logging.h"
 #include "net/base/sys_addrinfo.h"
diff --git a/net/base/cert_verifier.cc b/net/base/cert_verifier.cc
index 703ecfe..4e94133 100644
--- a/net/base/cert_verifier.cc
+++ b/net/base/cert_verifier.cc
@@ -4,7 +4,7 @@
 
 #include "net/base/cert_verifier.h"
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 #include <private/pprthred.h>  // PR_DetatchThread
 #endif
 
@@ -38,7 +38,7 @@ class CertVerifier::Request :
   void DoVerify() {
     // Running on the worker thread
     error_ = cert_->Verify(hostname_, flags_, &result_);
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
     // Detach the thread from NSPR.
     // Calling NSS functions attaches the thread to NSPR, which stores
     // the NSPR thread ID in thread-specific data.
diff --git a/net/base/ev_root_ca_metadata.cc b/net/base/ev_root_ca_metadata.cc
index e2200fe..621a174 100644
--- a/net/base/ev_root_ca_metadata.cc
+++ b/net/base/ev_root_ca_metadata.cc
@@ -4,7 +4,7 @@
 
 #include "net/base/ev_root_ca_metadata.h"
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 #include <cert.h>
 #include <pkcs11n.h>
 #include <secerr.h>
@@ -232,7 +232,7 @@ bool EVRootCAMetadata::GetPolicyOID(
 
 EVRootCAMetadata::EVRootCAMetadata() {
   // Constructs the object from the raw metadata in ev_root_ca_metadata.
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
   for (size_t i = 0; i < arraysize(ev_root_ca_metadata); i++) {
     const EVMetadata& metadata = ev_root_ca_metadata[i];
     PRUint8 buf[1024];
diff --git a/net/base/ev_root_ca_metadata.h b/net/base/ev_root_ca_metadata.h
index 5b12337..f006878 100644
--- a/net/base/ev_root_ca_metadata.h
+++ b/net/base/ev_root_ca_metadata.h
@@ -7,7 +7,7 @@
 
 #include "build/build_config.h"
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 #include <secoidt.h>
 #endif
 
@@ -25,7 +25,7 @@ namespace net {
 // extended-validation (EV) certificates.
 class EVRootCAMetadata {
  public:
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
   typedef SECOidTag PolicyOID;
 #else
   typedef const char* PolicyOID;
diff --git a/net/base/host_resolver_proc.cc b/net/base/host_resolver_proc.cc
index 87478eb..bf83d48 100644
--- a/net/base/host_resolver_proc.cc
+++ b/net/base/host_resolver_proc.cc
@@ -3,20 +3,15 @@
 // found in the LICENSE file.
 
 #include "net/base/host_resolver_proc.h"
-
 #include "build/build_config.h"
-
-#if defined(OS_LINUX)
-#include <resolv.h>
-#endif
-
 #include "base/logging.h"
 #include "base/time.h"
 #include "net/base/address_list.h"
 #include "net/base/net_errors.h"
 #include "net/base/sys_addrinfo.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
+#include <resolv.h>
 #include "base/singleton.h"
 #include "base/thread_local_storage.h"
 #endif
@@ -55,7 +50,8 @@ int HostResolverProc::ResolveUsingPrevious(const std::string& host,
   return SystemHostResolverProc(host, address_family, addrlist);
 }
 
-#if defined(OS_LINUX)
+//BSD Is this necessary on BSD?
+#if defined(OS_NIX)
 // On Linux changes to /etc/resolv.conf can go unnoticed thus resulting in
 // DNS queries failing either because nameservers are unknown on startup
 // or because nameserver info has changed as a result of e.g. connecting to
@@ -123,7 +119,7 @@ class DnsReloadTimer {
 // static
 ThreadLocalStorage::Slot DnsReloadTimer::tls_index_(base::LINKER_INITIALIZED);
 
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_NIX)
 
 int SystemHostResolverProc(const std::string& host,
                            AddressFamily address_family,
@@ -182,7 +178,7 @@ int SystemHostResolverProc(const std::string& host,
   hints.ai_socktype = SOCK_STREAM;
 
   int err = getaddrinfo(host.c_str(), NULL, &hints, &ai);
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   net::DnsReloadTimer* dns_timer = Singleton<net::DnsReloadTimer>::get();
   // If we fail, re-initialise the resolver just in case there have been any
   // changes to /etc/resolv.conf and retry. See http://crbug.com/11380 for info.
diff --git a/net/base/listen_socket.cc b/net/base/listen_socket.cc
index fd099b7..b453f05 100644
--- a/net/base/listen_socket.cc
+++ b/net/base/listen_socket.cc
@@ -16,6 +16,10 @@
 #include "third_party/libevent/event.h"
 #endif
 
+#if defined(OS_FREEBSD)
+#include <netinet/in.h>
+#endif
+
 #include "base/eintr_wrapper.h"
 #include "net/base/net_util.h"
 #include "net/base/listen_socket.h"
diff --git a/net/base/listen_socket_unittest.h b/net/base/listen_socket_unittest.h
index 81cbb95..41d5c40 100644
--- a/net/base/listen_socket_unittest.h
+++ b/net/base/listen_socket_unittest.h
@@ -14,6 +14,7 @@
 #include <errno.h>
 #include <semaphore.h>
 #include <arpa/inet.h>
+#include <netinet/in.h>
 #endif
 
 #include "base/thread.h"
diff --git a/net/base/net_util.cc b/net/base/net_util.cc
index 43fa906..fa2f7c3 100644
--- a/net/base/net_util.cc
+++ b/net/base/net_util.cc
@@ -27,6 +27,9 @@
 #endif
 
 #include "base/base64.h"
+#if defined(OS_FREEBSD)
+#include <netinet/in.h>
+#endif
 #include "base/basictypes.h"
 #include "base/file_path.h"
 #include "base/file_util.h"
diff --git a/net/base/sys_addrinfo.h b/net/base/sys_addrinfo.h
index cfdd424..422e438 100644
--- a/net/base/sys_addrinfo.h
+++ b/net/base/sys_addrinfo.h
@@ -21,4 +21,7 @@
 #elif defined(OS_POSIX)
 #include <netdb.h>
 #endif
+#if defined(OS_FREEBSD)
+#include <netinet/in.h>
+#endif
 
diff --git a/net/base/x509_certificate.h b/net/base/x509_certificate.h
index b83bd8a..215489b 100644
--- a/net/base/x509_certificate.h
+++ b/net/base/x509_certificate.h
@@ -22,7 +22,7 @@
 #include <wincrypt.h>
 #elif defined(OS_MACOSX)
 #include <Security/Security.h>
-#elif defined(OS_LINUX)
+#elif defined(USE_NSS)
 // Forward declaration; real one in <cert.h>
 struct CERTCertificateStr;
 #endif
@@ -65,7 +65,7 @@ class X509Certificate : public base::RefCountedThreadSafe<X509Certificate> {
   typedef PCCERT_CONTEXT OSCertHandle;
 #elif defined(OS_MACOSX)
   typedef SecCertificateRef OSCertHandle;
-#elif defined(OS_LINUX)
+#elif defined(USE_NSS)
   typedef struct CERTCertificateStr* OSCertHandle;
 #else
   // TODO(ericroman): not implemented
diff --git a/net/base/x509_certificate_unittest.cc b/net/base/x509_certificate_unittest.cc
index 7904cf0..a400c0e 100644
--- a/net/base/x509_certificate_unittest.cc
+++ b/net/base/x509_certificate_unittest.cc
@@ -266,7 +266,7 @@ TEST(X509CertificateTest, PaypalNullCertParsing) {
   // Either the system crypto library should correctly report a certificate
   // name mismatch, or our certificate blacklist should cause us to report an
   // invalid certificate.
-#if defined(OS_LINUX) || defined(OS_WIN)
+#if !defined(OS_MACOSX)
   EXPECT_NE(0, verify_result.cert_status &
             (CERT_STATUS_COMMON_NAME_INVALID | CERT_STATUS_INVALID));
 #endif
diff --git a/net/http/des.cc b/net/http/des.cc
index 0f89029..5cdd103 100644
--- a/net/http/des.cc
+++ b/net/http/des.cc
@@ -4,7 +4,7 @@
 
 #include "net/http/des.h"
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 #include <nss.h>
 #include <pk11pub.h>
 #elif defined(OS_MACOSX)
@@ -15,7 +15,7 @@
 #endif
 
 #include "base/logging.h"
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 #include "base/nss_init.h"
 #endif
 
@@ -85,7 +85,7 @@ void DESMakeKey(const uint8* raw, uint8* key) {
   key[7] = DESSetKeyParity((raw[6] << 1));
 }
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 
 void DESEncrypt(const uint8* key, const uint8* src, uint8* hash) {
   CK_MECHANISM_TYPE cipher_mech = CKM_DES_ECB;
diff --git a/net/net.gyp b/net/net.gyp
index 2528073..922c2e9 100644
--- a/net/net.gyp
+++ b/net/net.gyp
@@ -157,7 +157,7 @@
         '../base/base.gyp:base',
       ],
       'conditions': [
-        [ 'OS == "linux"', {
+        [ 'OS == "linux" or OS == "freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gconf',
             '../build/linux/system.gyp:gdk',
@@ -177,7 +177,7 @@
             ],
           },
         ],
-        [ 'OS == "linux"', {
+        [ 'OS == "linux" or OS == "freebsd"', {
             'sources/': [ ['exclude', '_(mac|win)\\.cc$'] ],
           },
           {  # else: OS != "linux"
@@ -505,7 +505,7 @@
             '../v8/tools/gyp/v8.gyp:v8',
           ],
         }],
-        [ 'OS == "linux"', {
+        [ 'OS == "linux" or OS == "freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gconf',
             '../build/linux/system.gyp:gdk',
@@ -530,10 +530,16 @@
             ],
           },
         ],
-        [ 'OS == "linux"', {
+        [ 'OS == "linux" or OS == "freebsd"', {
             'sources/': [ ['exclude', '_(mac|win)\\.cc$'] ],
+            'conditions': [
+	            [ 'OS == "freebsd"', {
+	              'sources!': [ 'proxy/proxy_config_service_linux.cc' ],
+	              },
+	            ],
+            ],
           },
-          {  # else: OS != "linux"
+          {  # else: OS != "linux" and OS != "freebsd"
             'sources!': [
               'ocsp/nss_ocsp.cc',
               'ocsp/nss_ocsp.h',
@@ -684,8 +690,14 @@
             ],
           },
         ],
-        [ 'OS == "linux"', {
+        [ 'OS == "linux" or OS == "freebsd"', {
             'sources/': [ ['exclude', '_(mac|win)_unittest\\.cc$'] ],
+            'conditions': [
+              [ 'OS == "freebsd"', {
+                'sources!': [ 'proxy/proxy_config_service_linux_unittest.cc' ],
+                },
+              ],
+            ],
             'dependencies': [
               '../build/linux/system.gyp:gtk',
             ],
diff --git a/net/socket/client_socket.h b/net/socket/client_socket.h
index 0faab2c..f5e268d 100644
--- a/net/socket/client_socket.h
+++ b/net/socket/client_socket.h
@@ -8,7 +8,7 @@
 #include "build/build_config.h"
 
 // For struct sockaddr and socklen_t.
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_POSIX)
 #include <sys/socket.h>
 #elif defined(OS_WIN)
 #include <ws2tcpip.h>
diff --git a/net/socket/client_socket_factory.cc b/net/socket/client_socket_factory.cc
index fe2ce10..9458381 100644
--- a/net/socket/client_socket_factory.cc
+++ b/net/socket/client_socket_factory.cc
@@ -8,7 +8,7 @@
 #include "build/build_config.h"
 #if defined(OS_WIN)
 #include "net/socket/ssl_client_socket_win.h"
-#elif defined(OS_LINUX)
+#elif defined(USE_NSS)
 #include "net/socket/ssl_client_socket_nss.h"
 #elif defined(OS_MACOSX)
 #include "net/socket/ssl_client_socket_mac.h"
@@ -30,7 +30,7 @@ class DefaultClientSocketFactory : public ClientSocketFactory {
       const SSLConfig& ssl_config) {
 #if defined(OS_WIN)
     return new SSLClientSocketWin(transport_socket, hostname, ssl_config);
-#elif defined(OS_LINUX)
+#elif defined(USE_NSS)
     return new SSLClientSocketNSS(transport_socket, hostname, ssl_config);
 #elif defined(OS_MACOSX)
     return new SSLClientSocketMac(transport_socket, hostname, ssl_config);
diff --git a/net/socket/client_socket_pool_base_unittest.cc b/net/socket/client_socket_pool_base_unittest.cc
index 1799e09..a39c52a 100644
--- a/net/socket/client_socket_pool_base_unittest.cc
+++ b/net/socket/client_socket_pool_base_unittest.cc
@@ -57,7 +57,7 @@ class MockClientSocket : public ClientSocket {
   virtual bool IsConnected() const { return connected_; }
   virtual bool IsConnectedAndIdle() const { return connected_; }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   virtual int GetPeerName(struct sockaddr* /* name */,
                           socklen_t* /* namelen */) {
     return 0;
diff --git a/net/socket/socks5_client_socket.cc b/net/socket/socks5_client_socket.cc
index 33d8e53..47c4a5a 100644
--- a/net/socket/socks5_client_socket.cc
+++ b/net/socket/socks5_client_socket.cc
@@ -12,6 +12,11 @@
 #include "net/base/net_util.h"
 #include "net/base/sys_addrinfo.h"
 
+#if defined(OS_FREEBSD)
+#include <netinet/in.h>
+#include <sys/socket.h>
+#endif
+
 namespace net {
 
 const unsigned int SOCKS5ClientSocket::kGreetReadHeaderSize = 2;
@@ -375,7 +380,7 @@ int SOCKS5ClientSocket::DoHandshakeReadComplete(int result) {
   return OK;
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 int SOCKS5ClientSocket::GetPeerName(struct sockaddr* name,
                                     socklen_t* namelen) {
   return transport_->GetPeerName(name, namelen);
diff --git a/net/socket/socks5_client_socket.h b/net/socket/socks5_client_socket.h
index f8de9a6..8b4411b 100644
--- a/net/socket/socks5_client_socket.h
+++ b/net/socket/socks5_client_socket.h
@@ -56,7 +56,7 @@ class SOCKS5ClientSocket : public ClientSocket {
   virtual bool SetReceiveBufferSize(int32 size);
   virtual bool SetSendBufferSize(int32 size);
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   virtual int GetPeerName(struct sockaddr* name, socklen_t* namelen);
 #endif
 
diff --git a/net/socket/socks_client_socket.cc b/net/socket/socks_client_socket.cc
index db70461..7071d50 100644
--- a/net/socket/socks_client_socket.cc
+++ b/net/socket/socks_client_socket.cc
@@ -12,6 +12,11 @@
 #include "net/base/net_util.h"
 #include "net/base/sys_addrinfo.h"
 
+#if defined(OS_FREEBSD)
+#include <netinet/in.h>
+#include <sys/socket.h>
+#endif
+
 namespace net {
 
 // Every SOCKS server requests a user-id from the client. It is optional
@@ -390,7 +395,7 @@ int SOCKSClientSocket::DoHandshakeReadComplete(int result) {
   // Note: we ignore the last 6 bytes as specified by the SOCKS protocol
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 int SOCKSClientSocket::GetPeerName(struct sockaddr* name,
                                    socklen_t* namelen) {
   return transport_->GetPeerName(name, namelen);
diff --git a/net/socket/socks_client_socket.h b/net/socket/socks_client_socket.h
index c099c4c..f032a7c 100644
--- a/net/socket/socks_client_socket.h
+++ b/net/socket/socks_client_socket.h
@@ -52,7 +52,7 @@ class SOCKSClientSocket : public ClientSocket {
   virtual bool SetReceiveBufferSize(int32 size);
   virtual bool SetSendBufferSize(int32 size);
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Needed by ssl_client_socket_nss.
   virtual int GetPeerName(struct sockaddr* name, socklen_t* namelen);
 #endif
diff --git a/net/socket/ssl_client_socket_nss.cc b/net/socket/ssl_client_socket_nss.cc
index c013ed8..1faae8f 100644
--- a/net/socket/ssl_client_socket_nss.cc
+++ b/net/socket/ssl_client_socket_nss.cc
@@ -251,13 +251,30 @@ int SSLClientSocketNSS::InitializeSSLOptions() {
 
   // Tell NSS who we're connected to
   PRNetAddr peername;
+#if defined(OS_FREEBSD)
+//BSD peername is implicitly cast back to a PRNetAddr when GetPeerName returns
+//BSD but it doesn't work on BSD cuz sockaddr is defined differently than on
+//BSD linux.  As a result, I hand unroll the data structure below.  Perhaps
+//BSD someone better versed in casting magic can clean this up and do it in
+//BSD in a single cast, as on linux.
+  sockaddr socketinfo;
+  socklen_t len = sizeof(socketinfo);
+  int err = transport_->GetPeerName(&socketinfo, &len);
+#else
   socklen_t len = sizeof(PRNetAddr);
   int err = transport_->GetPeerName((struct sockaddr *)&peername, &len);
+#endif
   if (err) {
     DLOG(ERROR) << "GetPeerName failed";
     // TODO(wtc): Change GetPeerName to return a network error code.
     return ERR_UNEXPECTED;
   }
+#if defined(OS_FREEBSD)
+  sockaddr_in* sockaccess = (struct sockaddr_in *) &socketinfo;
+  peername.inet.family = sockaccess->sin_family;
+  peername.inet.ip     = sockaccess->sin_addr.s_addr;
+  peername.inet.port   = sockaccess->sin_port;
+#endif
   memio_SetPeerName(nss_fd_, &peername);
 
   // Grab pointer to buffers
diff --git a/net/socket/ssl_test_util.cc b/net/socket/ssl_test_util.cc
index becb322..d83c39d 100644
--- a/net/socket/ssl_test_util.cc
+++ b/net/socket/ssl_test_util.cc
@@ -13,7 +13,7 @@
 #if defined(OS_WIN)
 #include <windows.h>
 #include <wincrypt.h>
-#elif defined(OS_LINUX)
+#elif defined(USE_NSS)
 #include <nspr.h>
 #include <nss.h>
 #include <secerr.h>
@@ -44,7 +44,7 @@
 
 namespace {
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 static CERTCertificate* LoadTemporaryCert(const FilePath& filename) {
   base::EnsureNSSInit();
 
@@ -138,7 +138,7 @@ TestServerLauncher::TestServerLauncher() : process_handle_(
     forking_(false),
     connection_attempts_(kDefaultTestConnectionAttempts),
     connection_timeout_(kDefaultTestConnectionTimeout)
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 , cert_(NULL)
 #endif
 {
@@ -151,7 +151,7 @@ TestServerLauncher::TestServerLauncher(int connection_attempts,
                           forking_(false),
                           connection_attempts_(connection_attempts),
                           connection_timeout_(connection_timeout)
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
 , cert_(NULL)
 #endif
 {
@@ -353,7 +353,7 @@ bool TestServerLauncher::Stop() {
 }
 
 TestServerLauncher::~TestServerLauncher() {
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
   if (cert_)
     CERT_DestroyCertificate(reinterpret_cast<CERTCertificate*>(cert_));
 #elif defined(OS_MACOSX)
@@ -381,7 +381,7 @@ FilePath TestServerLauncher::GetExpiredCertPath() {
 }
 
 bool TestServerLauncher::LoadTestRootCert() {
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
   if (cert_)
     return true;
 
diff --git a/net/socket/ssl_test_util.h b/net/socket/ssl_test_util.h
index fb060da..cf24ee5 100644
--- a/net/socket/ssl_test_util.h
+++ b/net/socket/ssl_test_util.h
@@ -117,7 +117,7 @@ class TestServerLauncher {
   int connection_attempts_;
   int connection_timeout_;
 
-#if defined(OS_LINUX)
+#if defined(USE_NSS)
   struct PrivateCERTCertificate;
   PrivateCERTCertificate *cert_;
 #endif
diff --git a/net/third_party/nss/nss.gyp b/net/third_party/nss/nss.gyp
index ec9861d..5b318ad 100644
--- a/net/third_party/nss/nss.gyp
+++ b/net/third_party/nss/nss.gyp
@@ -79,7 +79,7 @@
         '<!@(<(pkg-config) --cflags nss)',
       ],
       'conditions': [
-        [ 'OS == "linux"', {
+        [ 'OS == "linux" or OS == "freebsd"', {
           'sources!': [
             'ssl/os2_err.c',
             'ssl/os2_err.h',
diff --git a/net/tools/hresolv/hresolv.cc b/net/tools/hresolv/hresolv.cc
index ed63330..dcac836 100644
--- a/net/tools/hresolv/hresolv.cc
+++ b/net/tools/hresolv/hresolv.cc
@@ -50,7 +50,7 @@ static const FlagName kAddrinfoFlagNames[] = {
   {AI_V4MAPPED, "AI_V4MAPPED"},
   {AI_ALL, "AI_ALL"},
   {AI_ADDRCONFIG, "AI_ADDRCONFIG"},
-#if defined(OS_LINUX) || defined(OS_WIN)
+#if !defined(OS_MACOSX)
   {AI_NUMERICSERV, "AI_NUMERICSERV"},
 #endif
 };
diff --git a/net/url_request/url_request_unittest.cc b/net/url_request/url_request_unittest.cc
index 2612a90..81fb09e 100644
--- a/net/url_request/url_request_unittest.cc
+++ b/net/url_request/url_request_unittest.cc
@@ -9,7 +9,7 @@
 #if defined(OS_WIN)
 #include <windows.h>
 #include <shlobj.h>
-#elif defined(OS_LINUX)
+#elif defined(USE_NSS)
 #include "base/nss_init.h"
 #endif
 
diff --git a/printing/native_metafile.h b/printing/native_metafile.h
index 2c71986..9131235 100644
--- a/printing/native_metafile.h
+++ b/printing/native_metafile.h
@@ -34,7 +34,7 @@ typedef PdfMetafile NativeMetafile;
 
 }  // namespace printing
 
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 
 #include "printing/pdf_ps_metafile_linux.h"
 
diff --git a/printing/printing.gyp b/printing/printing.gyp
index 3f48ef7..bd2627d 100644
--- a/printing/printing.gyp
+++ b/printing/printing.gyp
@@ -64,13 +64,14 @@
         ],
       },
       'conditions': [
-        ['OS!="linux"', {'sources/': [['exclude', '_linux\\.cc$']]}],
+        ['OS!="linux" and OS!="freebsd"',
+         {'sources/': [['exclude', '_linux\\.cc$']]}],
         ['OS!="mac"', {'sources/': [['exclude', '_mac\\.(cc|mm?)$']]}],
         ['OS!="win"', {'sources/': [['exclude', '_win\\.cc$']]
           }, {  # else: OS=="win"
             'sources/': [['exclude', '_posix\\.cc$']]
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             # For FT_Init_FreeType and friends.
             '../build/linux/system.gyp:freetype2',
@@ -107,7 +108,7 @@
             'sources/': [['exclude', '_posix_unittest\\.cc$']]
           }
         ],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
             'dependencies': [
               '../build/linux/system.gyp:gtk',
            ],
diff --git a/sdch/sdch.gyp b/sdch/sdch.gyp
index acb4312..a0de3d0 100644
--- a/sdch/sdch.gyp
+++ b/sdch/sdch.gyp
@@ -54,7 +54,7 @@
         ],
       },
       'conditions': [
-        [ 'OS == "linux"', { 'include_dirs': [ 'linux' ] } ],
+        [ 'OS == "linux" or OS == "freebsd"', { 'include_dirs': [ 'linux' ] } ],
         [ 'OS == "mac"', { 'include_dirs': [ 'mac' ] } ],
         [ 'OS == "win"', { 'include_dirs': [ 'open-vcdiff/vsprojects' ] } ],
       ],
diff --git a/skia/ext/bitmap_platform_device.h b/skia/ext/bitmap_platform_device.h
index bcc4972..40ce608 100644
--- a/skia/ext/bitmap_platform_device.h
+++ b/skia/ext/bitmap_platform_device.h
@@ -12,7 +12,7 @@
 #include "skia/ext/bitmap_platform_device_win.h"
 #elif defined(__APPLE__)
 #include "skia/ext/bitmap_platform_device_mac.h"
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__FreeBSD__)
 #include "skia/ext/bitmap_platform_device_linux.h"
 #endif
 
diff --git a/skia/ext/canvas_paint.h b/skia/ext/canvas_paint.h
index 4e7b536..7698ffb 100644
--- a/skia/ext/canvas_paint.h
+++ b/skia/ext/canvas_paint.h
@@ -12,7 +12,7 @@
 #include "skia/ext/canvas_paint_win.h"
 #elif defined(__APPLE__)
 #include "skia/ext/canvas_paint_mac.h"
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__FreeBSD__)
 #include "skia/ext/canvas_paint_linux.h"
 #endif
 
diff --git a/skia/ext/vector_canvas.h b/skia/ext/vector_canvas.h
index d4f76f8..65c4f27 100644
--- a/skia/ext/vector_canvas.h
+++ b/skia/ext/vector_canvas.h
@@ -8,7 +8,7 @@
 #include "skia/ext/platform_canvas.h"
 #include "skia/ext/vector_platform_device.h"
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__FreeBSD__)
 typedef struct _cairo cairo_t;
 #endif
 
@@ -23,7 +23,7 @@ class VectorCanvas : public PlatformCanvas {
   VectorCanvas();
 #if defined(WIN32)
   VectorCanvas(HDC dc, int width, int height);
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__FreeBSD__)
   // Caller owns |context|. Ownership is not transferred.
   VectorCanvas(cairo_t* context, int width, int height);
 #endif
@@ -32,13 +32,13 @@ class VectorCanvas : public PlatformCanvas {
   // For two-part init, call if you use the no-argument constructor above
 #if defined(WIN32)
   bool initialize(HDC context, int width, int height);
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__FreeBSD__)
   // Ownership of |context| is not transferred.
   bool initialize(cairo_t* context, int width, int height);
 #endif
 
   virtual SkBounder* setBounder(SkBounder* bounder);
-#if defined(WIN32) || defined(__linux__)
+#if defined(WIN32) || defined(__linux__) || defined(__FreeBSD__)
   virtual SkDevice* createDevice(SkBitmap::Config config,
                                  int width, int height,
                                  bool is_opaque, bool isForLayer);
@@ -50,7 +50,7 @@ class VectorCanvas : public PlatformCanvas {
   // |shared_section| is in fact the HDC used for output. |is_opaque| is unused.
   virtual SkDevice* createPlatformDevice(int width, int height, bool is_opaque,
                                          HANDLE shared_section);
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__FreeBSD__)
   // Ownership of |context| is not transferred. |is_opaque| is unused.
   virtual SkDevice* createPlatformDevice(cairo_t* context,
                                          int width, int height,
diff --git a/skia/ext/vector_platform_device.h b/skia/ext/vector_platform_device.h
index d77e565..99972d9 100644
--- a/skia/ext/vector_platform_device.h
+++ b/skia/ext/vector_platform_device.h
@@ -9,7 +9,7 @@
 // VectorPlatformDevice header file for your platform.
 #if defined(WIN32)
 #include "skia/ext/vector_platform_device_win.h"
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__FreeBSD__)
 #include "skia/ext/vector_platform_device_linux.h"
 #endif
 
diff --git a/skia/skia.gyp b/skia/skia.gyp
index 69638cc..36025ad 100644
--- a/skia/skia.gyp
+++ b/skia/skia.gyp
@@ -565,7 +565,7 @@
             ['exclude', '_mac\\.(cc|cpp|mm?)$'],
             ['exclude', '/mac/'] ],
         }],
-        [ 'OS != "linux"', {
+        [ 'OS != "linux" and OS != "freebsd"', {
           'sources/': [ ['exclude', '_(linux|gtk)\\.(cc|cpp)$'] ],
           'sources!': [
             '../third_party/skia/src/ports/SkFontHost_FreeType.cpp',
@@ -692,7 +692,7 @@
         '../third_party/skia/src/core',
       ],
       'conditions': [
-        [ 'OS == "linux" and target_arch != "arm"', {
+        [ '(OS == "linux" or OS == "freebsd") and target_arch != "arm"', {
           'cflags': [
             '-msse2',
           ],
diff --git a/testing/gtest.gyp b/testing/gtest.gyp
index cdd70c5..6c54726 100644
--- a/testing/gtest.gyp
+++ b/testing/gtest.gyp
@@ -59,7 +59,7 @@
             ],
           },
         }],
-        ['OS == "mac" or OS == "linux"', {
+        ['OS == "mac" or OS == "linux" or OS == "freebsd"', {
           'defines': [
             # gtest isn't able to figure out when RTTI is disabled for gcc
             # versions older than 4.3.2, and assumes it's enabled.  Our Mac
diff --git a/third_party/bzip2/bzip2.gyp b/third_party/bzip2/bzip2.gyp
index c0f36e0..aa612bb 100644
--- a/third_party/bzip2/bzip2.gyp
+++ b/third_party/bzip2/bzip2.gyp
@@ -5,7 +5,7 @@
 {
   'variables': {
     'conditions': [
-      [ 'OS=="linux"', {
+      [ 'OS=="linux" or OS=="freebsd"', {
         # Link to system .so since we already use it due to GTK.
         'use_system_bzip2%': 1,
       }, {  # OS!="linux"
diff --git a/third_party/expat/expat.gyp b/third_party/expat/expat.gyp
index ab017f6..f8ff168 100644
--- a/third_party/expat/expat.gyp
+++ b/third_party/expat/expat.gyp
@@ -15,7 +15,7 @@
     ]
   },
   'conditions': [
-    ['OS=="linux"', {
+    ['OS=="linux" or OS=="freebsd"', {
       # On Linux, we implicitly already depend on expat via fontconfig;
       # let's not pull it in twice.
       'targets': [
@@ -59,7 +59,7 @@
                 'COMPILED_FROM_DSP',
               ],
             }],
-            ['OS=="mac"', {
+            ['OS=="mac" or OS=="freebsd"', {
               'defines': [
                 'HAVE_EXPAT_CONFIG_H',
               ],
diff --git a/third_party/ffmpeg/ffmpeg.gyp b/third_party/ffmpeg/ffmpeg.gyp
index 1e344ae..febc3c1 100755
--- a/third_party/ffmpeg/ffmpeg.gyp
+++ b/third_party/ffmpeg/ffmpeg.gyp
@@ -47,7 +47,7 @@
     #
     # TODO(ajwong): Per the comment above, reduce this conditional's size and
     # determine if in-tree build in Windows is tractable.
-    ['(OS!="linux" and OS!="freebsd" and OS!="mac") or use_system_ffmpeg!=0', {
+    ['(OS!="linux" and OS!="mac") or use_system_ffmpeg!=0', {
       'variables': {
         'target_for_binaries': 'ffmpeg_binaries',
         'ffmpeg_include_root': 'include',
@@ -680,7 +680,7 @@
             ],
           },
         ],
-        ['OS=="linux" or OS=="freebsd"', {
+        ['OS=="linux"', {
           'link_settings': {
             'libraries': [
               # We need dl for dlopen() and friends.
diff --git a/third_party/glew/src/glew.c b/third_party/glew/src/glew.c
index 17d2565..4e59a1b 100644
--- a/third_party/glew/src/glew.c
+++ b/third_party/glew/src/glew.c
@@ -103,7 +103,7 @@ void* NSGLGetProcAddress (const GLubyte *name)
 }
 #endif /* __APPLE__ */
 
-#if defined(__sgi) || defined (__sun) || defined(__linux__)
+#if defined(__sgi) || defined (__sun) || defined(__linux__) || defined(__FreeBSD__)
 #include <dlfcn.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -139,7 +139,7 @@ void* dlGetProcAddress (const GLubyte* name)
 #  if defined(__APPLE__)
 #    define glewGetProcAddress(name) NSGLGetProcAddress(name)
 #  else
-#    if defined(__sgi) || defined(__sun) || defined(__linux__)
+#    if defined(__sgi) || defined(__sun) || defined(__linux__) || defined(__FreeBSD__)
 #      define glewGetProcAddress(name) dlGetProcAddress(name)
 #    else /* Used to use this for Linux, but no longer */
 #      define glewGetProcAddress(name) (*glXGetProcAddressARB)(name)
diff --git a/third_party/libevent/event-config.h b/third_party/libevent/event-config.h
index 66a53de..d3b8486 100644
--- a/third_party/libevent/event-config.h
+++ b/third_party/libevent/event-config.h
@@ -9,6 +9,8 @@
 #include "mac/event-config.h"
 #elif defined(__linux__)
 #include "linux/event-config.h"
+#elif defined(__FreeBSD__)
+#include "freebsd/event-config.h"
 #else
 #error generate event-config.h for your platform
 #endif
diff --git a/third_party/libevent/freebsd/event-config.h b/third_party/libevent/freebsd/event-config.h
new file mode 100644
index 0000000..1e0ae89
--- /dev/null
+++ b/third_party/libevent/freebsd/event-config.h
@@ -0,0 +1,262 @@
+/* event-config.h
+ * Generated by autoconf; post-processed by libevent.
+ * Do not edit this file.
+ * Do not rely on macros in this file existing in later versions.
+ */
+#ifndef _EVENT_CONFIG_H_
+#define _EVENT_CONFIG_H_
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Define if clock_gettime is available in libc */
+#define _EVENT_DNS_USE_CPU_CLOCK_FOR_ID 1
+
+/* Define is no secure id variant is available */
+/* #undef _EVENT_DNS_USE_GETTIMEOFDAY_FOR_ID */
+
+/* Define to 1 if you have the `clock_gettime' function. */
+#define _EVENT_HAVE_CLOCK_GETTIME 1
+
+/* Define if /dev/poll is available */
+/* #undef _EVENT_HAVE_DEVPOLL */
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define _EVENT_HAVE_DLFCN_H 1
+
+/* Define if your system supports the epoll system calls */
+/* #undef _EVENT_HAVE_EPOLL */
+
+/* Define to 1 if you have the `epoll_ctl' function. */
+/* #undef _EVENT_HAVE_EPOLL_CTL */
+
+/* Define if your system supports event ports */
+/* #undef _EVENT_HAVE_EVENT_PORTS */
+
+/* Define to 1 if you have the `fcntl' function. */
+#define _EVENT_HAVE_FCNTL 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define _EVENT_HAVE_FCNTL_H 1
+
+/* Define to 1 if you have the `getaddrinfo' function. */
+#define _EVENT_HAVE_GETADDRINFO 1
+
+/* Define to 1 if you have the `getnameinfo' function. */
+#define _EVENT_HAVE_GETNAMEINFO 1
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#define _EVENT_HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the `inet_ntop' function. */
+#define _EVENT_HAVE_INET_NTOP 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define _EVENT_HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `kqueue' function. */
+#define _EVENT_HAVE_KQUEUE 1
+
+/* Define to 1 if you have the `nsl' library (-lnsl). */
+/* #undef _EVENT_HAVE_LIBNSL */
+
+/* Define to 1 if you have the `resolv' library (-lresolv). */
+/* #undef _EVENT_HAVE_LIBRESOLV */
+
+/* Define to 1 if you have the `rt' library (-lrt). */
+#define _EVENT_HAVE_LIBRT 1
+
+/* Define to 1 if you have the `socket' library (-lsocket). */
+/* #undef _EVENT_HAVE_LIBSOCKET */
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define _EVENT_HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <netinet/in6.h> header file. */
+/* #undef _EVENT_HAVE_NETINET_IN6_H */
+
+/* Define to 1 if you have the `poll' function. */
+#define _EVENT_HAVE_POLL 1
+
+/* Define to 1 if you have the <poll.h> header file. */
+#define _EVENT_HAVE_POLL_H 1
+
+/* Define to 1 if you have the `port_create' function. */
+/* #undef _EVENT_HAVE_PORT_CREATE */
+
+/* Define to 1 if you have the <port.h> header file. */
+/* #undef _EVENT_HAVE_PORT_H */
+
+/* Define to 1 if you have the `select' function. */
+#define _EVENT_HAVE_SELECT 1
+
+/* Define if F_SETFD is defined in <fcntl.h> */
+#define _EVENT_HAVE_SETFD 1
+
+/* Define to 1 if you have the `sigaction' function. */
+#define _EVENT_HAVE_SIGACTION 1
+
+/* Define to 1 if you have the `signal' function. */
+#define _EVENT_HAVE_SIGNAL 1
+
+/* Define to 1 if you have the <signal.h> header file. */
+#define _EVENT_HAVE_SIGNAL_H 1
+
+/* Define to 1 if you have the <stdarg.h> header file. */
+#define _EVENT_HAVE_STDARG_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define _EVENT_HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define _EVENT_HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define _EVENT_HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define _EVENT_HAVE_STRING_H 1
+
+/* Define to 1 if you have the `strlcpy' function. */
+#define _EVENT_HAVE_STRLCPY 1
+
+/* Define to 1 if you have the `strsep' function. */
+#define _EVENT_HAVE_STRSEP 1
+
+/* Define to 1 if you have the `strtok_r' function. */
+#define _EVENT_HAVE_STRTOK_R 1
+
+/* Define to 1 if you have the `strtoll' function. */
+#define _EVENT_HAVE_STRTOLL 1
+
+/* Define to 1 if the system has the type `struct in6_addr'. */
+#define _EVENT_HAVE_STRUCT_IN6_ADDR 1
+
+/* Define to 1 if you have the <sys/devpoll.h> header file. */
+/* #undef _EVENT_HAVE_SYS_DEVPOLL_H */
+
+/* Define to 1 if you have the <sys/epoll.h> header file. */
+/* #undef _EVENT_HAVE_SYS_EPOLL_H */
+
+/* Define to 1 if you have the <sys/event.h> header file. */
+#define _EVENT_HAVE_SYS_EVENT_H 1
+
+/* Define to 1 if you have the <sys/ioctl.h> header file. */
+#define _EVENT_HAVE_SYS_IOCTL_H 1
+
+/* Define to 1 if you have the <sys/param.h> header file. */
+#define _EVENT_HAVE_SYS_PARAM_H 1
+
+/* Define to 1 if you have the <sys/queue.h> header file. */
+#define _EVENT_HAVE_SYS_QUEUE_H 1
+
+/* Define to 1 if you have the <sys/select.h> header file. */
+#define _EVENT_HAVE_SYS_SELECT_H 1
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#define _EVENT_HAVE_SYS_SOCKET_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define _EVENT_HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define _EVENT_HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define _EVENT_HAVE_SYS_TYPES_H 1
+
+/* Define if TAILQ_FOREACH is defined in <sys/queue.h> */
+#define _EVENT_HAVE_TAILQFOREACH 1
+
+/* Define if timeradd is defined in <sys/time.h> */
+#define _EVENT_HAVE_TIMERADD 1
+
+/* Define if timerclear is defined in <sys/time.h> */
+#define _EVENT_HAVE_TIMERCLEAR 1
+
+/* Define if timercmp is defined in <sys/time.h> */
+#define _EVENT_HAVE_TIMERCMP 1
+
+/* Define if timerisset is defined in <sys/time.h> */
+#define _EVENT_HAVE_TIMERISSET 1
+
+/* Define to 1 if the system has the type `uint16_t'. */
+#define _EVENT_HAVE_UINT16_T 1
+
+/* Define to 1 if the system has the type `uint32_t'. */
+#define _EVENT_HAVE_UINT32_T 1
+
+/* Define to 1 if the system has the type `uint64_t'. */
+#define _EVENT_HAVE_UINT64_T 1
+
+/* Define to 1 if the system has the type `uint8_t'. */
+#define _EVENT_HAVE_UINT8_T 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define _EVENT_HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the `vasprintf' function. */
+#define _EVENT_HAVE_VASPRINTF 1
+
+/* Define if kqueue works correctly with pipes */
+#define _EVENT_HAVE_WORKING_KQUEUE 1
+
+/* Name of package */
+#define _EVENT_PACKAGE "libevent"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define _EVENT_PACKAGE_BUGREPORT ""
+
+/* Define to the full name of this package. */
+#define _EVENT_PACKAGE_NAME ""
+
+/* Define to the full name and version of this package. */
+#define _EVENT_PACKAGE_STRING ""
+
+/* Define to the one symbol short name of this package. */
+#define _EVENT_PACKAGE_TARNAME ""
+
+/* Define to the version of this package. */
+#define _EVENT_PACKAGE_VERSION ""
+
+/* The size of `int', as computed by sizeof. */
+#define _EVENT_SIZEOF_INT 4
+
+/* The size of `long', as computed by sizeof. */
+#define _EVENT_SIZEOF_LONG 8
+
+/* The size of `long long', as computed by sizeof. */
+#define _EVENT_SIZEOF_LONG_LONG 8
+
+/* The size of `short', as computed by sizeof. */
+#define _EVENT_SIZEOF_SHORT 2
+
+/* Define to 1 if you have the ANSI C header files. */
+#define _EVENT_STDC_HEADERS 1
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define _EVENT_TIME_WITH_SYS_TIME 1
+
+/* Version number of package */
+#define _EVENT_VERSION "1.4.13-stable"
+
+/* Define to appropriate substitue if compiler doesnt have __func__ */
+/* #undef _EVENT___func__ */
+
+/* Define to empty if `const' does not conform to ANSI C. */
+/* #undef _EVENT_const */
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef _EVENT___cplusplus
+/* #undef _EVENT_inline */
+#endif
+
+/* Define to `int' if <sys/types.h> does not define. */
+/* #undef _EVENT_pid_t */
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+/* #undef _EVENT_size_t */
+
+/* Define to unsigned int if you dont have it */
+/* #undef _EVENT_socklen_t */
+#endif
diff --git a/third_party/libjingle/files/talk/base/httpcommon.cc b/third_party/libjingle/files/talk/base/httpcommon.cc
index 0358121..1eec46b 100644
--- a/third_party/libjingle/files/talk/base/httpcommon.cc
+++ b/third_party/libjingle/files/talk/base/httpcommon.cc
@@ -369,7 +369,7 @@ bool HttpDateToSeconds(const std::string& date, unsigned long* seconds) {
     }
     gmt = non_gmt + kTimeZoneOffsets[zindex] * 60 * 60;
   }
-#ifdef OSX
+#if defined(OSX) || defined(BSD)
   tm *tm_for_timezone = localtime((time_t *)&gmt);
   *seconds = gmt + tm_for_timezone->tm_gmtoff;
 #else
diff --git a/third_party/libjingle/libjingle.gyp b/third_party/libjingle/libjingle.gyp
index b600e75..89d496f 100644
--- a/third_party/libjingle/libjingle.gyp
+++ b/third_party/libjingle/libjingle.gyp
@@ -28,7 +28,7 @@
         'FEATURE_ENABLE_VOICEMAIL',
       ],
       'conditions': [
-        ['OS=="linux" or OS=="mac"', {
+        ['OS=="linux" or OS=="mac" or OS=="freebsd"', {
           'defines': [
             'POSIX',
           ],
@@ -41,11 +41,16 @@
           '../third_party/platformsdk_win2008_6_1/files/Include',
         ],
       }],
-      ['OS=="linux" or OS=="mac"', {
+      ['OS=="linux" or OS=="mac" or OS=="freebsd"', {
         'defines': [
           'POSIX',
         ],
       }],
+      ['OS=="freebsd"', {
+        'defines': [
+          'BSD',
+        ],
+      }],
     ],
   },
   'targets': [
@@ -272,7 +277,7 @@
             'overrides/talk/base/winsock_initializer.cc',
           ],
         }],
-        ['OS=="linux" or OS=="mac"', {
+        ['OS=="linux" or OS=="mac" or OS=="freebsd"', {
           'sources': [
             'files/talk/base/unixfilesystem.cc',
           ],
diff --git a/third_party/libjpeg/libjpeg.gyp b/third_party/libjpeg/libjpeg.gyp
index 1b0798b..a6e916c 100644
--- a/third_party/libjpeg/libjpeg.gyp
+++ b/third_party/libjpeg/libjpeg.gyp
@@ -5,7 +5,7 @@
 {
   'variables': {
     'conditions': [
-      [ 'OS=="linux"', {
+      [ 'OS=="linux" or OS=="freebsd"', {
         # Link to system .so since we already use it due to GTK.
         'use_system_libjpeg%': 1,
       }, {  # OS!="linux"
diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp
index d29d8c1..f965f97 100644
--- a/third_party/libpng/libpng.gyp
+++ b/third_party/libpng/libpng.gyp
@@ -5,7 +5,7 @@
 {
   'variables': {
     'conditions': [
-      [ 'OS=="linux"', {
+      [ 'OS=="linux" or OS=="freebsd"', {
         # Link to system .so since we already use it due to GTK.
         'use_system_libpng%': 1,
       }, {  # OS!="linux"
diff --git a/third_party/libxslt/libxslt.gyp b/third_party/libxslt/libxslt.gyp
index 1f62810..cb18654 100644
--- a/third_party/libxslt/libxslt.gyp
+++ b/third_party/libxslt/libxslt.gyp
@@ -15,7 +15,7 @@
     {
       'target_name': 'libxslt',
       'conditions': [
-        ['OS=="linux" and use_system_libxslt', {
+        ['(OS=="linux" or OS=="freebsd") and use_system_libxslt', {
           'type': 'settings',
           'direct_dependent_settings': {
             'cflags': [
diff --git a/third_party/npapi/npapi.gyp b/third_party/npapi/npapi.gyp
index d518240..40e76b7 100644
--- a/third_party/npapi/npapi.gyp
+++ b/third_party/npapi/npapi.gyp
@@ -23,7 +23,7 @@
         'bindings/npruntime.h',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'sources': [
             'bindings/npapi_x11.h',
           ],
diff --git a/third_party/sqlite/sqlite.gyp b/third_party/sqlite/sqlite.gyp
index d0cc7ec..4fa10b3 100644
--- a/third_party/sqlite/sqlite.gyp
+++ b/third_party/sqlite/sqlite.gyp
@@ -29,7 +29,7 @@
             ],
           },
         }],
-        ['OS=="linux" and use_system_sqlite', {
+        ['(OS=="linux" or OS=="freebsd") and use_system_sqlite', {
           'type': 'settings',
           'direct_dependent_settings': {
             'cflags': [
@@ -226,7 +226,7 @@
     },
   ],
   'conditions': [
-    ['OS=="linux" and not use_system_sqlite', {
+    ['(OS=="linux" or OS=="freebsd") and not use_system_sqlite', {
       'targets': [
         {
           'target_name': 'sqlite_shell',
diff --git a/third_party/tcmalloc/chromium/src/config.h b/third_party/tcmalloc/chromium/src/config.h
index 812c67c..047b878 100644
--- a/third_party/tcmalloc/chromium/src/config.h
+++ b/third_party/tcmalloc/chromium/src/config.h
@@ -15,6 +15,8 @@
 #include "third_party/tcmalloc/chromium/src/config_win.h"
 #elif defined(OS_LINUX)
 #include "third_party/tcmalloc/chromium/src/config_linux.h"
+#elif defined(OS_FREEBSD)
+#include "third_party/tcmalloc/chromium/src/config_freebsd.h"
 #endif
 
 #endif // CONFIG_H_
diff --git a/third_party/tcmalloc/chromium/src/config_freebsd.h b/third_party/tcmalloc/chromium/src/config_freebsd.h
new file mode 100644
index 0000000..3ca0299
--- /dev/null
+++ b/third_party/tcmalloc/chromium/src/config_freebsd.h
@@ -0,0 +1,235 @@
+/* src/config.h.  Generated from config.h.in by configure.  */
+/* src/config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define to 1 if compiler supports __builtin_stack_pointer */
+/* #undef HAVE_BUILTIN_STACK_POINTER */
+
+/* Define to 1 if you have the <conflict-signal.h> header file. */
+/* #undef HAVE_CONFLICT_SIGNAL_H */
+
+/* Define to 1 if you have the declaration of `cfree', and to 0 if you don't.
+   */
+#define HAVE_DECL_CFREE 0
+
+/* Define to 1 if you have the declaration of `memalign', and to 0 if you
+   don't. */
+#define HAVE_DECL_MEMALIGN 0
+
+/* Define to 1 if you have the declaration of `posix_memalign', and to 0 if
+   you don't. */
+#define HAVE_DECL_POSIX_MEMALIGN 0
+
+/* Define to 1 if you have the declaration of `pvalloc', and to 0 if you
+   don't. */
+#define HAVE_DECL_PVALLOC 0
+
+/* Define to 1 if you have the declaration of `uname', and to 0 if you don't.
+   */
+#define HAVE_DECL_UNAME 1
+
+/* Define to 1 if you have the declaration of `valloc', and to 0 if you don't.
+   */
+#define HAVE_DECL_VALLOC 0
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define to 1 if the system has the type `Elf32_Versym'. */
+#define HAVE_ELF32_VERSYM 1
+
+/* Define to 1 if you have the <execinfo.h> header file. */
+#define HAVE_EXECINFO_H 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define HAVE_FCNTL_H 1
+
+/* Define to 1 if you have the <features.h> header file. */
+/* #undef HAVE_FEATURES_H */
+
+/* Define to 1 if you have the `geteuid' function. */
+#define HAVE_GETEUID 1
+
+/* Define to 1 if you have the `getpagesize' function. */
+#define HAVE_GETPAGESIZE 1
+
+/* Define to 1 if you have the <glob.h> header file. */
+#define HAVE_GLOB_H 1
+
+/* Define to 1 if you have the <grp.h> header file. */
+#define HAVE_GRP_H 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <libunwind.h> header file. */
+/* #undef HAVE_LIBUNWIND_H */
+
+/* Define to 1 if you have the <linux/ptrace.h> header file. */
+/* #undef HAVE_LINUX_PTRACE_H */
+
+/* Define to 1 if you have the <malloc.h> header file. */
+/* #undef HAVE_MALLOC_H */
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have a working `mmap' system call. */
+#define HAVE_MMAP 1
+
+/* define if the compiler implements namespaces */
+#define HAVE_NAMESPACES 1
+
+/* Define to 1 if you have the <poll.h> header file. */
+#define HAVE_POLL_H 1
+
+/* define if libc has program_invocation_name */
+/* #undef HAVE_PROGRAM_INVOCATION_NAME */
+
+/* Define if you have POSIX threads libraries and header files. */
+#define HAVE_PTHREAD 1
+
+/* Define to 1 if you have the <pwd.h> header file. */
+#define HAVE_PWD_H 1
+
+/* Define to 1 if you have the `sbrk' function. */
+#define HAVE_SBRK 1
+
+/* Define to 1 if you have the <sched.h> header file. */
+#define HAVE_SCHED_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if the system has the type `struct mallinfo'. */
+/* #undef HAVE_STRUCT_MALLINFO */
+
+/* Define to 1 if you have the <sys/prctl.h> header file. */
+/* #undef HAVE_SYS_PRCTL_H */
+
+/* Define to 1 if you have the <sys/resource.h> header file. */
+#define HAVE_SYS_RESOURCE_H 1
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#define HAVE_SYS_SOCKET_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/syscall.h> header file. */
+#define HAVE_SYS_SYSCALL_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <sys/wait.h> header file. */
+#define HAVE_SYS_WAIT_H 1
+
+/* Define to 1 if compiler supports __thread */
+#define HAVE_TLS 1
+
+/* Define to 1 if you have the <ucontext.h> header file. */
+#define HAVE_UCONTEXT_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the <unwind.h> header file. */
+/* #undef HAVE_UNWIND_H */
+
+/* define if your compiler has __attribute__ */
+#define HAVE___ATTRIBUTE__ 1
+
+/* Define to 1 if the system has the type `__int64'. */
+/* #undef HAVE___INT64 */
+
+/* prefix where we look for installed files */
+#define INSTALL_PREFIX "/usr/local"
+
+/* Define to 1 if int32_t is equivalent to intptr_t */
+/* #undef INT32_EQUALS_INTPTR */
+#if defined(__i386__)
+#define INT32_EQUALS_INTPTR 1
+#endif
+
+/* Define to 1 if your C compiler doesn't accept -c and -o together. */
+/* #undef NO_MINUS_C_MINUS_O */
+
+/* Name of package */
+#define PACKAGE "google-perftools"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "opensource@google.com"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "google-perftools"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "google-perftools 1.3"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "google-perftools"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "1.3"
+
+/* How to access the PC from a struct ucontext */
+#if defined(__i386__)
+#define PC_FROM_UCONTEXT uc_mcontext.mc_eip
+#else
+#define PC_FROM_UCONTEXT uc_mcontext.mc_rip
+#endif
+
+/* Always the empty-string on non-windows systems. On windows, should be
+   "__declspec(dllexport)". This way, when we compile the dll, we export our
+   functions/classes. It's safe to define this here because config.h is only
+   used internally, to compile the DLL, and every DLL source file #includes
+   "config.h" before anything else. */
+#define PERFTOOLS_DLL_DECL
+
+/* printf format code for printing a size_t and ssize_t */
+#define PRIdS "zd"
+
+/* printf format code for printing a size_t and ssize_t */
+#define PRIuS "zu"
+
+/* printf format code for printing a size_t and ssize_t */
+#define PRIxS "zx"
+
+/* Define to necessary symbol if this constant uses a non-standard name on
+   your system. */
+/* #undef PTHREAD_CREATE_JOINABLE */
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* the namespace where STL code like vector<> is defined */
+#define STL_NAMESPACE std
+
+/* Version number of package */
+#define VERSION "1.3"
+
+/* C99 says: define this to get the PRI... macros from stdint.h */
+#ifndef __STDC_FORMAT_MACROS
+# define __STDC_FORMAT_MACROS 1
+#endif
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
+
+
+#ifdef __MINGW32__
+#include "windows/mingw.h"
+#endif
+
diff --git a/third_party/tcmalloc/chromium/src/page_heap.h b/third_party/tcmalloc/chromium/src/page_heap.h
index 85ad979..382e2a4 100644
--- a/third_party/tcmalloc/chromium/src/page_heap.h
+++ b/third_party/tcmalloc/chromium/src/page_heap.h
@@ -222,7 +222,7 @@ class PageHeap {
   // span of exactly the specified length.  Else, returns NULL.
   Span* AllocLarge(Length n);
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_FREEBSD)
   // Coalesce span with neighboring spans if possible.  Add the
   // resulting span to the appropriate free list.
   void AddToFreeList(Span* span);
@@ -238,7 +238,7 @@ class PageHeap {
   // IncrementalScavenge(n) is called whenever n pages are freed.
   void IncrementalScavenge(Length n);
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_FREEBSD)
   // Release all pages in the specified free list for reuse by the OS
   // REQURES: list must be a "normal" list (i.e., not "returned")
   void ReleaseFreeList(Span* list);
diff --git a/third_party/tcmalloc/tcmalloc.gyp b/third_party/tcmalloc/tcmalloc.gyp
index 2c673f1..f8523f1 100644
--- a/third_party/tcmalloc/tcmalloc.gyp
+++ b/third_party/tcmalloc/tcmalloc.gyp
@@ -205,7 +205,7 @@
             'tcmalloc/src/profiler.cc',
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'sources!': [
             'page_heap.cc',
             'port.cc',
diff --git a/third_party/zlib/zlib.gyp b/third_party/zlib/zlib.gyp
index 36613a7..fa2182d 100644
--- a/third_party/zlib/zlib.gyp
+++ b/third_party/zlib/zlib.gyp
@@ -5,7 +5,7 @@
 {
   'variables': {
     'conditions': [
-      [ 'OS=="linux"', {
+      [ 'OS=="linux" or OS=="freebsd"', {
         # Link to system .so since we already use it due to GTK.
         'use_system_zlib%': 1,
       }, {  # OS!="linux"
diff --git a/views/view.cc b/views/view.cc
index 5dcc900..72a4a51 100644
--- a/views/view.cc
+++ b/views/view.cc
@@ -429,7 +429,7 @@ bool View::HitTest(const gfx::Point& l) const {
       // TODO: can this use SkRegion's contains instead?
 #if defined(OS_WIN)
       return !!PtInRegion(rgn, l.x(), l.y());
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
       return gdk_region_point_in(rgn.Get(), l.x(), l.y());
 #endif
     }
diff --git a/views/views.gyp b/views/views.gyp
index c48e5de..b909db6 100644
--- a/views/views.gyp
+++ b/views/views.gyp
@@ -13,7 +13,7 @@
       ['exclude', '/(gtk|win|x11)_[^/]*\\.cc$'],
     ],
     'conditions': [
-      ['OS=="linux"', {'sources/': [
+      ['OS=="linux" or OS=="freebsd"', {'sources/': [
         ['include', '/gtk/'],
         ['include', '_(gtk|linux|posix|skia|x)\\.cc$'],
         ['include', '/(gtk|x11)_[^/]*\\.cc$'],
@@ -297,7 +297,7 @@
         '../chrome/third_party/wtl/include',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../build/linux/system.gyp:x11',
@@ -375,7 +375,7 @@
         '<(SHARED_INTERMEDIATE_DIR)/app/app_resources/app_resources.rc',
       ],
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             '../build/linux/system.gyp:gtk',
             '../chrome/chrome.gyp:packed_resources',
diff --git a/webkit/default_plugin/plugin_impl.h b/webkit/default_plugin/plugin_impl.h
index 1bf9558..7b015b7 100644
--- a/webkit/default_plugin/plugin_impl.h
+++ b/webkit/default_plugin/plugin_impl.h
@@ -6,6 +6,6 @@
 #include "webkit/default_plugin/plugin_impl_win.h"
 #elif defined (OS_MACOSX)
 #include "webkit/default_plugin/plugin_impl_mac.h"
-#elif defined (OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "webkit/default_plugin/plugin_impl_gtk.h"
 #endif
diff --git a/webkit/glue/plugins/nphostapi.h b/webkit/glue/plugins/nphostapi.h
index 7985a57..34da401 100644
--- a/webkit/glue/plugins/nphostapi.h
+++ b/webkit/glue/plugins/nphostapi.h
@@ -309,7 +309,7 @@ typedef struct _NPNetscapeFuncs {
 //
 // NPAPI library entry points
 //
-#if defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_NIX)
 typedef NPError (API_CALL * NP_InitializeFunc)(NPNetscapeFuncs* pNFuncs,
                                                NPPluginFuncs* pPFuncs);
 #else
diff --git a/webkit/glue/plugins/plugin_host.cc b/webkit/glue/plugins/plugin_host.cc
index 0c6e54d..cbc02ae 100644
--- a/webkit/glue/plugins/plugin_host.cc
+++ b/webkit/glue/plugins/plugin_host.cc
@@ -706,7 +706,7 @@ NPError NPN_GetValue(NPP id, NPNVariable variable, void* value) {
       break;
     }
     case NPNVnetscapeWindow: {
-  #if defined(OS_WIN) || defined(OS_LINUX)
+  #if defined(OS_WIN) || defined(OS_NIX)
       scoped_refptr<NPAPI::PluginInstance> plugin = FindInstance(id);
       gfx::PluginWindowHandle handle = plugin->window_handle();
       *((void**)value) = (void*)handle;
@@ -722,7 +722,7 @@ NPError NPN_GetValue(NPP id, NPNVariable variable, void* value) {
       rv = NPERR_NO_ERROR;
       break;
     }
-  #if defined(OS_LINUX)
+  #if defined(TOOLKIT_GTK)
     case NPNVToolkit:
       // Tell them we are GTK2.  (The alternative is GTK 1.2.)
       *reinterpret_cast<int*>(value) = NPNVGtk2;
diff --git a/webkit/glue/plugins/plugin_lib.cc b/webkit/glue/plugins/plugin_lib.cc
index 0e5ccf6..b088175 100644
--- a/webkit/glue/plugins/plugin_lib.cc
+++ b/webkit/glue/plugins/plugin_lib.cc
@@ -103,7 +103,7 @@ NPError PluginLib::NP_Initialize() {
   if (host == 0)
     return NPERR_GENERIC_ERROR;
 
-#if defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_NIX)
   NPError rv = entry_points_.np_initialize(host->host_functions(),
                                            &plugin_funcs_);
 #else
@@ -176,7 +176,7 @@ bool PluginLib::Load() {
     if (entry_points_.np_initialize == 0)
       rv = false;
 
-#if !defined(OS_LINUX) && !defined(OS_FREEBSD)
+#if !defined(OS_NIX)
     entry_points_.np_getentrypoints =
         (NP_GetEntryPointsFunc)base::GetFunctionPointerFromNativeLibrary(
             library, "NP_GetEntryPoints");
@@ -196,7 +196,7 @@ bool PluginLib::Load() {
   if (rv) {
     plugin_funcs_.size = sizeof(plugin_funcs_);
     plugin_funcs_.version = (NP_VERSION_MAJOR << 8) | NP_VERSION_MINOR;
-#if !defined(OS_LINUX) && !defined(OS_FREEBSD) && !defined(OS_MACOSX)
+#if !defined(OS_POSIX)
     if (entry_points_.np_getentrypoints(&plugin_funcs_) != NPERR_NO_ERROR)
       rv = false;
 #else
diff --git a/webkit/glue/plugins/plugin_lib.h b/webkit/glue/plugins/plugin_lib.h
index 6af8f9c..9139e6c 100644
--- a/webkit/glue/plugins/plugin_lib.h
+++ b/webkit/glue/plugins/plugin_lib.h
@@ -33,7 +33,7 @@ class PluginLib : public base::RefCounted<PluginLib> {
   // Returns false if the library couldn't be found, or if it's not a plugin.
   static bool ReadWebPluginInfo(const FilePath& filename, WebPluginInfo* info);
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Parse the result of an NP_GetMIMEDescription() call.
   // This API is only used on Linux, and is exposed here for testing.
   static void ParseMIMEDescription(const std::string& description,
diff --git a/webkit/glue/plugins/plugin_list.h b/webkit/glue/plugins/plugin_list.h
index 822ac05..3c715c4 100644
--- a/webkit/glue/plugins/plugin_list.h
+++ b/webkit/glue/plugins/plugin_list.h
@@ -33,7 +33,7 @@ class PluginInstance;
 // This struct holds entry points into a plugin.  The entry points are
 // slightly different between Linux and other platforms.
 struct PluginEntryPoints {
-#if !defined(OS_LINUX) && !defined(OS_FREEBSD)
+#if !defined(OS_NIX)
   NP_GetEntryPointsFunc np_getentrypoints;
 #endif
   NP_InitializeFunc np_initialize;
diff --git a/webkit/glue/plugins/test/plugin_javascript_open_popup.cc b/webkit/glue/plugins/test/plugin_javascript_open_popup.cc
index 558aa71..0d3f0c0 100644
--- a/webkit/glue/plugins/test/plugin_javascript_open_popup.cc
+++ b/webkit/glue/plugins/test/plugin_javascript_open_popup.cc
@@ -5,7 +5,7 @@
 #include "build/build_config.h"
 #include "webkit/glue/plugins/test/plugin_javascript_open_popup.h"
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
 #include "third_party/npapi/bindings/npapi_x11.h"
 #endif
 #include "webkit/glue/plugins/test/plugin_client.h"
@@ -63,7 +63,7 @@ bool ExecuteJavascriptPopupWindowTargetPluginTest::CheckWindow(
   return false;
 }
 
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
 // This code blindly follows the same sorts of verifications done on
 // the Windows side.  Does it make sense on X?  Maybe not really, but
 // it can't hurt to do extra validations.
diff --git a/webkit/glue/resource_fetcher_unittest.cc b/webkit/glue/resource_fetcher_unittest.cc
index e1022a0..648a341 100644
--- a/webkit/glue/resource_fetcher_unittest.cc
+++ b/webkit/glue/resource_fetcher_unittest.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gtk/gtk.h>
 #endif
 
@@ -76,7 +76,7 @@ class FetcherDelegate {
 #if defined(OS_WIN)
     timer_id_ = ::SetTimer(NULL, NULL, interval,
                            &FetcherDelegate::TimerCallback);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     timer_id_ = g_timeout_add(interval, &FetcherDelegate::TimerCallback, NULL);
 #elif defined(OS_MACOSX)
     // CFAbsoluteTime is in seconds and |interval| is in ms, so make sure we
@@ -93,7 +93,7 @@ class FetcherDelegate {
   void DestroyTimer() {
 #if defined(OS_WIN)
     ::KillTimer(NULL, timer_id_);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     g_source_remove(timer_id_);
 #elif defined(OS_MACOSX)
     CFRunLoopRemoveTimer(CFRunLoopGetCurrent(), timer_id_,
@@ -108,7 +108,7 @@ class FetcherDelegate {
                                      DWORD ms) {
     instance_->TimerFired();
   }
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   static gboolean TimerCallback(gpointer data) {
     instance_->TimerFired();
     return true;
@@ -137,7 +137,7 @@ class FetcherDelegate {
  private:
 #if defined(OS_WIN)
   UINT_PTR timer_id_;
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   guint timer_id_;
 #elif defined(OS_MACOSX)
   CFRunLoopTimerRef timer_id_;
diff --git a/webkit/glue/webclipboard_impl.cc b/webkit/glue/webclipboard_impl.cc
index 4d73652..cf9cdbd 100644
--- a/webkit/glue/webclipboard_impl.cc
+++ b/webkit/glue/webclipboard_impl.cc
@@ -173,7 +173,7 @@ bool WebClipboardImpl::ConvertBufferType(Buffer buffer,
       *result = Clipboard::BUFFER_STANDARD;
       break;
     case BufferSelection:
-#if defined(OS_LINUX)
+#if defined(USE_X11)
       *result = Clipboard::BUFFER_SELECTION;
       break;
 #endif
diff --git a/webkit/glue/webdevtoolsfrontend_impl.cc b/webkit/glue/webdevtoolsfrontend_impl.cc
index c6012bc..26fc651 100644
--- a/webkit/glue/webdevtoolsfrontend_impl.cc
+++ b/webkit/glue/webdevtoolsfrontend_impl.cc
@@ -389,6 +389,8 @@ v8::Handle<v8::Value> WebDevToolsFrontendImpl::JsPlatform(
   return v8String("mac-leopard");
 #elif defined OS_LINUX
   return v8String("linux");
+#elif defined OS_FREEBSD
+  return v8String("freebsd");
 #else
   return v8String("windows");
 #endif
diff --git a/webkit/glue/webkit_glue.cc b/webkit/glue/webkit_glue.cc
index 0b3c39b..3d6d869 100644
--- a/webkit/glue/webkit_glue.cc
+++ b/webkit/glue/webkit_glue.cc
@@ -8,7 +8,7 @@
 #if defined(OS_WIN)
 #include <objidl.h>
 #include <mlang.h>
-#elif defined(OS_LINUX) || defined(OS_FREEBSD)
+#elif defined(OS_NIX)
 #include <sys/utsname.h>
 #endif
 
@@ -421,7 +421,7 @@ void BuildUserAgent(bool mimic_chrome1, bool mimic_windows,
       "Windows";
 #elif defined(OS_MACOSX)
       "Macintosh";
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
       "X11";              // strange, but that's what Firefox uses
 #else
       "?";
@@ -499,7 +499,7 @@ const std::string& GetUserAgent(const GURL& url) {
         BuildUserAgent(true, false, &g_user_agent->mimic_chrome1_user_agent);
       return g_user_agent->mimic_chrome1_user_agent;
     }
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     else if (MatchPatternASCII(url.host(), "*.mail.yahoo.com")) {
       // mail.yahoo.com is ok with Windows Chrome but not Linux Chrome.
       // http://bugs.chromium.org/11136
diff --git a/webkit/glue/webkit_resources.grd b/webkit/glue/webkit_resources.grd
index c867271..3411c9e 100644
--- a/webkit/glue/webkit_resources.grd
+++ b/webkit/glue/webkit_resources.grd
@@ -30,7 +30,7 @@
       <include name="IDR_MEDIA_SLIDER_THUMB" file="resources\media_slider_thumb.png" type="BINDATA" />
       <include name="IDR_MEDIA_VOLUME_SLIDER_THUMB" file="resources\media_volume_slider_thumb.png" type="BINDATA" />
 
-      <if expr="os == 'linux2'">
+      <if expr="os == 'linux2' or os == 'freebsd7'">
         <include name="IDR_LINUX_CHECKBOX_OFF" file="resources\linux-checkbox-off.png" type="BINDATA" />
         <include name="IDR_LINUX_CHECKBOX_ON" file="resources\linux-checkbox-on.png" type="BINDATA" />
         <include name="IDR_LINUX_CHECKBOX_DISABLED_OFF" file="resources\linux-checkbox-disabled-off.png" type="BINDATA" />
diff --git a/webkit/glue/webkitclient_impl.cc b/webkit/glue/webkitclient_impl.cc
index c7673cf..62f792c 100644
--- a/webkit/glue/webkitclient_impl.cc
+++ b/webkit/glue/webkitclient_impl.cc
@@ -208,7 +208,7 @@ WebData WebKitClientImpl::loadResource(const char* name) {
     { "mediaSoundDisabled", IDR_MEDIA_SOUND_DISABLED },
     { "mediaSliderThumb", IDR_MEDIA_SLIDER_THUMB },
     { "mediaVolumeSliderThumb", IDR_MEDIA_VOLUME_SLIDER_THUMB },
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     { "linuxCheckboxOff", IDR_LINUX_CHECKBOX_OFF },
     { "linuxCheckboxOn", IDR_LINUX_CHECKBOX_ON },
     { "linuxCheckboxDisabledOff", IDR_LINUX_CHECKBOX_DISABLED_OFF },
diff --git a/webkit/tools/layout_tests/layout_package/platform_utils.py b/webkit/tools/layout_tests/layout_package/platform_utils.py
index 2b6755b..4f07be5 100644
--- a/webkit/tools/layout_tests/layout_package/platform_utils.py
+++ b/webkit/tools/layout_tests/layout_package/platform_utils.py
@@ -21,5 +21,5 @@ if sys.platform in ('cygwin', 'win32'):
   from platform_utils_win import *
 elif sys.platform == 'darwin':
   from platform_utils_mac import *
-elif sys.platform in ('linux', 'linux2'):
+elif sys.platform in ('linux', 'linux2', 'freebsd7'):
   from platform_utils_linux import *
diff --git a/webkit/tools/npapi_layout_test_plugin/main.cpp b/webkit/tools/npapi_layout_test_plugin/main.cpp
index 1b41f7e..c255a66 100644
--- a/webkit/tools/npapi_layout_test_plugin/main.cpp
+++ b/webkit/tools/npapi_layout_test_plugin/main.cpp
@@ -49,21 +49,21 @@
 #define EXPORT
 #endif
 
-#if defined(OS_LINUX)
+#if defined(USE_X11)
 #include <X11/Xlib.h>
 #endif
 
 // Plugin entry points
 extern "C" {
     EXPORT NPError NPAPI NP_Initialize(NPNetscapeFuncs *browserFuncs
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
                                 , NPPluginFuncs *pluginFuncs
 #endif
                                 );
     EXPORT NPError NPAPI NP_GetEntryPoints(NPPluginFuncs *pluginFuncs);
     EXPORT void NPAPI NP_Shutdown(void);
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     EXPORT NPError NPAPI NP_GetValue(NPP instance, NPPVariable variable, void *value);
     EXPORT const char* NPAPI NP_GetMIMEDescription(void);
 #endif
@@ -71,13 +71,13 @@ extern "C" {
 
 // Plugin entry points
 EXPORT NPError NPAPI NP_Initialize(NPNetscapeFuncs *browserFuncs
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
                             , NPPluginFuncs *pluginFuncs
 #endif
 )
 {
     browser = browserFuncs;
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     return NP_GetEntryPoints(pluginFuncs);
 #else
     return NPERR_NO_ERROR;
@@ -318,7 +318,7 @@ int16 NPP_HandleEvent(NPP instance, void *event)
 
     fflush(stdout);
 
-#elif defined(OS_LINUX)
+#elif defined(USE_X11)
     XEvent* evt = static_cast<XEvent*>(event);
     XButtonPressedEvent* bpress_evt = reinterpret_cast<XButtonPressedEvent*>(evt);
     XButtonReleasedEvent* brelease_evt = reinterpret_cast<XButtonReleasedEvent*>(evt);
@@ -445,7 +445,7 @@ NPError NPP_GetValue(NPP instance, NPPVariable variable, void *value)
     NPError err = NPERR_NO_ERROR;
 
     switch (variable) {
-#if defined(OS_LINUX)
+#if defined(USE_X11)
         case NPPVpluginNameString:
             *((const char **)value) = "WebKit Test PlugIn";
             break;
@@ -478,7 +478,7 @@ NPError NPP_SetValue(NPP instance, NPNVariable variable, void *value)
     return NPERR_GENERIC_ERROR;
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 EXPORT NPError NPAPI NP_GetValue(NPP instance, NPPVariable variable, void *value)
 {
     return NPP_GetValue(instance, variable, value);
diff --git a/webkit/tools/pepper_test_plugin/main.cc b/webkit/tools/pepper_test_plugin/main.cc
index 1b7da69..bc2e785 100644
--- a/webkit/tools/pepper_test_plugin/main.cc
+++ b/webkit/tools/pepper_test_plugin/main.cc
@@ -103,7 +103,7 @@ extern "C" {
 //__declspec(dllexport)
 #endif
 NPError NPAPI NP_Initialize(NPNetscapeFuncs* browser_funcs
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
                             , NPPluginFuncs* plugin_funcs
 #endif
                             );
@@ -118,7 +118,7 @@ NPError NPAPI NP_GetEntryPoints(NPPluginFuncs* plugin_funcs);
 void NPAPI NP_Shutdown() {
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 NPError NP_GetValue(NPP instance, NPPVariable variable, void* value);
 const char* NP_GetMIMEDescription();
 #endif
@@ -127,12 +127,12 @@ const char* NP_GetMIMEDescription();
 
 // Plugin entry points
 NPError NPAPI NP_Initialize(NPNetscapeFuncs* browser_funcs
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
                             , NPPluginFuncs* plugin_funcs
 #endif
                             ) {
   browser = browser_funcs;
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   return NP_GetEntryPoints(plugin_funcs);
 #else
   return NPERR_NO_ERROR;
@@ -236,7 +236,7 @@ NPError NPP_GetValue(NPP instance, NPPVariable variable, void* value) {
   NPError err = NPERR_NO_ERROR;
 
   switch (variable) {
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
     case NPPVpluginNameString:
       *((const char**)value) = "Pepper Test PlugIn";
       break;
@@ -268,7 +268,7 @@ NPError NPP_SetValue(NPP instance, NPNVariable variable, void* value) {
   return NPERR_GENERIC_ERROR;
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
 NPError NP_GetValue(NPP instance, NPPVariable variable, void* value) {
   return NPP_GetValue(instance, variable, value);
 }
diff --git a/webkit/tools/test_shell/event_sending_controller.cc b/webkit/tools/test_shell/event_sending_controller.cc
index 77a27d8..7d4c8a7 100644
--- a/webkit/tools/test_shell/event_sending_controller.cc
+++ b/webkit/tools/test_shell/event_sending_controller.cc
@@ -146,7 +146,7 @@ void ApplyKeyModifier(const std::wstring& arg, WebKeyboardEvent* event) {
     event->modifiers |= WebInputEvent::ShiftKey;
   } else if (!wcscmp(arg_string, L"altKey")) {
     event->modifiers |= WebInputEvent::AltKey;
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if !defined(OS_MACOSX)
     // On Windows all keys with Alt modifier will be marked as system key.
     // We keep the same behavior on Linux, see:
     // third_party/WebKit/WebKit/chromium/src/gtk/WebInputEventFactory.cpp
diff --git a/webkit/tools/test_shell/keyboard_unittest.cc b/webkit/tools/test_shell/keyboard_unittest.cc
index 65ac39b..f92d4ff 100644
--- a/webkit/tools/test_shell/keyboard_unittest.cc
+++ b/webkit/tools/test_shell/keyboard_unittest.cc
@@ -64,7 +64,7 @@ class KeyboardTest : public testing::Test {
   // platforms, but meta (command) on Mac.
   const char* InterpretOSModifierKeyPress(char key_code) {
     WebKeyboardEvent keyboard_event;
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
     WebInputEvent::Modifiers os_modifier = WebInputEvent::ControlKey;
 #elif defined(OS_MACOSX)
     WebInputEvent::Modifiers os_modifier = WebInputEvent::MetaKey;
diff --git a/webkit/tools/test_shell/media_leak_test.cc b/webkit/tools/test_shell/media_leak_test.cc
index e56054b..e9c2213 100644
--- a/webkit/tools/test_shell/media_leak_test.cc
+++ b/webkit/tools/test_shell/media_leak_test.cc
@@ -12,7 +12,7 @@
 class MediaLeakTest : public TestShellTest {
 };
 
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
 
 // This test plays a Theora video file for 1 second. It tries to expose
 // memory leaks during a normal playback.
diff --git a/webkit/tools/test_shell/mock_webclipboard_impl.cc b/webkit/tools/test_shell/mock_webclipboard_impl.cc
index 867d076..b53f3e4 100644
--- a/webkit/tools/test_shell/mock_webclipboard_impl.cc
+++ b/webkit/tools/test_shell/mock_webclipboard_impl.cc
@@ -33,7 +33,7 @@ bool MockWebClipboardImpl::isFormatAvailable(Format format, Buffer buffer) {
     case BufferStandard:
       break;
     case BufferSelection:
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
       break;
 #endif
     default:
diff --git a/webkit/tools/test_shell/plugin_tests.cc b/webkit/tools/test_shell/plugin_tests.cc
index 4dc58da..accd137 100644
--- a/webkit/tools/test_shell/plugin_tests.cc
+++ b/webkit/tools/test_shell/plugin_tests.cc
@@ -26,7 +26,7 @@ using WebKit::WebString;
 #define TEST_PLUGIN_NAME "npapi_test_plugin.dll"
 #elif defined(OS_MACOSX)
 #define TEST_PLUGIN_NAME "npapi_test_plugin.plugin"
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
 #define TEST_PLUGIN_NAME "libnpapi_test_plugin.so"
 #endif
 
diff --git a/webkit/tools/test_shell/test_shell.cc b/webkit/tools/test_shell/test_shell.cc
index 9793381..4ca7e0a 100644
--- a/webkit/tools/test_shell/test_shell.cc
+++ b/webkit/tools/test_shell/test_shell.cc
@@ -300,7 +300,7 @@ std::string TestShell::DumpImage(skia::PlatformCanvas* canvas,
 #if defined(OS_WIN)
   bool discard_transparency = true;
   device.makeOpaque(0, 0, src_bmp.width(), src_bmp.height());
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   bool discard_transparency = true;
 #elif defined(OS_MACOSX)
   bool discard_transparency = false;
diff --git a/webkit/tools/test_shell/test_shell.gyp b/webkit/tools/test_shell/test_shell.gyp
index 1b5ff01..07c6d58 100644
--- a/webkit/tools/test_shell/test_shell.gyp
+++ b/webkit/tools/test_shell/test_shell.gyp
@@ -134,7 +134,7 @@
             'npapi_test_plugin',
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             'test_shell_resources',
             '../../../build/linux/system.gyp:gtk',
@@ -148,7 +148,7 @@
             ['exclude', '_x11\\.cc$'],
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           # See below TODO in the Windows branch.
           'copies': [
             {
@@ -212,7 +212,7 @@
         'pak_path': '<(INTERMEDIATE_DIR)/repack/test_shell.pak',
       },
       'conditions': [
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'actions': [
             {
               'action_name': 'test_shell_repack',
@@ -295,7 +295,7 @@
             '<(SHARED_INTERMEDIATE_DIR)/webkit/webkit_strings_en-US.rc',
           ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'conditions': [
             ['linux_use_tcmalloc==1', {
               'dependencies': [
@@ -443,7 +443,7 @@
           ],
           'sources': [ '<@(test_shell_windows_resource_files)' ],
         }],
-        ['OS=="linux"', {
+        ['OS=="linux" or OS=="freebsd"', {
           'dependencies': [
             'test_shell_pak',
             '../../../build/linux/system.gyp:gtk',
@@ -555,7 +555,7 @@
             ],
           },
         }],
-        ['OS=="linux" and (target_arch=="x64" or target_arch=="arm")', {
+        ['(OS=="linux" or OS=="freebsd") and (target_arch=="x64" or target_arch=="arm")', {
           # Shared libraries need -fPIC on x86-64
           'cflags': ['-fPIC']
         }],
@@ -651,13 +651,13 @@
                 ],
               },
             }],
-            ['OS=="linux"', {
+            ['OS=="linux" or OS=="freebsd"', {
               'sources!': [
                 # Needs simple event record type porting
                 '../../glue/plugins/test/plugin_windowless_test.cc',
               ],
             }],
-            ['OS=="linux" and (target_arch=="x64" or target_arch=="arm")', {
+            ['(OS=="linux" or OS=="freebsd") and (target_arch=="x64" or target_arch=="arm")', {
               # Shared libraries need -fPIC on x86-64
               'cflags': ['-fPIC']
             }],
@@ -665,7 +665,7 @@
         },
       ],
     }],
-    ['OS=="linux"', {
+    ['OS=="linux"  or OS=="freebsd"', {
       'targets': [
         {
           'target_name': 'test_shell_resources',
diff --git a/webkit/tools/test_shell/test_shell_request_context.cc b/webkit/tools/test_shell/test_shell_request_context.cc
index d7055b6..07882d8 100644
--- a/webkit/tools/test_shell/test_shell_request_context.cc
+++ b/webkit/tools/test_shell/test_shell_request_context.cc
@@ -37,7 +37,7 @@ void TestShellRequestContext::Init(
   accept_language_ = "en-us,en";
   accept_charset_ = "iso-8859-1,*,utf-8";
 
-#if defined(OS_LINUX)
+#if defined(OS_NIX)
   // Use no proxy to avoid ProxyConfigServiceLinux.
   // Enabling use of the ProxyConfigServiceLinux requires:
   // -Calling from a thread with a TYPE_UI MessageLoop,
diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc
index 3252ace..ed0f051 100644
--- a/webkit/tools/test_shell/test_webview_delegate.cc
+++ b/webkit/tools/test_shell/test_webview_delegate.cc
@@ -975,7 +975,7 @@ TestWebViewDelegate::TestWebViewDelegate(TestShell* shell)
       page_id_(-1),
       last_page_id_updated_(-1),
       using_fake_rect_(false),
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
       cursor_type_(GDK_X_CURSOR),
 #endif
       smart_insert_delete_enabled_(true),
diff --git a/webkit/tools/test_shell/test_webview_delegate.h b/webkit/tools/test_shell/test_webview_delegate.h
index 079cb5a..6b71eec 100644
--- a/webkit/tools/test_shell/test_webview_delegate.h
+++ b/webkit/tools/test_shell/test_webview_delegate.h
@@ -18,7 +18,7 @@
 #include <map>
 #include <string>
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include <gdk/gdkcursor.h>
 #endif
 
@@ -352,7 +352,7 @@ class TestWebViewDelegate : public WebKit::WebViewClient,
   scoped_refptr<TestDropDelegate> drop_delegate_;
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   // The type of cursor the window is currently using.
   // Used for judging whether a new SetCursor call is actually changing the
   // cursor.
diff --git a/webkit/tools/test_shell/webview_host.h b/webkit/tools/test_shell/webview_host.h
index f9fd21a..95faf3d 100644
--- a/webkit/tools/test_shell/webview_host.h
+++ b/webkit/tools/test_shell/webview_host.h
@@ -11,7 +11,7 @@
 #include "base/basictypes.h"
 #include "base/gfx/rect.h"
 #include "webkit/tools/test_shell/webwidget_host.h"
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
 #include "webkit/glue/plugins/gtk_plugin_container_manager.h"
 #endif
 
@@ -34,7 +34,7 @@ class WebViewHost : public WebWidgetHost {
 
   WebKit::WebView* webview() const;
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   // Create a new plugin parent container for a given plugin XID.
   void CreatePluginContainer(gfx::PluginWindowHandle id);
 
@@ -55,7 +55,7 @@ class WebViewHost : public WebWidgetHost {
   }
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   // Helper class that creates and moves plugin containers.
   GtkPluginContainerManager plugin_container_manager_;
 #endif
diff --git a/webkit/tools/test_shell/webwidget_host.h b/webkit/tools/test_shell/webwidget_host.h
index cf66ed8..fe9a1be 100644
--- a/webkit/tools/test_shell/webwidget_host.h
+++ b/webkit/tools/test_shell/webwidget_host.h
@@ -94,7 +94,7 @@ class WebWidgetHost {
   void KeyEvent(NSEvent *);
   void SetFocus(bool enable);
  protected:
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
  public:
   // ---------------------------------------------------------------------------
   // This is needed on Linux because the GtkWidget creation is the same between
@@ -139,7 +139,7 @@ class WebWidgetHost {
   bool track_mouse_leave_;
 #endif
 
-#if defined(OS_LINUX)
+#if defined(TOOLKIT_GTK)
   // Since GtkWindow resize is asynchronous, we have to stash the dimensions,
   // so that the backing store doesn't have to wait for sizing to take place.
   gfx::Size logical_size_;
